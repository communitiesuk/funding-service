services:
  db:
    image: postgres:16@sha256:301bcb60b8a3ee4ab7e147932723e3abd1cef53516ce5210b39fd9fe5e3602ae
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres  # pragma: allowlist secret
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ofs

  funding-service:
    build: .
    init: true
    volumes:
      - .:/app
      - /app/node_modules
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    ports:
      - "5173:5173" # vite server
      - "8080:8080" # application
      - "8081:8081" # debugpy
    stdin_open: true
    tty: true
    command: > # The single & on line 33 puts vite into background mode so it doesn't take over the logs
      bash -c "
      cp /app/certs/rootCA.pem /usr/local/share/ca-certificates/rootCA.crt && \
      update-ca-certificates && \
      uv run flask db upgrade && \
      uv run flask developers seed-grants

      npm run dev -- --host &
      PYDEVD_DISABLE_FILE_VALIDATION=1 python -m debugpy --listen 0.0.0.0:8081 -m flask run --host 0.0.0.0 --port 8080 --reload --debug --cert=/app/certs/cert.pem --key=/app/certs/key.pem
      "
    env_file: .env
    environment:
      FLASK_APP: app
      FLASK_ENV: local
      DATABASE_HOST: "db"
      DATABASE_PORT: 5432
      DATABASE_NAME: "postgres"
      DATABASE_SECRET: '{"username":"postgres","password":"postgres"}'  # pragma:allowlist secret
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      WERKZEUG_DEBUG_PIN: off
    depends_on:
      - db
    networks:
      - ofs
    healthcheck:
      test: ["CMD", "curl", "-f", "https://funding.communities.gov.localhost:8080/healthcheck"]
      interval: 60s
      timeout: 5s
      retries: 2
      start_period: 20s
      start_interval: 1s

  sso:
    build: .
    volumes:
      - .:/app
      - /app/node_modules
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    ports:
      - "4005:4005" # application
      - "4006:4006" # debugpy
    stdin_open: true
    tty: true
    command: >
      bash -c "
      cp /app/certs/rootCA.pem /usr/local/share/ca-certificates/rootCA.crt && \
      update-ca-certificates

      uv run python -m debugpy --listen 0.0.0.0:4006 -m flask run --host 0.0.0.0 --port 4005 --reload --debug --cert=/app/certs/cert.pem --key=/app/certs/key.pem
      "
    environment:
      FLASK_APP: "stubs.sso:create_sso_stub_app"
      WERKZEUG_DEBUG_PIN: off
      ASSETS_VITE_LIVE_ENABLED: true
      FLASK_ENV: local
    networks:
      ofs:
        aliases:
          - sso.communities.gov.localhost

volumes:
  postgres_data:
  localstack_data:

networks:
  ofs:
