name: Paketo build CI
run-name: Build ${{ github.ref_name }}

permissions:
  contents: read
  id-token: write  # Needed for OIDC to AWS

on:
  workflow_call:
    secrets:
      SLACK_BOT_TOKEN:
        required: true
      TEMP_SLACK_CHANNEL_ID:
        required: true
      CI_AWS_ACCOUNT:
        required: true
    outputs:
      ecr_image_location:
        description: "A URI pointing to the paketo-built image in ECR"
        value: ${{ jobs.paketo_build.outputs.ecr_image_location }}

jobs:
  paketo_build:
    runs-on: ubuntu-latest
    name: Paketo
    outputs:
      ecr_image_location: ${{ steps.build_and_publish.outputs.ecr_image_location }}

    steps:
      - uses: buildpacks/github-actions/setup-pack@v5.9.1
      - uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.CI_AWS_ACCOUNT }}:role/terraform-developer
          aws-region: eu-west-2  # adjust as needed

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13.5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync

      - name: vite
        run: |
          npm ci
          npm run build

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and publish app image to ECR
        id: build_and_publish
        run: |
          AWS_ACCOUNT_ID=${{ secrets.CI_AWS_ACCOUNT }}
          AWS_REGION="eu-west-2"  
          REPO_NAME="funding-service-ci-shared-app"      
          IMAGE_TAG=${{ github.sha }}

          ECR_IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:$IMAGE_TAG"
          LATEST_TAG=""

          if [ "${{ github.ref_name }}" == "main" ]; then
            LATEST_TAG="--tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:latest"
          fi

          uv export --format requirements-txt --no-hashes > requirements.txt

          pack build "$ECR_IMAGE_URI" $LATEST_TAG \
            --builder paketobuildpacks/builder-jammy-full \
            --publish

          echo "::add-mask::$ECR_IMAGE_URI"

  notify_slack:
    needs:
      - paketo_build
    if: ${{ always() && needs.paketo_build.result == 'failure' && github.ref_name == 'main'}}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/notify-slack-deployment-failed.yml@main
    with:
      app_name: FS Paketo
      env_name: 'build'
      github_username: ${{ github.actor }}
      workflow_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      compare_url: ${{ github.event_name == 'push' && github.event.compare || null }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_NOTIFICATION_CHANNEL_ID: ${{ secrets.TEMP_SLACK_CHANNEL_ID }}
