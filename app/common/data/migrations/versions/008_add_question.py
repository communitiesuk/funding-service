"""empty message

Revision ID: 008_
Revises: 007_add_section_form
Create Date: 2025-05-13 18:18:09.857946

"""

import sqlalchemy as sa
from alembic import op

revision = "008_add_question"
down_revision = "007_add_section_form"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "question_group",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("allow_add_another", sa.Boolean(), nullable=False),
        sa.Column("show_all_on_same_page", sa.Boolean(), nullable=False),
        sa.Column("item_limit", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_question_group")),
    )
    op.create_table(
        "submission",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("data", sa.JSON(), nullable=False),
        sa.Column("status", sa.Enum("CREATED", "COMPLETED", name="submissiontype"), nullable=False),
        sa.Column("collection_schema_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["collection_schema_id"],
            ["collection_schema.id"],
            name=op.f("fk_submission_collection_schema_id_collection_schema"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_submission")),
    )
    op.create_table(
        "question",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("hint", sa.String(), nullable=False),
        sa.Column("data_source", sa.JSON(), nullable=False),
        sa.Column("data_type", sa.Enum("TEXT", "INT", "CONTACT_DETAILS", name="datatype"), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("form_id", sa.Uuid(), nullable=False),
        sa.Column("group_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(["form_id"], ["form.id"], name=op.f("fk_question_form_id_form")),
        sa.ForeignKeyConstraint(["group_id"], ["question_group.id"], name=op.f("fk_question_group_id_question_group")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_question")),
        sa.UniqueConstraint("name", "form_id", name="uq_form_name_question"),
        sa.UniqueConstraint("order", "form_id", deferrable="True", name="uq_form_order_question"),
        sa.UniqueConstraint("title", "form_id", name="uq_form_title_question"),
    )
    op.create_table(
        "condition",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("expression", sa.String(), nullable=False),
        sa.Column("type", sa.Enum("ANSWER_EQUALS", "ANSWER_NOT_EQUALS", name="conditiontype"), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("context", sa.String(), nullable=False),
        sa.Column("depends_on_question_id", sa.Uuid(), nullable=False),
        sa.Column("question_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["depends_on_question_id"], ["question.id"], name=op.f("fk_condition_depends_on_question_id_question")
        ),
        sa.ForeignKeyConstraint(["question_id"], ["question.id"], name=op.f("fk_condition_question_id_question")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_condition")),
    )
    op.create_table(
        "validation",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at_utc", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("expression", sa.String(), nullable=False),
        sa.Column("type", sa.Enum("ANSWER_EQUALS", "ANSWER_NOT_EQUALS", name="conditiontype"), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("message", sa.String(), nullable=False),
        sa.Column("context", sa.String(), nullable=False),
        sa.Column("question_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["question_id"], ["question.id"], name=op.f("fk_validation_question_id_question")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_validation")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("validation")
    op.drop_table("condition")
    op.drop_table("question")
    op.drop_table("submission")
    op.drop_table("question_group")
    # ### end Alembic commands ###
