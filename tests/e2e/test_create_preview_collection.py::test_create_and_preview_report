versions pytest-8.4.2, python-3.13.7.final.0
invocation_dir=/Users/sarahsloan1/dev/funding-service
cwd=/Users/sarahsloan1/dev/funding-service
args=('--e2e', '--headed', '--debug', 'tests/e2e/test_create_preview_collection.py::test_create_and_preview_report', '--no-header', '--no-summary', '-q')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x106844910>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x106844910>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x106de5fd0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x106de6e40>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <teamcity.pytest_plugin.EchoTeamCityMessages object at 0x106de7230>
          plugin_name: 4410208816
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: rlcompleter [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x106759d10>
          plugin_name: 4403338512
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x106844910>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'teamcity.pytest_plugin' from '/Applications/PyCharm.app/Contents/plugins/python-ce/helpers/pycharm/teamcity/pytest_plugin.py'>
          plugin_name: teamcity.pytest_plugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '__main__.Plugin'>
          plugin_name: Plugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_flask.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_flask/plugin.py'>
          plugin_name: flask
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_env.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_env/plugin.py'>
          plugin_name: env
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/xdist/plugin.py'>
          plugin_name: xdist
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.looponfail' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/xdist/looponfail.py'>
          plugin_name: xdist.looponfail
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mock' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_mock/__init__.py'>
          plugin_name: pytest_mock
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_fail_slow' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_fail_slow/__init__.py'>
          plugin_name: fail-slow
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'faker.contrib.pytest.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/faker/contrib/pytest/plugin.py'>
          plugin_name: faker
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_base_url.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_base_url/plugin.py'>
          plugin_name: base_url
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_playwright.pytest_playwright' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_playwright/pytest_playwright.py'>
          plugin_name: playwright
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'typeguard._pytest_plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/setuptools/_vendor/typeguard/_pytest_plugin.py'>
          plugin_name: typeguard
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<EncodedFile name="<_io.FileIO name=10 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<EncodedFile name="<_io.FileIO name=12 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'tests.conftest' from '/Users/sarahsloan1/dev/funding-service/tests/conftest.py'>
          plugin_name: /Users/sarahsloan1/dev/funding-service/tests/conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x106de5fd0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x106de6e40>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <teamcity.pytest_plugin.EchoTeamCityMessages object at 0x106de7230>
          plugin_name: 4410208816
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x116b11d30>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x116b12270>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x106759d10>
          plugin_name: 4403338512
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x106844910>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'teamcity.pytest_plugin' from '/Applications/PyCharm.app/Contents/plugins/python-ce/helpers/pycharm/teamcity/pytest_plugin.py'>
          plugin_name: teamcity.pytest_plugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '__main__.Plugin'>
          plugin_name: Plugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_flask.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_flask/plugin.py'>
          plugin_name: flask
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_env.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_env/plugin.py'>
          plugin_name: env
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/xdist/plugin.py'>
          plugin_name: xdist
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'xdist.looponfail' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/xdist/looponfail.py'>
          plugin_name: xdist.looponfail
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mock' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_mock/__init__.py'>
          plugin_name: pytest_mock
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_fail_slow' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_fail_slow/__init__.py'>
          plugin_name: fail-slow
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'faker.contrib.pytest.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/faker/contrib/pytest/plugin.py'>
          plugin_name: faker
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_base_url.plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_base_url/plugin.py'>
          plugin_name: base_url
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_playwright.pytest_playwright' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest_playwright/pytest_playwright.py'>
          plugin_name: playwright
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'typeguard._pytest_plugin' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/setuptools/_vendor/typeguard/_pytest_plugin.py'>
          plugin_name: typeguard
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<EncodedFile name="<_io.FileIO name=10 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<EncodedFile name="<_io.FileIO name=12 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'tests.conftest' from '/Users/sarahsloan1/dev/funding-service/tests/conftest.py'>
          plugin_name: /Users/sarahsloan1/dev/funding-service/tests/conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x106de5fd0>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x106de6e40>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <teamcity.pytest_plugin.EchoTeamCityMessages object at 0x106de7230>
          plugin_name: 4410208816
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x116b11d30>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x116b12270>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x116b12ba0>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['/Users/sarahsloan1/dev/funding-service'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=PosixPath('/Users/sarahsloan1/dev/funding-service'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: /Users/sarahsloan1/dev/funding-service
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir funding-service> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Dir funding-service> [collection]
      pytest_collectstart [hook]
          collector: <Dir funding-service>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir funding-service>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.dockerignore
            path: /Users/sarahsloan1/dev/funding-service/.dockerignore
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.dockerignore
            path: /Users/sarahsloan1/dev/funding-service/.dockerignore
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.env
            path: /Users/sarahsloan1/dev/funding-service/.env
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.env
            path: /Users/sarahsloan1/dev/funding-service/.env
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.env.example
            path: /Users/sarahsloan1/dev/funding-service/.env.example
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.env.example
            path: /Users/sarahsloan1/dev/funding-service/.env.example
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.git
            path: /Users/sarahsloan1/dev/funding-service/.git
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.git-blame-ignore-revs
            path: /Users/sarahsloan1/dev/funding-service/.git-blame-ignore-revs
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.git-blame-ignore-revs
            path: /Users/sarahsloan1/dev/funding-service/.git-blame-ignore-revs
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.github
            path: /Users/sarahsloan1/dev/funding-service/.github
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.gitignore
            path: /Users/sarahsloan1/dev/funding-service/.gitignore
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.gitignore
            path: /Users/sarahsloan1/dev/funding-service/.gitignore
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.idea
            path: /Users/sarahsloan1/dev/funding-service/.idea
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.import_linter_cache
            path: /Users/sarahsloan1/dev/funding-service/.import_linter_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.mypy_cache
            path: /Users/sarahsloan1/dev/funding-service/.mypy_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.nvmrc
            path: /Users/sarahsloan1/dev/funding-service/.nvmrc
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.nvmrc
            path: /Users/sarahsloan1/dev/funding-service/.nvmrc
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.pre-commit-config.yaml
            path: /Users/sarahsloan1/dev/funding-service/.pre-commit-config.yaml
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.pre-commit-config.yaml
            path: /Users/sarahsloan1/dev/funding-service/.pre-commit-config.yaml
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.prettierignore
            path: /Users/sarahsloan1/dev/funding-service/.prettierignore
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.prettierignore
            path: /Users/sarahsloan1/dev/funding-service/.prettierignore
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.prettierrc
            path: /Users/sarahsloan1/dev/funding-service/.prettierrc
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.prettierrc
            path: /Users/sarahsloan1/dev/funding-service/.prettierrc
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.pullpreview
            path: /Users/sarahsloan1/dev/funding-service/.pullpreview
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.pytest_cache
            path: /Users/sarahsloan1/dev/funding-service/.pytest_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.python-version
            path: /Users/sarahsloan1/dev/funding-service/.python-version
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/.python-version
            path: /Users/sarahsloan1/dev/funding-service/.python-version
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.ruff_cache
            path: /Users/sarahsloan1/dev/funding-service/.ruff_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.run
            path: /Users/sarahsloan1/dev/funding-service/.run
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.venv
            path: /Users/sarahsloan1/dev/funding-service/.venv
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/.vscode
            path: /Users/sarahsloan1/dev/funding-service/.vscode
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/Dockerfile
            path: /Users/sarahsloan1/dev/funding-service/Dockerfile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/Dockerfile
            path: /Users/sarahsloan1/dev/funding-service/Dockerfile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/LICENSE.md
            path: /Users/sarahsloan1/dev/funding-service/LICENSE.md
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/LICENSE.md
            path: /Users/sarahsloan1/dev/funding-service/LICENSE.md
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/Makefile
            path: /Users/sarahsloan1/dev/funding-service/Makefile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/Makefile
            path: /Users/sarahsloan1/dev/funding-service/Makefile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/Procfile
            path: /Users/sarahsloan1/dev/funding-service/Procfile
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/Procfile
            path: /Users/sarahsloan1/dev/funding-service/Procfile
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/README.md
            path: /Users/sarahsloan1/dev/funding-service/README.md
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/README.md
            path: /Users/sarahsloan1/dev/funding-service/README.md
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app
            path: /Users/sarahsloan1/dev/funding-service/app
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app
            parent: <Dir funding-service>
        finish pytest_collect_directory --> <Package app> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/certs
            path: /Users/sarahsloan1/dev/funding-service/certs
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/certs
            parent: <Dir funding-service>
        finish pytest_collect_directory --> <Dir certs> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/docker-compose.pullpreview.yml
            path: /Users/sarahsloan1/dev/funding-service/docker-compose.pullpreview.yml
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/docker-compose.pullpreview.yml
            path: /Users/sarahsloan1/dev/funding-service/docker-compose.pullpreview.yml
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/docker-compose.yml
            path: /Users/sarahsloan1/dev/funding-service/docker-compose.yml
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/docker-compose.yml
            path: /Users/sarahsloan1/dev/funding-service/docker-compose.yml
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/gunicorn.conf.py
            path: /Users/sarahsloan1/dev/funding-service/gunicorn.conf.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/gunicorn.conf.py
            path: /Users/sarahsloan1/dev/funding-service/gunicorn.conf.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/node_modules
            path: /Users/sarahsloan1/dev/funding-service/node_modules
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/package-lock.json
            path: /Users/sarahsloan1/dev/funding-service/package-lock.json
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/package-lock.json
            path: /Users/sarahsloan1/dev/funding-service/package-lock.json
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/package.json
            path: /Users/sarahsloan1/dev/funding-service/package.json
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/package.json
            path: /Users/sarahsloan1/dev/funding-service/package.json
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/project.toml
            path: /Users/sarahsloan1/dev/funding-service/project.toml
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/project.toml
            path: /Users/sarahsloan1/dev/funding-service/project.toml
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/pyproject.toml
            path: /Users/sarahsloan1/dev/funding-service/pyproject.toml
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/pyproject.toml
            path: /Users/sarahsloan1/dev/funding-service/pyproject.toml
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/renovate.json
            path: /Users/sarahsloan1/dev/funding-service/renovate.json
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/renovate.json
            path: /Users/sarahsloan1/dev/funding-service/renovate.json
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/scripts
            path: /Users/sarahsloan1/dev/funding-service/scripts
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/scripts
            parent: <Dir funding-service>
        finish pytest_collect_directory --> <Dir scripts> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/stubs
            path: /Users/sarahsloan1/dev/funding-service/stubs
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/stubs
            parent: <Dir funding-service>
        finish pytest_collect_directory --> <Dir stubs> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests
            path: /Users/sarahsloan1/dev/funding-service/tests
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests
            parent: <Dir funding-service>
        finish pytest_collect_directory --> <Package tests> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/uv.lock
            path: /Users/sarahsloan1/dev/funding-service/uv.lock
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/uv.lock
            path: /Users/sarahsloan1/dev/funding-service/uv.lock
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/vite.config.js
            path: /Users/sarahsloan1/dev/funding-service/vite.config.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/vite.config.js
            path: /Users/sarahsloan1/dev/funding-service/vite.config.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/wsgi.py
            path: /Users/sarahsloan1/dev/funding-service/wsgi.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/wsgi.py
            path: /Users/sarahsloan1/dev/funding-service/wsgi.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/wsgi_sso_stub.py
            path: /Users/sarahsloan1/dev/funding-service/wsgi_sso_stub.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir funding-service>
            file_path: /Users/sarahsloan1/dev/funding-service/wsgi_sso_stub.py
            path: /Users/sarahsloan1/dev/funding-service/wsgi_sso_stub.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport '.' lenresult=5 outcome='passed'> [hook]
    genitems <Package app> [collection]
      pytest_collectstart [hook]
          collector: <Package app>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package app>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package app>
            file_path: /Users/sarahsloan1/dev/funding-service/app/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding
            parent: <Package app>
        finish pytest_collect_directory --> <Dir access_grant_funding> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets
            path: /Users/sarahsloan1/dev/funding-service/app/assets
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets
            parent: <Package app>
        finish pytest_collect_directory --> <Dir assets> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common
            path: /Users/sarahsloan1/dev/funding-service/app/common
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common
            parent: <Package app>
        finish pytest_collect_directory --> <Package common> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/config.py
            path: /Users/sarahsloan1/dev/funding-service/app/config.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package app>
            file_path: /Users/sarahsloan1/dev/funding-service/app/config.py
            path: /Users/sarahsloan1/dev/funding-service/app/config.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/constants.py
            path: /Users/sarahsloan1/dev/funding-service/app/constants.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package app>
            file_path: /Users/sarahsloan1/dev/funding-service/app/constants.py
            path: /Users/sarahsloan1/dev/funding-service/app/constants.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding
            parent: <Package app>
        finish pytest_collect_directory --> <Package deliver_grant_funding> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers
            path: /Users/sarahsloan1/dev/funding-service/app/developers
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/developers
            parent: <Package app>
        finish pytest_collect_directory --> <Package developers> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/extensions
            path: /Users/sarahsloan1/dev/funding-service/app/extensions
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/extensions
            parent: <Package app>
        finish pytest_collect_directory --> <Package extensions> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/healthcheck.py
            path: /Users/sarahsloan1/dev/funding-service/app/healthcheck.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package app>
            file_path: /Users/sarahsloan1/dev/funding-service/app/healthcheck.py
            path: /Users/sarahsloan1/dev/funding-service/app/healthcheck.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/logging.py
            path: /Users/sarahsloan1/dev/funding-service/app/logging.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package app>
            file_path: /Users/sarahsloan1/dev/funding-service/app/logging.py
            path: /Users/sarahsloan1/dev/funding-service/app/logging.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/monkeypatch.py
            path: /Users/sarahsloan1/dev/funding-service/app/monkeypatch.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package app>
            file_path: /Users/sarahsloan1/dev/funding-service/app/monkeypatch.py
            path: /Users/sarahsloan1/dev/funding-service/app/monkeypatch.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/sentry.py
            path: /Users/sarahsloan1/dev/funding-service/app/sentry.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package app>
            file_path: /Users/sarahsloan1/dev/funding-service/app/sentry.py
            path: /Users/sarahsloan1/dev/funding-service/app/sentry.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/services
            path: /Users/sarahsloan1/dev/funding-service/app/services
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/services
            parent: <Package app>
        finish pytest_collect_directory --> <Package services> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/types.py
            path: /Users/sarahsloan1/dev/funding-service/app/types.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package app>
            file_path: /Users/sarahsloan1/dev/funding-service/app/types.py
            path: /Users/sarahsloan1/dev/funding-service/app/types.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app' lenresult=7 outcome='passed'> [hook]
    genitems <Dir access_grant_funding> [collection]
      pytest_collectstart [hook]
          collector: <Dir access_grant_funding>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir access_grant_funding>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/routes.py
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/routes.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir access_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/routes.py
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/routes.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates
            parent: <Dir access_grant_funding>
        finish pytest_collect_directory --> <Dir templates> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/access_grant_funding' lenresult=1 outcome='passed'> [hook]
    genitems <Dir templates> [collection]
      pytest_collectstart [hook]
          collector: <Dir templates>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir templates>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates/access_grant_funding
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates/access_grant_funding
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates/access_grant_funding
            parent: <Dir templates>
        finish pytest_collect_directory --> <Dir access_grant_funding> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/access_grant_funding/templates' lenresult=1 outcome='passed'> [hook]
    genitems <Dir access_grant_funding> [collection]
      pytest_collectstart [hook]
          collector: <Dir access_grant_funding>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir access_grant_funding>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates/access_grant_funding/base.html
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates/access_grant_funding/base.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir access_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates/access_grant_funding/base.html
            path: /Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates/access_grant_funding/base.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/access_grant_funding/templates/access_grant_funding' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/access_grant_funding/templates/access_grant_funding' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/access_grant_funding/templates' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/access_grant_funding' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir assets> [collection]
      pytest_collectstart [hook]
          collector: <Dir assets>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir assets>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/css
            path: /Users/sarahsloan1/dev/funding-service/app/assets/css
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/css
            parent: <Dir assets>
        finish pytest_collect_directory --> <Dir css> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/dist
            path: /Users/sarahsloan1/dev/funding-service/app/assets/dist
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/images
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images
            parent: <Dir assets>
        finish pytest_collect_directory --> <Dir images> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js
            parent: <Dir assets>
        finish pytest_collect_directory --> <Dir js> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/main.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/main.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir assets>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/main.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/main.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/main.scss
            path: /Users/sarahsloan1/dev/funding-service/app/assets/main.scss
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir assets>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/main.scss
            path: /Users/sarahsloan1/dev/funding-service/app/assets/main.scss
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/test
            path: /Users/sarahsloan1/dev/funding-service/app/assets/test
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/test
            parent: <Dir assets>
        finish pytest_collect_directory --> <Dir test> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets' lenresult=4 outcome='passed'> [hook]
    genitems <Dir css> [collection]
      pytest_collectstart [hook]
          collector: <Dir css>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir css>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/css/markdown-editor-component
            path: /Users/sarahsloan1/dev/funding-service/app/assets/css/markdown-editor-component
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/css/markdown-editor-component
            parent: <Dir css>
        finish pytest_collect_directory --> <Dir markdown-editor-component> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/css' lenresult=1 outcome='passed'> [hook]
    genitems <Dir markdown-editor-component> [collection]
      pytest_collectstart [hook]
          collector: <Dir markdown-editor-component>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir markdown-editor-component>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/css/markdown-editor-component/_index.scss
            path: /Users/sarahsloan1/dev/funding-service/app/assets/css/markdown-editor-component/_index.scss
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir markdown-editor-component>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/css/markdown-editor-component/_index.scss
            path: /Users/sarahsloan1/dev/funding-service/app/assets/css/markdown-editor-component/_index.scss
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/css/markdown-editor-component' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/css/markdown-editor-component' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/css' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir images> [collection]
      pytest_collectstart [hook]
          collector: <Dir images>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir images>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-bullet-list.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-bullet-list.svg
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir images>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-bullet-list.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-bullet-list.svg
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-h2.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-h2.svg
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir images>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-h2.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-h2.svg
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-h3.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-h3.svg
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir images>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-h3.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-h3.svg
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-link.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-link.svg
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir images>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-link.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-link.svg
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-numbered-list.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-numbered-list.svg
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir images>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-numbered-list.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/markdown-editor-numbered-list.svg
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/mhclg-crest.png
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/mhclg-crest.png
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir images>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/mhclg-crest.png
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/mhclg-crest.png
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/watermark-developer.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/watermark-developer.svg
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir images>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/images/watermark-developer.svg
            path: /Users/sarahsloan1/dev/funding-service/app/assets/images/watermark-developer.svg
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/images' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/images' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir js> [collection]
      pytest_collectstart [hook]
          collector: <Dir js>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir js>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview
            parent: <Dir js>
        finish pytest_collect_directory --> <Dir ajax-markdown-preview> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar
            parent: <Dir js>
        finish pytest_collect_directory --> <Dir markdown-editor-toolbar> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown
            parent: <Dir js>
        finish pytest_collect_directory --> <Dir paste-html-to-markdown> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils
            parent: <Dir js>
        finish pytest_collect_directory --> <Dir utils> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/js' lenresult=4 outcome='passed'> [hook]
    genitems <Dir ajax-markdown-preview> [collection]
      pytest_collectstart [hook]
          collector: <Dir ajax-markdown-preview>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir ajax-markdown-preview>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview/index.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview/index.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir ajax-markdown-preview>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview/index.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview/index.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview/index.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview/index.test.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir ajax-markdown-preview>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview/index.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/ajax-markdown-preview/index.test.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/js/ajax-markdown-preview' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/js/ajax-markdown-preview' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir markdown-editor-toolbar> [collection]
      pytest_collectstart [hook]
          collector: <Dir markdown-editor-toolbar>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir markdown-editor-toolbar>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar/index.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar/index.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir markdown-editor-toolbar>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar/index.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar/index.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar/index.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar/index.test.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir markdown-editor-toolbar>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar/index.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/markdown-editor-toolbar/index.test.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/js/markdown-editor-toolbar' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/js/markdown-editor-toolbar' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir paste-html-to-markdown> [collection]
      pytest_collectstart [hook]
          collector: <Dir paste-html-to-markdown>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir paste-html-to-markdown>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__
            parent: <Dir paste-html-to-markdown>
        finish pytest_collect_directory --> <Dir __fixtures__> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/html-to-markdown.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/html-to-markdown.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir paste-html-to-markdown>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/html-to-markdown.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/html-to-markdown.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/html-to-markdown.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/html-to-markdown.test.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir paste-html-to-markdown>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/html-to-markdown.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/html-to-markdown.test.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/index.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/index.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir paste-html-to-markdown>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/index.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/index.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/index.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/index.test.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir paste-html-to-markdown>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/index.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/index.test.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/replace-bullet-characters.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/replace-bullet-characters.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir paste-html-to-markdown>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/replace-bullet-characters.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/replace-bullet-characters.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/replace-bullet-characters.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/replace-bullet-characters.test.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir paste-html-to-markdown>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/replace-bullet-characters.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/replace-bullet-characters.test.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/js/paste-html-to-markdown' lenresult=1 outcome='passed'> [hook]
    genitems <Dir __fixtures__> [collection]
      pytest_collectstart [hook]
          collector: <Dir __fixtures__>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir __fixtures__>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-comments.html
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-comments.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir __fixtures__>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-comments.html
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-comments.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-nested-list.html
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-nested-list.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir __fixtures__>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-nested-list.html
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-nested-list.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-ordered-list.html
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-ordered-list.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir __fixtures__>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-ordered-list.html
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-ordered-list.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-unordered-list.html
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-unordered-list.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir __fixtures__>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-unordered-list.html
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/paste-html-to-markdown/__fixtures__/ms-word-2016-unordered-list.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/js/paste-html-to-markdown/__fixtures__' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/js/paste-html-to-markdown/__fixtures__' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/js/paste-html-to-markdown' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir utils> [collection]
      pytest_collectstart [hook]
          collector: <Dir utils>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir utils>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce
            parent: <Dir utils>
        finish pytest_collect_directory --> <Dir debounce> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/js/utils' lenresult=1 outcome='passed'> [hook]
    genitems <Dir debounce> [collection]
      pytest_collectstart [hook]
          collector: <Dir debounce>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir debounce>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce/index.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce/index.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir debounce>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce/index.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce/index.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce/index.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce/index.test.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir debounce>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce/index.test.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/js/utils/debounce/index.test.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/js/utils/debounce' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/js/utils/debounce' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/js/utils' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/js' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir test> [collection]
      pytest_collectstart [hook]
          collector: <Dir test>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/test/setup.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/test/setup.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/test/setup.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/test/setup.js
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/assets/test/test-helpers.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/test/test-helpers.js
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test>
            file_path: /Users/sarahsloan1/dev/funding-service/app/assets/test/test-helpers.js
            path: /Users/sarahsloan1/dev/funding-service/app/assets/test/test-helpers.js
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/assets/test' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets/test' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/assets' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package common> [collection]
      pytest_collectstart [hook]
          collector: <Package common>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package common>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/api_routes.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/api_routes.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/api_routes.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/api_routes.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/auth
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth
            parent: <Package common>
        finish pytest_collect_directory --> <Package auth> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/collections
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections
            parent: <Package common>
        finish pytest_collect_directory --> <Package collections> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data
            path: /Users/sarahsloan1/dev/funding-service/app/common/data
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/data
            parent: <Package common>
        finish pytest_collect_directory --> <Package data> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions
            parent: <Package common>
        finish pytest_collect_directory --> <Package expressions> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/filters.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/filters.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/filters.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/filters.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/forms
            path: /Users/sarahsloan1/dev/funding-service/app/common/forms
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/forms
            parent: <Package common>
        finish pytest_collect_directory --> <Package forms> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/helpers
            path: /Users/sarahsloan1/dev/funding-service/app/common/helpers
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/helpers
            parent: <Package common>
        finish pytest_collect_directory --> <Package helpers> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/markdown.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/markdown.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/markdown.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/markdown.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/qid.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/qid.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/qid.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/qid.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/security
            path: /Users/sarahsloan1/dev/funding-service/app/common/security
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/security
            parent: <Package common>
        finish pytest_collect_directory --> <Package security> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates
            parent: <Package common>
        finish pytest_collect_directory --> <Dir templates> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/types.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/types.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/types.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/types.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/utils.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/utils.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/utils.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/utils.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common' lenresult=8 outcome='passed'> [hook]
    genitems <Package auth> [collection]
      pytest_collectstart [hook]
          collector: <Package auth>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package auth>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/authorisation_helper.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/authorisation_helper.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/authorisation_helper.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/authorisation_helper.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/decorators.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/decorators.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/decorators.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/decorators.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/forms.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/forms.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/sso.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/sso.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/auth/sso.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/auth/sso.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/auth' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/auth' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package collections> [collection]
      pytest_collectstart [hook]
          collector: <Package collections>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package collections>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/collections/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package collections>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/collections/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/collections/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/collections/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections/forms.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package collections>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/collections/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections/forms.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/collections/runner.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections/runner.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package collections>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/collections/runner.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections/runner.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/collections/types.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections/types.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package collections>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/collections/types.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/collections/types.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/collections' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/collections' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package data> [collection]
      pytest_collectstart [hook]
          collector: <Package data>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package data>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package data>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/base.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/base.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package data>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/base.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/base.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces
            parent: <Package data>
        finish pytest_collect_directory --> <Package interfaces> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations
            parent: <Package data>
        finish pytest_collect_directory --> <Dir migrations> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/models.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/models.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package data>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/models.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/models.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/models_user.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/models_user.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package data>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/models_user.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/models_user.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/types.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/types.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package data>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/types.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/types.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/data' lenresult=2 outcome='passed'> [hook]
    genitems <Package interfaces> [collection]
      pytest_collectstart [hook]
          collector: <Package interfaces>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package interfaces>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package interfaces>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/collections.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/collections.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package interfaces>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/collections.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/collections.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/exceptions.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/exceptions.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package interfaces>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/exceptions.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/exceptions.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/grants.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/grants.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package interfaces>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/grants.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/grants.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/magic_link.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/magic_link.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package interfaces>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/magic_link.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/magic_link.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/temporary.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/temporary.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package interfaces>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/temporary.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/temporary.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/user.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/user.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package interfaces>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/user.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/user.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/data/interfaces' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/data/interfaces' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir migrations> [collection]
      pytest_collectstart [hook]
          collector: <Dir migrations>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir migrations>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/.current-alembic-head
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/.current-alembic-head
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir migrations>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/.current-alembic-head
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/.current-alembic-head
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/alembic.ini
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/alembic.ini
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir migrations>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/alembic.ini
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/alembic.ini
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/env.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/env.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir migrations>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/env.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/env.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/script.py.mako
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/script.py.mako
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir migrations>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/script.py.mako
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/script.py.mako
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions
            parent: <Dir migrations>
        finish pytest_collect_directory --> <Dir versions> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/data/migrations' lenresult=1 outcome='passed'> [hook]
    genitems <Dir versions> [collection]
      pytest_collectstart [hook]
          collector: <Dir versions>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir versions>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/001_reset_migrations.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/001_reset_migrations.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir versions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/001_reset_migrations.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/001_reset_migrations.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/002_add_date_type.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/002_add_date_type.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir versions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/002_add_date_type.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/002_add_date_type.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/data/migrations/versions/__pycache__
        finish pytest_ignore_collect --> True [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/data/migrations/versions' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/data/migrations/versions' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/data/migrations' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/data' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package expressions> [collection]
      pytest_collectstart [hook]
          collector: <Package expressions>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package expressions>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package expressions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/forms.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package expressions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/forms.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/managed.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/managed.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package expressions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/managed.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/managed.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/registry.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/registry.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package expressions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/registry.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/expressions/registry.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/expressions' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/expressions' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package forms> [collection]
      pytest_collectstart [hook]
          collector: <Package forms>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package forms>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/forms/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/forms/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package forms>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/forms/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/forms/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/forms/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/forms/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/forms/fields.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/forms/fields.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package forms>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/forms/fields.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/forms/fields.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/forms/validators.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/forms/validators.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package forms>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/forms/validators.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/forms/validators.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/forms' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/forms' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package helpers> [collection]
      pytest_collectstart [hook]
          collector: <Package helpers>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package helpers>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package helpers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/collections.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/collections.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package helpers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/collections.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/helpers/collections.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/helpers' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/helpers' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package security> [collection]
      pytest_collectstart [hook]
          collector: <Package security>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package security>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/security/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/security/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package security>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/security/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/security/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/security/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/common/security/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/security/utils.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/security/utils.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package security>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/security/utils.py
            path: /Users/sarahsloan1/dev/funding-service/app/common/security/utils.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/security' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/security' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir templates> [collection]
      pytest_collectstart [hook]
          collector: <Dir templates>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir templates>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common
            parent: <Dir templates>
        finish pytest_collect_directory --> <Dir common> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates' lenresult=1 outcome='passed'> [hook]
    genitems <Dir common> [collection]
      pytest_collectstart [hook]
          collector: <Dir common>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir common>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth
            parent: <Dir common>
        finish pytest_collect_directory --> <Dir auth> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/base.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/base.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir common>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/base.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/base.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors
            parent: <Dir common>
        finish pytest_collect_directory --> <Dir errors> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/fields
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/fields
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/fields
            parent: <Dir common>
        finish pytest_collect_directory --> <Dir fields> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk
            parent: <Dir common>
        finish pytest_collect_directory --> <Dir govuk> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros
            parent: <Dir common>
        finish pytest_collect_directory --> <Dir macros> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials
            parent: <Dir common>
        finish pytest_collect_directory --> <Dir partials> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates/common' lenresult=6 outcome='passed'> [hook]
    genitems <Dir auth> [collection]
      pytest_collectstart [hook]
          collector: <Dir auth>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir auth>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/check_email.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/check_email.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/check_email.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/check_email.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/claim_magic_link.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/claim_magic_link.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/claim_magic_link.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/claim_magic_link.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/mhclg-user-not-authorised.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/mhclg-user-not-authorised.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/mhclg-user-not-authorised.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/mhclg-user-not-authorised.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_magic_link.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_magic_link.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_magic_link.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_magic_link.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_sso.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_sso.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir auth>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_sso.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_sso.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates/common/auth' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates/common/auth' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir errors> [collection]
      pytest_collectstart [hook]
          collector: <Dir errors>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir errors>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/403.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/403.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir errors>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/403.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/403.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/404.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/404.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir errors>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/404.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/404.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/500.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/500.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir errors>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/500.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/500.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates/common/errors' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates/common/errors' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir fields> [collection]
      pytest_collectstart [hook]
          collector: <Dir fields>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir fields>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/fields/accessible-autocomplete.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/fields/accessible-autocomplete.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir fields>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/fields/accessible-autocomplete.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/fields/accessible-autocomplete.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates/common/fields' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates/common/fields' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir govuk> [collection]
      pytest_collectstart [hook]
          collector: <Dir govuk>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir govuk>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk/tabs
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk/tabs
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk/tabs
            parent: <Dir govuk>
        finish pytest_collect_directory --> <Dir tabs> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates/common/govuk' lenresult=1 outcome='passed'> [hook]
    genitems <Dir tabs> [collection]
      pytest_collectstart [hook]
          collector: <Dir tabs>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir tabs>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk/tabs/macro.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk/tabs/macro.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tabs>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk/tabs/macro.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk/tabs/macro.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates/common/govuk/tabs' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates/common/govuk/tabs' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates/common/govuk' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir macros> [collection]
      pytest_collectstart [hook]
          collector: <Dir macros>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir macros>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/collections.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/collections.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir macros>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/collections.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/collections.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/status.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/status.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir macros>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/status.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/status.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates/common/macros' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates/common/macros' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir partials> [collection]
      pytest_collectstart [hook]
          collector: <Dir partials>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir partials>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers
            parent: <Dir partials>
        finish pytest_collect_directory --> <Dir answers> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-header.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-header.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir partials>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-header.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-header.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-test-banner.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-test-banner.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir partials>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-test-banner.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-test-banner.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/navigation.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/navigation.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir partials>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/navigation.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/navigation.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates/common/partials' lenresult=1 outcome='passed'> [hook]
    genitems <Dir answers> [collection]
      pytest_collectstart [hook]
          collector: <Dir answers>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir answers>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/date.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/date.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir answers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/date.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/date.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/email.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/email.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir answers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/email.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/email.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/integer.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/integer.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir answers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/integer.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/integer.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/multiple_choice_from_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/multiple_choice_from_list.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir answers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/multiple_choice_from_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/multiple_choice_from_list.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/root.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/root.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir answers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/root.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/root.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/single_choice_from_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/single_choice_from_list.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir answers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/single_choice_from_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/single_choice_from_list.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/url.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/url.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir answers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/url.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/url.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/yes_no.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/yes_no.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir answers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/yes_no.html
            path: /Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/yes_no.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/common/templates/common/partials/answers' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates/common/partials/answers' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates/common/partials' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates/common' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common/templates' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/common' lenresult=8 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package deliver_grant_funding> [collection]
      pytest_collectstart [hook]
          collector: <Package deliver_grant_funding>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package deliver_grant_funding>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package deliver_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/forms.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package deliver_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/forms.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/helpers.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/helpers.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package deliver_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/helpers.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/helpers.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes
            parent: <Package deliver_grant_funding>
        finish pytest_collect_directory --> <Package routes> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/session_models.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/session_models.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package deliver_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/session_models.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/session_models.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates
            parent: <Package deliver_grant_funding>
        finish pytest_collect_directory --> <Dir templates> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding' lenresult=2 outcome='passed'> [hook]
    genitems <Package routes> [collection]
      pytest_collectstart [hook]
          collector: <Package routes>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package routes>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package routes>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_details.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_details.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package routes>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_details.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_details.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_setup.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_setup.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package routes>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_setup.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_setup.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_team.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_team.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package routes>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_team.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/grant_team.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/misc.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/misc.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package routes>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/misc.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/misc.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/reports.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/reports.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package routes>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/reports.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/reports.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/runner.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/runner.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package routes>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/runner.py
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/routes/runner.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/routes' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/routes' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir templates> [collection]
      pytest_collectstart [hook]
          collector: <Dir templates>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir templates>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding
            parent: <Dir templates>
        finish pytest_collect_directory --> <Dir deliver_grant_funding> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/templates' lenresult=1 outcome='passed'> [hook]
    genitems <Dir deliver_grant_funding> [collection]
      pytest_collectstart [hook]
          collector: <Dir deliver_grant_funding>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir deliver_grant_funding>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/base.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/base.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir deliver_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/base.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/base.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir deliver_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir deliver_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir deliver_grant_funding>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup
            parent: <Dir deliver_grant_funding>
        finish pytest_collect_directory --> <Dir grant_setup> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team
            parent: <Dir deliver_grant_funding>
        finish pytest_collect_directory --> <Dir grant_team> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros
            parent: <Dir deliver_grant_funding>
        finish pytest_collect_directory --> <Dir macros> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/partials
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/partials
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/partials
            parent: <Dir deliver_grant_funding>
        finish pytest_collect_directory --> <Dir partials> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports
            parent: <Dir deliver_grant_funding>
        finish pytest_collect_directory --> <Dir reports> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner
            parent: <Dir deliver_grant_funding>
        finish pytest_collect_directory --> <Dir runner> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding' lenresult=6 outcome='passed'> [hook]
    genitems <Dir grant_setup> [collection]
      pytest_collectstart [hook]
          collector: <Dir grant_setup>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir grant_setup>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir grant_setup>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir grant_setup>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir grant_setup>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir grant_setup>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir grant_setup>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir grant_setup>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow
            parent: <Dir grant_setup>
        finish pytest_collect_directory --> <Dir initial_flow> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup' lenresult=1 outcome='passed'> [hook]
    genitems <Dir initial_flow> [collection]
      pytest_collectstart [hook]
          collector: <Dir initial_flow>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir initial_flow>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir initial_flow>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir initial_flow>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir grant_team> [collection]
      pytest_collectstart [hook]
          collector: <Dir grant_team>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir grant_team>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir grant_team>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir grant_team>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/grant_team' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/grant_team' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir macros> [collection]
      pytest_collectstart [hook]
          collector: <Dir macros>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir macros>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir macros>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir macros>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/macros' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/macros' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir partials> [collection]
      pytest_collectstart [hook]
          collector: <Dir partials>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir partials>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir partials>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/partials' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/partials' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir reports> [collection]
      pytest_collectstart [hook]
          collector: <Dir reports>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir reports>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/reports' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/reports' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir runner> [collection]
      pytest_collectstart [hook]
          collector: <Dir runner>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir runner>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir runner>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir runner>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir runner>
            file_path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html
            path: /Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/runner' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding/runner' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/templates/deliver_grant_funding' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding/templates' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/deliver_grant_funding' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package developers> [collection]
      pytest_collectstart [hook]
          collector: <Package developers>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package developers>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package developers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/developers/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/access_routes.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/access_routes.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package developers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/access_routes.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/access_routes.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/commands.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/commands.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package developers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/commands.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/commands.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/data
            path: /Users/sarahsloan1/dev/funding-service/app/developers/data
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/developers/data
            parent: <Package developers>
        finish pytest_collect_directory --> <Dir data> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/deliver_routes.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/deliver_routes.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package developers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/deliver_routes.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/deliver_routes.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/forms.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package developers>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/forms.py
            path: /Users/sarahsloan1/dev/funding-service/app/developers/forms.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates
            parent: <Package developers>
        finish pytest_collect_directory --> <Dir templates> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/developers' lenresult=2 outcome='passed'> [hook]
    genitems <Dir data> [collection]
      pytest_collectstart [hook]
          collector: <Dir data>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir data>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/data/grants.json
            path: /Users/sarahsloan1/dev/funding-service/app/developers/data/grants.json
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir data>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/data/grants.json
            path: /Users/sarahsloan1/dev/funding-service/app/developers/data/grants.json
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/developers/data' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/developers/data' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir templates> [collection]
      pytest_collectstart [hook]
          collector: <Dir templates>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir templates>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers
            parent: <Dir templates>
        finish pytest_collect_directory --> <Dir developers> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/developers/templates' lenresult=1 outcome='passed'> [hook]
    genitems <Dir developers> [collection]
      pytest_collectstart [hook]
          collector: <Dir developers>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir developers>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access
            parent: <Dir developers>
        finish pytest_collect_directory --> <Dir access> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver
            parent: <Dir developers>
        finish pytest_collect_directory --> <Dir deliver> [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/developers/templates/developers' lenresult=2 outcome='passed'> [hook]
    genitems <Dir access> [collection]
      pytest_collectstart [hook]
          collector: <Dir access>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir access>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/ask_a_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/ask_a_question.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir access>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/ask_a_question.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/ask_a_question.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/base.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/base.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir access>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/base.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/base.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/check_your_answers.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/check_your_answers.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir access>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/check_your_answers.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/check_your_answers.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_submit_confirmation.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_submit_confirmation.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir access>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_submit_confirmation.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_submit_confirmation.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_tasklist.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_tasklist.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir access>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_tasklist.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_tasklist.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grant_details.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grant_details.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir access>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grant_details.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grant_details.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grants_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grants_list.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir access>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grants_list.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grants_list.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/developers/templates/developers/access' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/developers/templates/developers/access' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir deliver> [collection]
      pytest_collectstart [hook]
          collector: <Dir deliver>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir deliver>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/access_grant_funding_base.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/access_grant_funding_base.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir deliver>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/access_grant_funding_base.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/access_grant_funding_base.html
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/grant_developers.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/grant_developers.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir deliver>
            file_path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/grant_developers.html
            path: /Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/grant_developers.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/developers/templates/developers/deliver' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/developers/templates/developers/deliver' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/developers/templates/developers' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/developers/templates' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/developers' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package extensions> [collection]
      pytest_collectstart [hook]
          collector: <Package extensions>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package extensions>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/extensions/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/extensions/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package extensions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/extensions/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/extensions/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/extensions/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/extensions/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/extensions/auto_commit_after_request.py
            path: /Users/sarahsloan1/dev/funding-service/app/extensions/auto_commit_after_request.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package extensions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/extensions/auto_commit_after_request.py
            path: /Users/sarahsloan1/dev/funding-service/app/extensions/auto_commit_after_request.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/extensions/flask_assets_vite.py
            path: /Users/sarahsloan1/dev/funding-service/app/extensions/flask_assets_vite.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package extensions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/extensions/flask_assets_vite.py
            path: /Users/sarahsloan1/dev/funding-service/app/extensions/flask_assets_vite.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/extensions/record_sqlalchemy_queries.py
            path: /Users/sarahsloan1/dev/funding-service/app/extensions/record_sqlalchemy_queries.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package extensions>
            file_path: /Users/sarahsloan1/dev/funding-service/app/extensions/record_sqlalchemy_queries.py
            path: /Users/sarahsloan1/dev/funding-service/app/extensions/record_sqlalchemy_queries.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/extensions' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/extensions' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package services> [collection]
      pytest_collectstart [hook]
          collector: <Package services>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package services>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/services/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/services/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package services>
            file_path: /Users/sarahsloan1/dev/funding-service/app/services/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/app/services/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/services/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/app/services/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/app/services/notify.py
            path: /Users/sarahsloan1/dev/funding-service/app/services/notify.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package services>
            file_path: /Users/sarahsloan1/dev/funding-service/app/services/notify.py
            path: /Users/sarahsloan1/dev/funding-service/app/services/notify.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'app/services' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app/services' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'app' lenresult=7 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir certs> [collection]
      pytest_collectstart [hook]
          collector: <Dir certs>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir certs>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/certs/cert.pem
            path: /Users/sarahsloan1/dev/funding-service/certs/cert.pem
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir certs>
            file_path: /Users/sarahsloan1/dev/funding-service/certs/cert.pem
            path: /Users/sarahsloan1/dev/funding-service/certs/cert.pem
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/certs/key.pem
            path: /Users/sarahsloan1/dev/funding-service/certs/key.pem
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir certs>
            file_path: /Users/sarahsloan1/dev/funding-service/certs/key.pem
            path: /Users/sarahsloan1/dev/funding-service/certs/key.pem
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/certs/rootCA-key.pem
            path: /Users/sarahsloan1/dev/funding-service/certs/rootCA-key.pem
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir certs>
            file_path: /Users/sarahsloan1/dev/funding-service/certs/rootCA-key.pem
            path: /Users/sarahsloan1/dev/funding-service/certs/rootCA-key.pem
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/certs/rootCA.pem
            path: /Users/sarahsloan1/dev/funding-service/certs/rootCA.pem
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir certs>
            file_path: /Users/sarahsloan1/dev/funding-service/certs/rootCA.pem
            path: /Users/sarahsloan1/dev/funding-service/certs/rootCA.pem
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'certs' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'certs' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir scripts> [collection]
      pytest_collectstart [hook]
          collector: <Dir scripts>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir scripts>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/scripts/run-ad-hoc-task.py
            path: /Users/sarahsloan1/dev/funding-service/scripts/run-ad-hoc-task.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir scripts>
            file_path: /Users/sarahsloan1/dev/funding-service/scripts/run-ad-hoc-task.py
            path: /Users/sarahsloan1/dev/funding-service/scripts/run-ad-hoc-task.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/scripts/update-ecs-task-image.py
            path: /Users/sarahsloan1/dev/funding-service/scripts/update-ecs-task-image.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir scripts>
            file_path: /Users/sarahsloan1/dev/funding-service/scripts/update-ecs-task-image.py
            path: /Users/sarahsloan1/dev/funding-service/scripts/update-ecs-task-image.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'scripts' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'scripts' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir stubs> [collection]
      pytest_collectstart [hook]
          collector: <Dir stubs>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir stubs>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/stubs/sso
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso
            parent: <Dir stubs>
        finish pytest_collect_directory --> <Package sso> [hook]
      finish pytest_make_collect_report --> <CollectReport 'stubs' lenresult=1 outcome='passed'> [hook]
    genitems <Package sso> [collection]
      pytest_collectstart [hook]
          collector: <Package sso>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package sso>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/stubs/sso/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package sso>
            file_path: /Users/sarahsloan1/dev/funding-service/stubs/sso/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/stubs/sso/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/stubs/sso/forms.py
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/forms.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package sso>
            file_path: /Users/sarahsloan1/dev/funding-service/stubs/sso/forms.py
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/forms.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates
            parent: <Package sso>
        finish pytest_collect_directory --> <Dir templates> [hook]
      finish pytest_make_collect_report --> <CollectReport 'stubs/sso' lenresult=1 outcome='passed'> [hook]
    genitems <Dir templates> [collection]
      pytest_collectstart [hook]
          collector: <Dir templates>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir templates>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates/sso
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates/sso
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates/sso
            parent: <Dir templates>
        finish pytest_collect_directory --> <Dir sso> [hook]
      finish pytest_make_collect_report --> <CollectReport 'stubs/sso/templates' lenresult=1 outcome='passed'> [hook]
    genitems <Dir sso> [collection]
      pytest_collectstart [hook]
          collector: <Dir sso>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir sso>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates/sso/sso_login.html
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates/sso/sso_login.html
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir sso>
            file_path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates/sso/sso_login.html
            path: /Users/sarahsloan1/dev/funding-service/stubs/sso/templates/sso/sso_login.html
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'stubs/sso/templates/sso' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'stubs/sso/templates/sso' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'stubs/sso/templates' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'stubs/sso' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'stubs' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package tests> [collection]
      pytest_collectstart [hook]
          collector: <Package tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package tests>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/tests/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/conftest.py
            path: /Users/sarahsloan1/dev/funding-service/tests/conftest.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/conftest.py
            path: /Users/sarahsloan1/dev/funding-service/tests/conftest.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e
            parent: <Package tests>
        finish pytest_collect_directory --> <Package e2e> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration
            path: /Users/sarahsloan1/dev/funding-service/tests/integration
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration
            parent: <Package tests>
        finish pytest_collect_directory --> <Package integration> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/models.py
            path: /Users/sarahsloan1/dev/funding-service/tests/models.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/models.py
            path: /Users/sarahsloan1/dev/funding-service/tests/models.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/types.py
            path: /Users/sarahsloan1/dev/funding-service/tests/types.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/types.py
            path: /Users/sarahsloan1/dev/funding-service/tests/types.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit
            path: /Users/sarahsloan1/dev/funding-service/tests/unit
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/unit
            parent: <Package tests>
        finish pytest_collect_directory --> <Package unit> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/utils.py
            path: /Users/sarahsloan1/dev/funding-service/tests/utils.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/utils.py
            path: /Users/sarahsloan1/dev/funding-service/tests/utils.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests' lenresult=3 outcome='passed'> [hook]
    genitems <Package e2e> [collection]
      pytest_collectstart [hook]
          collector: <Package e2e>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package e2e>
      early skip of rewriting module: tests.e2e [assertion]
      find_module called for: tests.e2e.conftest [assertion]
      rewriting conftest file: '/Users/sarahsloan1/dev/funding-service/tests/e2e/conftest.py' [assertion]
      found cached rewritten pyc for /Users/sarahsloan1/dev/funding-service/tests/e2e/conftest.py [assertion]
      early skip of rewriting module: tests.e2e.config [assertion]
      early skip of rewriting module: boto3 [assertion]
      early skip of rewriting module: boto3.compat [assertion]
      early skip of rewriting module: boto3.exceptions [assertion]
      early skip of rewriting module: botocore [assertion]
      early skip of rewriting module: botocore.exceptions [assertion]
      early skip of rewriting module: botocore.vendored [assertion]
      early skip of rewriting module: botocore.vendored.requests [assertion]
      early skip of rewriting module: botocore.vendored.requests.exceptions [assertion]
      early skip of rewriting module: botocore.vendored.requests.packages [assertion]
      early skip of rewriting module: botocore.vendored.requests.packages.urllib3 [assertion]
      early skip of rewriting module: botocore.vendored.requests.packages.urllib3.exceptions [assertion]
      early skip of rewriting module: boto3.session [assertion]
      early skip of rewriting module: botocore.session [assertion]
      early skip of rewriting module: botocore.client [assertion]
      early skip of rewriting module: botocore.waiter [assertion]
      early skip of rewriting module: jmespath [assertion]
      early skip of rewriting module: jmespath.parser [assertion]
      early skip of rewriting module: jmespath.lexer [assertion]
      early skip of rewriting module: jmespath.exceptions [assertion]
      early skip of rewriting module: jmespath.compat [assertion]
      early skip of rewriting module: jmespath.ast [assertion]
      early skip of rewriting module: jmespath.visitor [assertion]
      early skip of rewriting module: jmespath.functions [assertion]
      early skip of rewriting module: botocore.context [assertion]
      early skip of rewriting module: botocore.docs [assertion]
      early skip of rewriting module: botocore.docs.service [assertion]
      early skip of rewriting module: botocore.docs.bcdoc [assertion]
      early skip of rewriting module: botocore.docs.bcdoc.restdoc [assertion]
      early skip of rewriting module: botocore.compat [assertion]
      early skip of rewriting module: botocore.vendored.six [assertion]
      early skip of rewriting module: dateutil [assertion]
      early skip of rewriting module: dateutil._version [assertion]
      early skip of rewriting module: dateutil.tz [assertion]
      early skip of rewriting module: dateutil.tz.tz [assertion]
      early skip of rewriting module: dateutil.tz._common [assertion]
      early skip of rewriting module: dateutil.tz._factories [assertion]
      early skip of rewriting module: dateutil.tz.win [assertion]
      early skip of rewriting module: six.moves.winreg [assertion]
      early skip of rewriting module: awscrt [assertion]
      early skip of rewriting module: botocore.docs.bcdoc.docstringparser [assertion]
      early skip of rewriting module: html.parser [assertion]
      early skip of rewriting module: _markupbase [assertion]
      early skip of rewriting module: botocore.docs.bcdoc.style [assertion]
      early skip of rewriting module: botocore.docs.client [assertion]
      early skip of rewriting module: botocore.docs.example [assertion]
      early skip of rewriting module: botocore.docs.shape [assertion]
      early skip of rewriting module: botocore.utils [assertion]
      early skip of rewriting module: dateutil.parser [assertion]
      early skip of rewriting module: dateutil.parser._parser [assertion]
      early skip of rewriting module: dateutil.relativedelta [assertion]
      early skip of rewriting module: dateutil._common [assertion]
      early skip of rewriting module: dateutil.parser.isoparser [assertion]
      early skip of rewriting module: botocore.awsrequest [assertion]
      early skip of rewriting module: botocore.httpsession [assertion]
      early skip of rewriting module: urllib3.contrib.pyopenssl [assertion]
      early skip of rewriting module: OpenSSL [assertion]
      early skip of rewriting module: botocore.plugin [assertion]
      early skip of rewriting module: botocore.docs.utils [assertion]
      early skip of rewriting module: botocore.docs.method [assertion]
      early skip of rewriting module: botocore.docs.params [assertion]
      early skip of rewriting module: botocore.docs.sharedexample [assertion]
      early skip of rewriting module: botocore.docs.paginator [assertion]
      early skip of rewriting module: botocore.docs.waiter [assertion]
      early skip of rewriting module: botocore.docs.docstring [assertion]
      early skip of rewriting module: botocore.useragent [assertion]
      early skip of rewriting module: botocore.customizations [assertion]
      early skip of rewriting module: botocore.args [assertion]
      early skip of rewriting module: botocore.parsers [assertion]
      early skip of rewriting module: botocore.eventstream [assertion]
      early skip of rewriting module: botocore.serialize [assertion]
      early skip of rewriting module: botocore.validate [assertion]
      early skip of rewriting module: botocore.config [assertion]
      early skip of rewriting module: botocore.endpoint [assertion]
      early skip of rewriting module: botocore.history [assertion]
      early skip of rewriting module: botocore.hooks [assertion]
      early skip of rewriting module: botocore.httpchecksum [assertion]
      early skip of rewriting module: botocore.model [assertion]
      early skip of rewriting module: botocore.auth [assertion]
      early skip of rewriting module: botocore.response [assertion]
      early skip of rewriting module: botocore.regions [assertion]
      early skip of rewriting module: botocore.crt [assertion]
      early skip of rewriting module: botocore.endpoint_provider [assertion]
      early skip of rewriting module: botocore.signers [assertion]
      early skip of rewriting module: botocore.tokens [assertion]
      early skip of rewriting module: botocore.compress [assertion]
      early skip of rewriting module: botocore.credentials [assertion]
      early skip of rewriting module: botocore.configloader [assertion]
      early skip of rewriting module: botocore.discovery [assertion]
      early skip of rewriting module: botocore.paginate [assertion]
      early skip of rewriting module: botocore.retries [assertion]
      early skip of rewriting module: botocore.retries.adaptive [assertion]
      early skip of rewriting module: botocore.retries.bucket [assertion]
      early skip of rewriting module: botocore.retries.standard [assertion]
      early skip of rewriting module: botocore.retries.quota [assertion]
      early skip of rewriting module: botocore.retries.special [assertion]
      early skip of rewriting module: botocore.retries.base [assertion]
      early skip of rewriting module: botocore.retries.throttling [assertion]
      early skip of rewriting module: botocore.handlers [assertion]
      early skip of rewriting module: botocore.retryhandler [assertion]
      early skip of rewriting module: botocore.translate [assertion]
      early skip of rewriting module: botocore.monitoring [assertion]
      early skip of rewriting module: botocore.configprovider [assertion]
      early skip of rewriting module: botocore.errorfactory [assertion]
      early skip of rewriting module: botocore.loaders [assertion]
      early skip of rewriting module: boto3.utils [assertion]
      early skip of rewriting module: boto3.resources [assertion]
      early skip of rewriting module: boto3.resources.factory [assertion]
      early skip of rewriting module: boto3.docs [assertion]
      early skip of rewriting module: boto3.docs.service [assertion]
      early skip of rewriting module: boto3.docs.client [assertion]
      early skip of rewriting module: boto3.docs.resource [assertion]
      early skip of rewriting module: boto3.docs.action [assertion]
      early skip of rewriting module: boto3.docs.base [assertion]
      early skip of rewriting module: boto3.docs.method [assertion]
      early skip of rewriting module: boto3.docs.utils [assertion]
      early skip of rewriting module: boto3.docs.attr [assertion]
      early skip of rewriting module: boto3.docs.collection [assertion]
      early skip of rewriting module: boto3.docs.subresource [assertion]
      early skip of rewriting module: boto3.docs.waiter [assertion]
      early skip of rewriting module: boto3.docs.docstring [assertion]
      early skip of rewriting module: boto3.resources.action [assertion]
      early skip of rewriting module: boto3.resources.model [assertion]
      early skip of rewriting module: boto3.resources.params [assertion]
      early skip of rewriting module: boto3.resources.response [assertion]
      early skip of rewriting module: boto3.resources.base [assertion]
      early skip of rewriting module: boto3.resources.collection [assertion]
      early skip of rewriting module: tests.e2e.dataclasses [assertion]
      early skip of rewriting module: tests.e2e.helpers [assertion]
      early skip of rewriting module: tests.e2e.pages [assertion]
      early skip of rewriting module: tests.e2e.developer_pages [assertion]
      early skip of rewriting module: tests.e2e.reports_pages [assertion]
      early skip of rewriting module: tests.utils [assertion]
      early skip of rewriting module: bs4 [assertion]
      early skip of rewriting module: bs4.builder [assertion]
      early skip of rewriting module: bs4.element [assertion]
      early skip of rewriting module: bs4.css [assertion]
      early skip of rewriting module: bs4._typing [assertion]
      early skip of rewriting module: soupsieve [assertion]
      early skip of rewriting module: soupsieve.__meta__ [assertion]
      early skip of rewriting module: soupsieve.css_parser [assertion]
      early skip of rewriting module: soupsieve.util [assertion]
      early skip of rewriting module: soupsieve.css_match [assertion]
      early skip of rewriting module: soupsieve.css_types [assertion]
      early skip of rewriting module: soupsieve.pretty [assertion]
      early skip of rewriting module: bs4._deprecation [assertion]
      early skip of rewriting module: bs4.formatter [assertion]
      early skip of rewriting module: bs4.dammit [assertion]
      early skip of rewriting module: cchardet [assertion]
      early skip of rewriting module: chardet [assertion]
      early skip of rewriting module: bs4._warnings [assertion]
      early skip of rewriting module: bs4.filter [assertion]
      early skip of rewriting module: bs4.exceptions [assertion]
      early skip of rewriting module: bs4.builder._htmlparser [assertion]
      early skip of rewriting module: bs4.builder._html5lib [assertion]
      early skip of rewriting module: bs4.builder._lxml [assertion]
      early skip of rewriting module: lxml [assertion]
      early skip of rewriting module: testcontainers [assertion]
      early skip of rewriting module: testcontainers.postgres [assertion]
      early skip of rewriting module: testcontainers.core [assertion]
      early skip of rewriting module: testcontainers.core.config [assertion]
      early skip of rewriting module: docker [assertion]
      early skip of rewriting module: docker.api [assertion]
      early skip of rewriting module: docker.api.client [assertion]
      early skip of rewriting module: docker.auth [assertion]
      early skip of rewriting module: docker.credentials [assertion]
      early skip of rewriting module: docker.credentials.constants [assertion]
      early skip of rewriting module: docker.credentials.errors [assertion]
      early skip of rewriting module: docker.credentials.store [assertion]
      early skip of rewriting module: docker.credentials.utils [assertion]
      early skip of rewriting module: docker.errors [assertion]
      early skip of rewriting module: docker.utils [assertion]
      early skip of rewriting module: docker.utils.build [assertion]
      early skip of rewriting module: docker.constants [assertion]
      early skip of rewriting module: docker.version [assertion]
      early skip of rewriting module: docker._version [assertion]
      early skip of rewriting module: docker.utils.fnmatch [assertion]
      early skip of rewriting module: docker.utils.decorators [assertion]
      early skip of rewriting module: docker.utils.utils [assertion]
      early skip of rewriting module: docker.tls [assertion]
      early skip of rewriting module: docker.utils.config [assertion]
      early skip of rewriting module: docker.transport [assertion]
      early skip of rewriting module: docker.transport.unixconn [assertion]
      early skip of rewriting module: docker.transport.basehttpadapter [assertion]
      early skip of rewriting module: docker.transport.npipeconn [assertion]
      early skip of rewriting module: docker.transport.npipesocket [assertion]
      early skip of rewriting module: pywintypes [assertion]
      early skip of rewriting module: docker.transport.sshconn [assertion]
      early skip of rewriting module: paramiko [assertion]
      early skip of rewriting module: docker.utils.json_stream [assertion]
      early skip of rewriting module: docker.utils.proxy [assertion]
      early skip of rewriting module: docker.utils.socket [assertion]
      early skip of rewriting module: docker.transport.NpipeSocket [assertion]
      early skip of rewriting module: docker.api.build [assertion]
      early skip of rewriting module: docker.api.config [assertion]
      early skip of rewriting module: docker.api.container [assertion]
      early skip of rewriting module: docker.types [assertion]
      early skip of rewriting module: docker.types.containers [assertion]
      early skip of rewriting module: docker.types.base [assertion]
      early skip of rewriting module: docker.types.healthcheck [assertion]
      early skip of rewriting module: docker.types.daemon [assertion]
      early skip of rewriting module: docker.types.networks [assertion]
      early skip of rewriting module: docker.types.services [assertion]
      early skip of rewriting module: docker.types.swarm [assertion]
      early skip of rewriting module: docker.api.daemon [assertion]
      early skip of rewriting module: docker.api.exec_api [assertion]
      early skip of rewriting module: docker.api.image [assertion]
      early skip of rewriting module: docker.api.network [assertion]
      early skip of rewriting module: docker.api.plugin [assertion]
      early skip of rewriting module: docker.api.secret [assertion]
      early skip of rewriting module: docker.api.service [assertion]
      early skip of rewriting module: docker.api.swarm [assertion]
      early skip of rewriting module: docker.api.volume [assertion]
      early skip of rewriting module: docker.transport.NpipeHTTPAdapter [assertion]
      early skip of rewriting module: docker.transport.SSHHTTPAdapter [assertion]
      early skip of rewriting module: docker.client [assertion]
      early skip of rewriting module: docker.models [assertion]
      early skip of rewriting module: docker.models.configs [assertion]
      early skip of rewriting module: docker.models.resource [assertion]
      early skip of rewriting module: docker.models.containers [assertion]
      early skip of rewriting module: docker.models.images [assertion]
      early skip of rewriting module: docker.models.networks [assertion]
      early skip of rewriting module: docker.models.nodes [assertion]
      early skip of rewriting module: docker.models.plugins [assertion]
      early skip of rewriting module: docker.models.secrets [assertion]
      early skip of rewriting module: docker.models.services [assertion]
      early skip of rewriting module: docker.models.swarm [assertion]
      early skip of rewriting module: docker.models.volumes [assertion]
      early skip of rewriting module: docker.context [assertion]
      early skip of rewriting module: docker.context.api [assertion]
      early skip of rewriting module: docker.context.config [assertion]
      early skip of rewriting module: docker.context.context [assertion]
      early skip of rewriting module: testcontainers.core.generic [assertion]
      early skip of rewriting module: testcontainers.core.container [assertion]
      early skip of rewriting module: testcontainers.core.docker_client [assertion]
      early skip of rewriting module: testcontainers.core.utils [assertion]
      early skip of rewriting module: testcontainers.core.auth [assertion]
      early skip of rewriting module: testcontainers.core.labels [assertion]
      early skip of rewriting module: testcontainers.core.exceptions [assertion]
      early skip of rewriting module: testcontainers.core.network [assertion]
      early skip of rewriting module: testcontainers.core.wait_strategies [assertion]
      early skip of rewriting module: testcontainers.core.waiting_utils [assertion]
      early skip of rewriting module: wrapt [assertion]
      early skip of rewriting module: wrapt.__wrapt__ [assertion]
      early skip of rewriting module: wrapt.wrappers [assertion]
      early skip of rewriting module: wrapt._wrappers [assertion]
      early skip of rewriting module: wrapt.patches [assertion]
      early skip of rewriting module: wrapt.weakrefs [assertion]
      early skip of rewriting module: wrapt.decorators [assertion]
      early skip of rewriting module: wrapt.arguments [assertion]
      early skip of rewriting module: wrapt.importer [assertion]
      loading conftestmodule <module 'tests.e2e.conftest' from '/Users/sarahsloan1/dev/funding-service/tests/e2e/conftest.py'> [pluginmanage]
        pytest_plugin_registered [hook]
            plugin: <module 'tests.e2e.conftest' from '/Users/sarahsloan1/dev/funding-service/tests/e2e/conftest.py'>
            plugin_name: /Users/sarahsloan1/dev/funding-service/tests/e2e/conftest.py
            manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
        finish pytest_plugin_registered --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/config.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/config.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/config.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/config.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/conftest.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/conftest.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/conftest.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/conftest.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/dataclasses.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/dataclasses.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/dataclasses.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/dataclasses.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/developer_pages.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/developer_pages.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/developer_pages.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/developer_pages.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/helpers.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/helpers.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/helpers.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/helpers.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/pages.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/pages.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/pages.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/pages.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/reports_pages.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/reports_pages.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/reports_pages.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/reports_pages.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py
          pytest_pycollect_makemodule [hook]
              parent: <Package e2e>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py
              path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py
          finish pytest_pycollect_makemodule --> <Module test_create_preview_collection.py> [hook]
        finish pytest_collect_file --> [<Module test_create_preview_collection.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py::test_create_and_preview_report
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py::test_create_and_preview_report
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py::test_create_and_preview_report
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py::test_create_and_preview_report
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_view_edit_grant.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_view_edit_grant.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_view_edit_grant.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_view_edit_grant.py
          pytest_pycollect_makemodule [hook]
              parent: <Package e2e>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_view_edit_grant.py
              path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_view_edit_grant.py
          finish pytest_pycollect_makemodule --> <Module test_create_view_edit_grant.py> [hook]
        finish pytest_collect_file --> [<Module test_create_view_edit_grant.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_magic_link_auth.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_magic_link_auth.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_magic_link_auth.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_magic_link_auth.py
          pytest_pycollect_makemodule [hook]
              parent: <Package e2e>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_magic_link_auth.py
              path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_magic_link_auth.py
          finish pytest_pycollect_makemodule --> <Module test_magic_link_auth.py> [hook]
        finish pytest_collect_file --> [<Module test_magic_link_auth.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_sso_auth.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_sso_auth.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_sso_auth.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_sso_auth.py
          pytest_pycollect_makemodule [hook]
              parent: <Package e2e>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_sso_auth.py
              path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_sso_auth.py
          finish pytest_pycollect_makemodule --> <Module test_sso_auth.py> [hook]
        finish pytest_collect_file --> [<Module test_sso_auth.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_start_chrome.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_start_chrome.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package e2e>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_start_chrome.py
            path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_start_chrome.py
          pytest_pycollect_makemodule [hook]
              parent: <Package e2e>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_start_chrome.py
              path: /Users/sarahsloan1/dev/funding-service/tests/e2e/test_start_chrome.py
          finish pytest_pycollect_makemodule --> <Module test_start_chrome.py> [hook]
        finish pytest_collect_file --> [<Module test_start_chrome.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/e2e' lenresult=5 outcome='passed'> [hook]
    genitems <Module test_create_preview_collection.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_create_preview_collection.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_create_preview_collection.py>
      find_module called for: tests.e2e.test_create_preview_collection [assertion]
      matched test file '/Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py' [assertion]
      found cached rewritten pyc for /Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_preview_collection.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: __annotations__
            obj: {'questions_with_groups_to_test': dict[str, typing.Union[tests.e2e.test_create_preview_collection.QuestionDict, tests.e2e.test_create_preview_collection.QuestionGroupDict]]}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: csv
            obj: <module 'csv' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/csv.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: dataclasses
            obj: <module 'dataclasses' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/dataclasses.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: json
            obj: <module 'json' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/json/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: uuid
            obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: Literal
            obj: typing.Literal
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: NotRequired
            obj: typing.NotRequired
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: TypedDict
            obj: <function TypedDict at 0x1046e49a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: Union
            obj: typing.Union
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: pytest
            obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: Locator
            obj: <class 'playwright.sync_api._generated.Locator'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: Page
            obj: <class 'playwright.sync_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: expect
            obj: <playwright.sync_api.Expect object at 0x106c1e900>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: GroupDisplayOptions
            obj: <enum 'GroupDisplayOptions'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: ManagedExpressionsEnum
            obj: <enum 'ManagedExpressionsEnum'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: MultilineTextInputRows
            obj: <enum 'MultilineTextInputRows'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: NumberInputWidths
            obj: <enum 'NumberInputWidths'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: QuestionDataType
            obj: <enum 'QuestionDataType'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: QuestionPresentationOptions
            obj: <class 'app.common.data.types.QuestionPresentationOptions'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: AnyOf
            obj: <class 'app.common.expressions.managed.AnyOf'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: Between
            obj: <class 'app.common.expressions.managed.Between'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: GreaterThan
            obj: <class 'app.common.expressions.managed.GreaterThan'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: IsNo
            obj: <class 'app.common.expressions.managed.IsNo'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: IsYes
            obj: <class 'app.common.expressions.managed.IsYes'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: LessThan
            obj: <class 'app.common.expressions.managed.LessThan'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: ManagedExpression
            obj: <class 'app.common.expressions.managed.ManagedExpression'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: Specifically
            obj: <class 'app.common.expressions.managed.Specifically'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: format_thousands
            obj: <function format_thousands at 0x115a90ea0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: EndToEndTestSecrets
            obj: <class 'tests.e2e.config.EndToEndTestSecrets'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: E2ETestUser
            obj: <class 'tests.e2e.dataclasses.E2ETestUser'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: GuidanceText
            obj: <class 'tests.e2e.dataclasses.GuidanceText'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: AllGrantsPage
            obj: <class 'tests.e2e.pages.AllGrantsPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: GrantDashboardPage
            obj: <class 'tests.e2e.pages.GrantDashboardPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: AddQuestionDetailsPage
            obj: <class 'tests.e2e.reports_pages.AddQuestionDetailsPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: EditQuestionGroupPage
            obj: <class 'tests.e2e.reports_pages.EditQuestionGroupPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: EditQuestionPage
            obj: <class 'tests.e2e.reports_pages.EditQuestionPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: ManageTaskPage
            obj: <class 'tests.e2e.reports_pages.ManageTaskPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: ReportTasksPage
            obj: <class 'tests.e2e.reports_pages.ReportTasksPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: RunnerCheckYourAnswersPage
            obj: <class 'tests.e2e.reports_pages.RunnerCheckYourAnswersPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: RunnerQuestionPage
            obj: <class 'tests.e2e.reports_pages.RunnerQuestionPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: RunnerTasklistPage
            obj: <class 'tests.e2e.reports_pages.RunnerTasklistPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: _QuestionResponse
            obj: <class 'tests.e2e.test_create_preview_collection._QuestionResponse'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: Condition
            obj: <class 'tests.e2e.test_create_preview_collection.Condition'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: QuestionDict
            obj: <class 'tests.e2e.test_create_preview_collection.QuestionDict'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: QuestionGroupDict
            obj: <class 'tests.e2e.test_create_preview_collection.QuestionGroupDict'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: questions_to_test
            obj: {'date': {'type': <QuestionDataType.DATE: 'A date'>, 'text': 'Enter a date', 'name': 'date entered', 'answers': [_QuestionResponse(answer=['2022', '04', '05'], error_message=None)], 'condition': None}, 'prefix-integer': {'type': <QuestionDataType.INTEGER: 'Whole number'>, 'text': 'Enter the total cost as a number', 'answers': [_QuestionResponse(answer='0', error_message='The answer must be greater than 1'), _QuestionResponse(answer='10000', error_message=None)], 'options': QuestionPresentationOptions(last_data_source_item_is_distinct_from_others=None, rows=None, word_limit=None, prefix='£', suffix=None, width=<NumberInputWidths.BILLIONS: 'govuk-input--width-10'>, show_questions_on_the_same_page=None), 'validation': GreaterThan(question_id=UUID('6d6d4068-860e-4810-ba63-c421990bd3a0'), minimum_value=1, inclusive=False)}, 'suffix-integer': {'type': <QuestionDataType.INTEGER: 'Whole number'>, 'text': 'Enter the total weight as a number', 'answers': [_QuestionResponse(answer='101', error_message='The answer must be less than or equal to 100'), _QuestionResponse(answer='100', error_message=None)], 'options': QuestionPresentationOptions(last_data_source_item_is_distinct_from_others=None, rows=None, word_limit=None, prefix=None, suffix='kg', width=<NumberInputWidths.HUNDREDS: 'govuk-input--width-3'>, show_questions_on_the_same_page=None), 'validation': LessThan(question_id=UUID('aa5718d6-40d4-47e3-a239-530a1d33d96b'), maximum_value=100, inclusive=True), 'condition': Condition(referenced_question='Enter the total cost as a number', managed_expression=GreaterThan(question_id=UUID('a3efbc41-b5a7-4ac0-b566-c6b6c2113a0d'), minimum_value=1, inclusive=False))}, 'between-integer': {'type': <QuestionDataType.INTEGER: 'Whole number'>, 'text': 'Enter a number between 20 and 100', 'answers': [_QuestionResponse(answer='101', error_message='The answer must be between 20 (inclusive) and 100 (exclusive)'), _QuestionResponse(answer='20', error_message=None)], 'options': QuestionPresentationOptions(last_data_source_item_is_distinct_from_others=None, rows=None, word_limit=None, prefix=None, suffix=None, width=None, show_questions_on_the_same_page=None), 'validation': Between(question_id=UUID('d284a898-48ac-4495-8632-8ef6889f0fd3'), minimum_value=20, minimum_inclusive=True, maximum_value=100, maximum_inclusive=False), 'condition': Condition(referenced_question='Enter the total weight as a number', managed_expression=LessThan(question_id=UUID('d19b5e2c-3041-480b-b9f9-b31059cefbfb'), maximum_value=100, inclusive=True))}, 'yes-no': {'type': <QuestionDataType.YES_NO: 'Yes or no'>, 'text': 'Yes or no', 'answers': [_QuestionResponse(answer='Yes', error_message=None)], 'condition': Condition(referenced_question='Enter a number between 20 and 100', managed_expression=Between(question_id=UUID('8182ffae-d42b-460b-99f9-a36fbb4219d8'), minimum_value=15, minimum_inclusive=False, maximum_value=40, maximum_inclusive=True))}, 'radio': {'type': <QuestionDataType.RADIOS: 'Select one from a list (radios)'>, 'text': 'Select an option', 'choices': ['option 1', 'option 2', 'option 3'], 'answers': [_QuestionResponse(answer='option 2', error_message=None)], 'condition': Condition(referenced_question='Yes or no', managed_expression=IsYes(question_id=UUID('10f2eb00-6996-4422-9f02-dc52c95f391a')))}, 'autocomplete': {'type': <QuestionDataType.RADIOS: 'Select one from a list (radios)'>, 'text': 'Select an option from the accessible autocomplete', 'choices': ['option 1', 'option 2', 'option 3', 'option 4', 'option 5', 'option 6', 'option 7', 'option 8', 'option 9', 'option 10', 'option 11', 'option 12', 'option 13', 'option 14', 'option 15', 'option 16', 'option 17', 'option 18', 'option 19', 'option 20', 'option 21', 'option 22', 'option 23', 'option 24', 'option 25', 'option 26', 'option 27', 'option 28', 'option 29'], 'answers': [_QuestionResponse(answer='Other', error_message=None)], 'options': QuestionPresentationOptions(last_data_source_item_is_distinct_from_others=True, rows=None, word_limit=None, prefix=None, suffix=None, width=None, show_questions_on_the_same_page=None), 'condition': Condition(referenced_question='Select an option', managed_expression=AnyOf(question_id=UUID('7942381f-128f-428d-a218-80a59ca38099'), items=[{'key': 'option-2', 'label': 'option 2'}, {'key': 'option-3', 'label': 'option 3'}]))}, 'checkboxes': {'type': <QuestionDataType.CHECKBOXES: 'Select one or more from a list (checkboxes)'>, 'text': 'Select one or more options', 'choices': ['option 1', 'option 2', 'option 3', 'option 4'], 'answers': [_QuestionResponse(answer=['option 2', 'option 3'], error_message=None)], 'options': QuestionPresentationOptions(last_data_source_item_is_distinct_from_others=True, rows=None, word_limit=None, prefix=None, suffix=None, width=None, show_questions_on_the_same_page=None), 'condition': Condition(referenced_question='Select an option from the accessible autocomplete', managed_expression=AnyOf(question_id=UUID('aeb062e2-4110-4cc9-8232-909dbec580db'), items=[{'key': 'other', 'label': 'Other'}]))}, 'email': {'type': <QuestionDataType.EMAIL: 'Email address'>, 'text': 'Enter an email address', 'answers': [_QuestionResponse(answer='not-an-email', error_message='Enter an email address in the correct format, like name@example.com'), _QuestionResponse(answer='name@example.com', error_message=None)], 'condition': Condition(referenced_question='Select one or more options', managed_expression=Specifically(question_id=UUID('ef023d1c-9169-44b1-8670-4ca94b57ad18'), item={'key': 'option-2', 'label': 'option 2'}))}, 'text-single-line': {'type': <QuestionDataType.TEXT_SINGLE_LINE: 'Single line of text'>, 'text': 'Enter a single line of text', 'answers': [_QuestionResponse(answer='E2E question text single line', error_message=None)], 'guidance': GuidanceText(heading='This is a guidance page heading', body_heading='Guidance subheading', body_link_text='Design system link text', body_link_url='https://design-system.service.gov.uk', body_ul_items=['OL item one', 'OL item two'], body_ol_items=['UL item one', 'UL item two'])}, 'text-multi-line': {'type': <QuestionDataType.TEXT_MULTI_LINE: 'Multiple lines of text'>, 'text': 'Enter a few lines of text', 'answers': [_QuestionResponse(answer="E2E question text multi line\nwith a second line that's over the word limit", error_message=None), _QuestionResponse(answer='E2E question text multi line\nwith a second line', error_message=None)], 'options': QuestionPresentationOptions(last_data_source_item_is_distinct_from_others=None, rows=<MultilineTextInputRows.LARGE: 10>, word_limit=10, prefix=None, suffix=None, width=None, show_questions_on_the_same_page=None)}, 'url': {'type': <QuestionDataType.URL: 'Website address (URL)'>, 'text': 'Enter a website address', 'answers': [_QuestionResponse(answer='not-a-url', error_message='Enter a website address in the correct format, like www.gov.uk'), _QuestionResponse(answer='https://gov.uk', error_message=None)]}, 'text-single-line-not-shown': {'type': <QuestionDataType.TEXT_SINGLE_LINE: 'Single line of text'>, 'text': 'This question should not be shown', 'answers': [_QuestionResponse(answer="This question shouldn't be shown", error_message=None)], 'condition': Condition(referenced_question='Yes or no', managed_expression=IsNo(question_id=UUID('e9c7fa01-e04b-49fe-b431-4870ef4c2a44')))}}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: TQuestionToTest
            obj: typing.Union[tests.e2e.test_create_preview_collection.QuestionDict, tests.e2e.test_create_preview_collection.QuestionGroupDict]
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: questions_with_groups_to_test
            obj: {'yes-no': {'type': <QuestionDataType.YES_NO: 'Yes or no'>, 'text': 'Do you want to show question groups?', 'answers': [_QuestionResponse(answer='Yes', error_message=None)]}, 'question-group-all-same-page': {'type': 'group', 'text': 'This is a question group', 'display_options': <GroupDisplayOptions.ALL_QUESTIONS_ON_SAME_PAGE: 'all-questions-on-same-page'>, 'guidance': GuidanceText(heading='This is a guidance page heading for a group', body_heading='Guidance subheading', body_link_text='Design system link text', body_link_url='https://design-system.service.gov.uk', body_ul_items=['OL item one', 'OL item two'], body_ol_items=['UL item one', 'UL item two']), 'condition': Condition(referenced_question='Do you want to show question groups?', managed_expression=IsYes(question_id=UUID('b3fa5eb7-4d7d-4cf1-b71a-a4e7fc592651'))), 'questions': [{'type': <QuestionDataType.TEXT_SINGLE_LINE: 'Single line of text'>, 'text': 'Group Enter a single line of text', 'answers': [_QuestionResponse(answer='E2E question text single line', error_message=None)]}, {'type': <QuestionDataType.URL: 'Website address (URL)'>, 'text': 'Group Enter a website address', 'answers': [_QuestionResponse(answer='https://gov.uk', error_message=None)]}, {'type': <QuestionDataType.EMAIL: 'Email address'>, 'text': 'Group Enter an email address', 'answers': [_QuestionResponse(answer='group@example.com', error_message=None)]}]}, 'text-single-line': {'type': <QuestionDataType.TEXT_SINGLE_LINE: 'Single line of text'>, 'text': 'Enter another single line of text', 'answers': [_QuestionResponse(answer='E2E question text single line second answer', error_message=None)]}, 'question-group-one-per-page': {'type': 'group', 'text': 'One question per page group', 'display_options': <GroupDisplayOptions.ONE_QUESTION_PER_PAGE: 'one-question-per-page'>, 'questions': [{'type': <QuestionDataType.TEXT_SINGLE_LINE: 'Single line of text'>, 'text': 'Second group Enter a single line of text', 'answers': [_QuestionResponse(answer='E2E question text single line group', error_message=None)]}, {'type': <QuestionDataType.EMAIL: 'Email address'>, 'text': 'Second group Enter an email address', 'answers': [_QuestionResponse(answer='group2@example.com', error_message=None)]}]}}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: create_grant
            obj: <function create_grant at 0x1175c9ee0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: create_question_or_group
            obj: <function create_question_or_group at 0x1175c9f80>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: create_question
            obj: <function create_question at 0x1175ca020>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: add_advanced_formatting
            obj: <function add_advanced_formatting at 0x1175ca0c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: add_question_guidance
            obj: <function add_question_guidance at 0x1175ca160>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: add_validation
            obj: <function add_validation at 0x1175ca200>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: add_condition
            obj: <function add_condition at 0x1175ca2a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: complete_question_group
            obj: <function complete_question_group at 0x1175ca340>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: complete_task
            obj: <function complete_task at 0x1175ca3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: task_check_your_answers
            obj: <function task_check_your_answers at 0x1175ca480>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: navigate_to_report_tasks_page
            obj: <function navigate_to_report_tasks_page at 0x1175ca520>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: assert_question_visibility
            obj: <function assert_question_visibility at 0x1175ca5c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: assert_check_your_answers
            obj: <function assert_check_your_answers at 0x1175ca660>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: assert_view_report_answers
            obj: <function assert_view_report_answers at 0x1175ca700>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_preview_collection.py>
            name: test_create_and_preview_report
            obj: <function test_create_and_preview_report at 0x1175ca7a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x11756cd70>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: chromium
                argname: browser_name
            finish pytest_make_parametrize_id --> None [hook]
          early skip of rewriting module: encodings.unicode_escape [assertion]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_create_and_preview_report[chromium]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/e2e/test_create_preview_collection.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_create_and_preview_report[chromium]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_create_and_preview_report[chromium]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/e2e/test_create_preview_collection.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_create_view_edit_grant.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_create_view_edit_grant.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_create_view_edit_grant.py>
      find_module called for: tests.e2e.test_create_view_edit_grant [assertion]
      matched test file '/Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_view_edit_grant.py' [assertion]
      rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/e2e/test_create_view_edit_grant.py') [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: uuid
            obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: pytest
            obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: Page
            obj: <class 'playwright.sync_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: expect
            obj: <playwright.sync_api.Expect object at 0x106c1e900>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: EndToEndTestSecrets
            obj: <class 'tests.e2e.config.EndToEndTestSecrets'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: E2ETestUser
            obj: <class 'tests.e2e.dataclasses.E2ETestUser'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: AllGrantsPage
            obj: <class 'tests.e2e.pages.AllGrantsPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_view_edit_grant.py>
            name: test_create_view_edit_grant_success
            obj: <function test_create_view_edit_grant_success at 0x1175c93a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1175a16d0>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: chromium
                argname: browser_name
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_create_view_edit_grant_success[chromium]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/e2e/test_create_view_edit_grant.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_create_view_edit_grant_success[chromium]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_create_view_edit_grant_success[chromium]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/e2e/test_create_view_edit_grant.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_magic_link_auth.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_magic_link_auth.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_magic_link_auth.py>
      find_module called for: tests.e2e.test_magic_link_auth [assertion]
      matched test file '/Users/sarahsloan1/dev/funding-service/tests/e2e/test_magic_link_auth.py' [assertion]
      rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/e2e/test_magic_link_auth.py') [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: re
            obj: <module 're' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/re/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: pytest
            obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: Page
            obj: <class 'playwright.sync_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: expect
            obj: <playwright.sync_api.Expect object at 0x106c1e900>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: EndToEndTestSecrets
            obj: <class 'tests.e2e.config.EndToEndTestSecrets'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: retrieve_magic_link
            obj: <function retrieve_magic_link at 0x1170ee7a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: RequestALinkToSignInPage
            obj: <class 'tests.e2e.pages.RequestALinkToSignInPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_magic_link_auth.py>
            name: test_magic_link_redirect_journey
            obj: <function test_magic_link_redirect_journey at 0x1175cad40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1175a16d0>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: chromium
                argname: browser_name
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_magic_link_redirect_journey[chromium]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/e2e/test_magic_link_auth.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_magic_link_redirect_journey[chromium]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_magic_link_redirect_journey[chromium]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/e2e/test_magic_link_auth.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_sso_auth.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_sso_auth.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_sso_auth.py>
      find_module called for: tests.e2e.test_sso_auth [assertion]
      matched test file '/Users/sarahsloan1/dev/funding-service/tests/e2e/test_sso_auth.py' [assertion]
      rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/e2e/test_sso_auth.py') [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: getenv
            obj: <function getenv at 0x10444c9a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: pytest
            obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: Page
            obj: <class 'playwright.sync_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: expect
            obj: <playwright.sync_api.Expect object at 0x106c1e900>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: MicrosoftLoginPageEmail
            obj: <class 'tests.e2e.pages.MicrosoftLoginPageEmail'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: SSOSignInPage
            obj: <class 'tests.e2e.pages.SSOSignInPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: StubSSOEmailLoginPage
            obj: <class 'tests.e2e.pages.StubSSOEmailLoginPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: test_stub_sso_journey
            obj: <function test_stub_sso_journey at 0x1175c9440>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117517a80>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: chromium
                argname: browser_name
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_stub_sso_journey[chromium]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_sso_auth.py>
            name: test_real_sso_journey
            obj: <function test_real_sso_journey at 0x1175cac00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117517a80>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: chromium
                argname: browser_name
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_real_sso_journey[chromium]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/e2e/test_sso_auth.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_stub_sso_journey[chromium]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_stub_sso_journey[chromium]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_real_sso_journey[chromium]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_real_sso_journey[chromium]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/e2e/test_sso_auth.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_start_chrome.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_start_chrome.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_start_chrome.py>
      find_module called for: tests.e2e.test_start_chrome [assertion]
      matched test file '/Users/sarahsloan1/dev/funding-service/tests/e2e/test_start_chrome.py' [assertion]
      rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/e2e/test_start_chrome.py') [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_start_chrome.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_start_chrome.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_start_chrome.py>
            name: Page
            obj: <class 'playwright.sync_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_start_chrome.py>
            name: test_start_chrome
            obj: <function test_start_chrome at 0x1175cb240>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x11758dc70>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: chromium
                argname: browser_name
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_start_chrome[chromium]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/e2e/test_start_chrome.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_start_chrome[chromium]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_start_chrome[chromium]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/e2e/test_start_chrome.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/e2e' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package integration> [collection]
      pytest_collectstart [hook]
          collector: <Package integration>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package integration>
      early skip of rewriting module: tests.integration [assertion]
      find_module called for: tests.integration.conftest [assertion]
      rewriting conftest file: '/Users/sarahsloan1/dev/funding-service/tests/integration/conftest.py' [assertion]
      found cached rewritten pyc for /Users/sarahsloan1/dev/funding-service/tests/integration/conftest.py [assertion]
      early skip of rewriting module: sqlalchemy_utils [assertion]
      early skip of rewriting module: sqlalchemy_utils.aggregates [assertion]
      early skip of rewriting module: sqlalchemy.ext.declarative [assertion]
      early skip of rewriting module: sqlalchemy.ext.declarative.extensions [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.database [assertion]
      early skip of rewriting module: sqlalchemy_utils.utils [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.orm [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.foreign_keys [assertion]
      early skip of rewriting module: sqlalchemy_utils.query_chain [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.mock [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.render [assertion]
      early skip of rewriting module: sqlalchemy_utils.functions.sort_query [assertion]
      early skip of rewriting module: sqlalchemy_utils.relationships [assertion]
      early skip of rewriting module: sqlalchemy_utils.relationships.chained_join [assertion]
      early skip of rewriting module: sqlalchemy_utils.asserts [assertion]
      early skip of rewriting module: sqlalchemy_utils.exceptions [assertion]
      early skip of rewriting module: sqlalchemy_utils.expressions [assertion]
      early skip of rewriting module: sqlalchemy_utils.generic [assertion]
      early skip of rewriting module: sqlalchemy_utils.i18n [assertion]
      early skip of rewriting module: sqlalchemy_utils.listeners [assertion]
      early skip of rewriting module: sqlalchemy_utils.models [assertion]
      early skip of rewriting module: sqlalchemy_utils.observer [assertion]
      early skip of rewriting module: sqlalchemy_utils.path [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.country [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.currency [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.ltree [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.weekday [assertion]
      early skip of rewriting module: sqlalchemy_utils.primitives.weekdays [assertion]
      early skip of rewriting module: sqlalchemy_utils.proxy_dict [assertion]
      early skip of rewriting module: sqlalchemy_utils.types [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.arrow [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.arrow_datetime [assertion]
      early skip of rewriting module: arrow [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.pendulum_date [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.pendulum_datetime [assertion]
      early skip of rewriting module: pendulum [assertion]
      early skip of rewriting module: pendulum [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.enriched_datetime_type [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.scalar_coercible [assertion]
      early skip of rewriting module: arrow [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.choice [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.color [assertion]
      early skip of rewriting module: colour [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.country [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.currency [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.email [assertion]
      early skip of rewriting module: sqlalchemy_utils.operators [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.encrypted [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.encrypted.encrypted_type [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.encrypted.padding [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.json [assertion]
      early skip of rewriting module: cryptography.fernet [assertion]
      early skip of rewriting module: cryptography.hazmat.primitives.padding [assertion]
      early skip of rewriting module: cryptography.hazmat.primitives.hmac [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.enriched_datetime.enriched_date_type [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.ip_address [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.locale [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.ltree [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.password [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle.base [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle.dictionary [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle.types [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle.vector [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle.cx_oracle [assertion]
      early skip of rewriting module: sqlalchemy.dialects.oracle.oracledb [assertion]
      early skip of rewriting module: sqlalchemy.connectors [assertion]
      early skip of rewriting module: sqlalchemy.connectors.asyncio [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.aiosqlite [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.base [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.json [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.pysqlite [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.pysqlcipher [assertion]
      early skip of rewriting module: sqlalchemy.dialects.sqlite.dml [assertion]
      early skip of rewriting module: passlib [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.pg_composite [assertion]
      early skip of rewriting module: psycopg2 [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.phone_number [assertion]
      early skip of rewriting module: phonenumbers [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.range [assertion]
      early skip of rewriting module: intervals [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.scalar_list [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.timezone [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.ts_vector [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.url [assertion]
      early skip of rewriting module: furl [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.uuid [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.aioodbc [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.pyodbc [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.base [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.information_schema [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.json [assertion]
      early skip of rewriting module: sqlalchemy.connectors.pyodbc [assertion]
      early skip of rewriting module: sqlalchemy.connectors.aioodbc [assertion]
      early skip of rewriting module: sqlalchemy.dialects.mssql.pymssql [assertion]
      early skip of rewriting module: sqlalchemy_utils.compat [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.weekdays [assertion]
      early skip of rewriting module: sqlalchemy_utils.types.bit [assertion]
      early skip of rewriting module: sqlalchemy_utils.view [assertion]
      early skip of rewriting module: tests.integration.utils [assertion]
      early skip of rewriting module: freezegun [assertion]
      early skip of rewriting module: freezegun.api [assertion]
      early skip of rewriting module: freezegun.config [assertion]
      early skip of rewriting module: freezegun._async [assertion]
      early skip of rewriting module: maya [assertion]
      early skip of rewriting module: sqlite3 [assertion]
      early skip of rewriting module: sqlite3.dbapi2 [assertion]
      early skip of rewriting module: _sqlite3 [assertion]
      early skip of rewriting module: pymysql [assertion]
      early skip of rewriting module: tests.types [assertion]
      loading conftestmodule <module 'tests.integration.conftest' from '/Users/sarahsloan1/dev/funding-service/tests/integration/conftest.py'> [pluginmanage]
        pytest_plugin_registered [hook]
            plugin: <module 'tests.integration.conftest' from '/Users/sarahsloan1/dev/funding-service/tests/integration/conftest.py'>
            plugin_name: /Users/sarahsloan1/dev/funding-service/tests/integration/conftest.py
            manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
        finish pytest_plugin_registered --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package integration>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common
            parent: <Package integration>
        finish pytest_collect_directory --> <Package common> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/conftest.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/conftest.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package integration>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/conftest.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/conftest.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding
            parent: <Package integration>
        finish pytest_collect_directory --> <Package deliver_grant_funding> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/developers
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/developers
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/developers
            parent: <Package integration>
        finish pytest_collect_directory --> <Package developers> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions
            parent: <Package integration>
        finish pytest_collect_directory --> <Dir extensions> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck
            parent: <Package integration>
        finish pytest_collect_directory --> <Dir healthcheck> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_app.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_app.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package integration>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_app.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_app.py
          pytest_pycollect_makemodule [hook]
              parent: <Package integration>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_app.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_app.py
          finish pytest_pycollect_makemodule --> <Module test_app.py> [hook]
        finish pytest_collect_file --> [<Module test_app.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_fixtures.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_fixtures.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package integration>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_fixtures.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_fixtures.py
          pytest_pycollect_makemodule [hook]
              parent: <Package integration>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_fixtures.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_fixtures.py
          finish pytest_pycollect_makemodule --> <Module test_fixtures.py> [hook]
        finish pytest_collect_file --> [<Module test_fixtures.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_logging.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_logging.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package integration>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_logging.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_logging.py
          pytest_pycollect_makemodule [hook]
              parent: <Package integration>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_logging.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/test_logging.py
          finish pytest_pycollect_makemodule --> <Module test_logging.py> [hook]
        finish pytest_collect_file --> [<Module test_logging.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/utils.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/utils.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package integration>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/utils.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/utils.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration' lenresult=8 outcome='passed'> [hook]
    genitems <Package common> [collection]
      pytest_collectstart [hook]
          collector: <Package common>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package common>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth
            parent: <Package common>
        finish pytest_collect_directory --> <Package auth> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections
            parent: <Package common>
        finish pytest_collect_directory --> <Package collections> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data
            parent: <Package common>
        finish pytest_collect_directory --> <Package data> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions
            parent: <Package common>
        finish pytest_collect_directory --> <Package expressions> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers
            parent: <Package common>
        finish pytest_collect_directory --> <Package helpers> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_api_routes.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_api_routes.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_api_routes.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_api_routes.py
          pytest_pycollect_makemodule [hook]
              parent: <Package common>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_api_routes.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_api_routes.py
          finish pytest_pycollect_makemodule --> <Module test_api_routes.py> [hook]
        finish pytest_collect_file --> [<Module test_api_routes.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_filters.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_filters.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package common>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_filters.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_filters.py
          pytest_pycollect_makemodule [hook]
              parent: <Package common>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_filters.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/test_filters.py
          finish pytest_pycollect_makemodule --> <Module test_filters.py> [hook]
        finish pytest_collect_file --> [<Module test_filters.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common' lenresult=7 outcome='passed'> [hook]
    genitems <Package auth> [collection]
      pytest_collectstart [hook]
          collector: <Package auth>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package auth>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package auth>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/__init__.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/__pycache__
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_auth.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_auth.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package auth>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_auth.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_auth.py
          pytest_pycollect_makemodule [hook]
              parent: <Package auth>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_auth.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_auth.py
          finish pytest_pycollect_makemodule --> <Module test_auth.py> [hook]
        finish pytest_collect_file --> [<Module test_auth.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x106844910>
            collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_decorators.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_decorators.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package auth>
            file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_decorators.py
            path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_decorators.py
          pytest_pycollect_makemodule [hook]
              parent: <Package auth>
              module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_decorators.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_decorators.py
          finish pytest_pycollect_makemodule --> <Module test_decorators.py> [hook]
        finish pytest_collect_file --> [<Module test_decorators.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth' lenresult=2 outcome='passed'> [hook]
    genitems <Module test_auth.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_auth.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_auth.py>
      early skip of rewriting module: tests.integration.common [assertion]
      early skip of rewriting module: tests.integration.common.auth [assertion]
      find_module called for: tests.integration.common.auth.test_auth [assertion]
      matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_auth.py' [assertion]
      rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_auth.py') [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: datetime
            obj: <module 'datetime' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/datetime.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: patch
            obj: <function patch at 0x1069e1080>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: pytest
            obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: BeautifulSoup
            obj: <class 'bs4.BeautifulSoup'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: url_for
            obj: <function url_for at 0x107802980>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: func
            obj: <sqlalchemy.sql.functions._FunctionGenerator object at 0x107bf6900>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: select
            obj: <function select at 0x107eea520>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: AuthorisationHelper
            obj: <class 'app.common.auth.authorisation_helper.AuthorisationHelper'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: interfaces
            obj: <module 'app.common.data.interfaces' from '/Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: Invitation
            obj: <class 'app.common.data.models_user.Invitation'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: MagicLink
            obj: <class 'app.common.data.models_user.MagicLink'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: User
            obj: <class 'app.common.data.models_user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: UserRole
            obj: <class 'app.common.data.models_user.UserRole'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: RoleEnum
            obj: <enum 'RoleEnum'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: AnyStringMatching
            obj: <class 'tests.utils.AnyStringMatching'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: get_h1_text
            obj: <function get_h1_text at 0x1175c8540>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: get_h2_text
            obj: <function get_h2_text at 0x1175c85e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: page_has_error
            obj: <function page_has_error at 0x1173323e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: TestSignInView
            obj: <class 'tests.integration.common.auth.test_auth.TestSignInView'>
        finish pytest_pycollect_makeitem --> <Class TestSignInView> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: TestCheckEmailPage
            obj: <class 'tests.integration.common.auth.test_auth.TestCheckEmailPage'>
        finish pytest_pycollect_makeitem --> <Class TestCheckEmailPage> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: TestClaimMagicLinkView
            obj: <class 'tests.integration.common.auth.test_auth.TestClaimMagicLinkView'>
        finish pytest_pycollect_makeitem --> <Class TestClaimMagicLinkView> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: TestSignOutView
            obj: <class 'tests.integration.common.auth.test_auth.TestSignOutView'>
        finish pytest_pycollect_makeitem --> <Class TestSignOutView> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: TestSSOSignInView
            obj: <class 'tests.integration.common.auth.test_auth.TestSSOSignInView'>
        finish pytest_pycollect_makeitem --> <Class TestSSOSignInView> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: TestSSOGetTokenView
            obj: <class 'tests.integration.common.auth.test_auth.TestSSOGetTokenView'>
        finish pytest_pycollect_makeitem --> <Class TestSSOGetTokenView> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: TestAuthenticatedUserRedirect
            obj: <class 'tests.integration.common.auth.test_auth.TestAuthenticatedUserRedirect'>
        finish pytest_pycollect_makeitem --> <Class TestAuthenticatedUserRedirect> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth/test_auth.py' lenresult=7 outcome='passed'> [hook]
    genitems <Class TestSignInView> [collection]
      pytest_collectstart [hook]
          collector: <Class TestSignInView>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestSignInView>
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSignInView>
            name: test_get
            obj: <function TestSignInView.test_get at 0x1179dfb00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117956580>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSignInView>
            name: test_post_invalid_email
            obj: <function TestSignInView.test_post_invalid_email at 0x1179dfec0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117956580>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_post_invalid_email>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSignInView>
            name: get_test_post_non_communities_email
            obj: <function TestSignInView.get_test_post_non_communities_email at 0x117d60720>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSignInView>
            name: test_post_mhclg_email_redirects_to_sso
            obj: <function TestSignInView.test_post_mhclg_email_redirects_to_sso at 0x117d60900>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d6c150>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_post_mhclg_email_redirects_to_sso>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSignInView>
            name: test_post_valid_non_mhclg_email
            obj: <function TestSignInView.test_post_valid_non_mhclg_email at 0x117d609a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d6c150>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_post_valid_non_mhclg_email>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSignInView>
            name: test_post_valid_email_with_redirect
            obj: <function TestSignInView.test_post_valid_email_with_redirect at 0x117d60a40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1179e8230>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: /blah/blah
                argname: next_
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: /blah/blah
                argname: safe_next
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: https://bad.place/blah
                argname: next_
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: /
                argname: safe_next
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_post_valid_email_with_redirect[/blah/blah-/blah/blah]>, <Function test_post_valid_email_with_redirect[https://bad.place/blah-/]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth/test_auth.py::TestSignInView' lenresult=6 outcome='passed'> [hook]
    genitems <Function test_get> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_post_invalid_email> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_invalid_email>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_post_mhclg_email_redirects_to_sso> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_mhclg_email_redirects_to_sso>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_post_valid_non_mhclg_email> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_valid_non_mhclg_email>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_post_valid_email_with_redirect[/blah/blah-/blah/blah]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_valid_email_with_redirect[/blah/blah-/blah/blah]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_post_valid_email_with_redirect[https://bad.place/blah-/]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_valid_email_with_redirect[https://bad.place/blah-/]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/integration/common/auth/test_auth.py::TestSignInView' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Class TestCheckEmailPage> [collection]
      pytest_collectstart [hook]
          collector: <Class TestCheckEmailPage>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestCheckEmailPage>
        pytest_pycollect_makeitem [hook]
            collector: <Class TestCheckEmailPage>
            name: test_get
            obj: <function TestCheckEmailPage.test_get at 0x117d60b80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1179e8230>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth/test_auth.py::TestCheckEmailPage' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_get> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/integration/common/auth/test_auth.py::TestCheckEmailPage' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Class TestClaimMagicLinkView> [collection]
      pytest_collectstart [hook]
          collector: <Class TestClaimMagicLinkView>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestClaimMagicLinkView>
        pytest_pycollect_makeitem [hook]
            collector: <Class TestClaimMagicLinkView>
            name: test_get
            obj: <function TestClaimMagicLinkView.test_get at 0x117d60ae0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117999a90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestClaimMagicLinkView>
            name: test_redirect_on_unknown_magic_link
            obj: <function TestClaimMagicLinkView.test_redirect_on_unknown_magic_link at 0x117d60c20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117999a90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_redirect_on_unknown_magic_link>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestClaimMagicLinkView>
            name: test_redirect_on_used_magic_link
            obj: <function TestClaimMagicLinkView.test_redirect_on_used_magic_link at 0x117d60cc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1179b5e60>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_redirect_on_used_magic_link>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestClaimMagicLinkView>
            name: test_redirect_on_expired_magic_link
            obj: <function TestClaimMagicLinkView.test_redirect_on_expired_magic_link at 0x117d60d60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117990b90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_redirect_on_expired_magic_link>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestClaimMagicLinkView>
            name: test_post_claims_link_and_creates_user_and_redirects
            obj: <function TestClaimMagicLinkView.test_post_claims_link_and_creates_user_and_redirects at 0x117d60e00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117990b90>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: /blah/blah
                argname: redirect_to
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: /blah/blah
                argname: safe_redirect_to
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: https://bad.place/blah
                argname: redirect_to
            finish pytest_make_parametrize_id --> None [hook]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x106844910>
                val: /
                argname: safe_redirect_to
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_post_claims_link_and_creates_user_and_redirects[/blah/blah-/blah/blah]>, <Function test_post_claims_link_and_creates_user_and_redirects[https://bad.place/blah-/]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth/test_auth.py::TestClaimMagicLinkView' lenresult=6 outcome='passed'> [hook]
    genitems <Function test_get> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_redirect_on_unknown_magic_link> [collection]
      pytest_itemcollected [hook]
          item: <Function test_redirect_on_unknown_magic_link>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_redirect_on_used_magic_link> [collection]
      pytest_itemcollected [hook]
          item: <Function test_redirect_on_used_magic_link>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_redirect_on_expired_magic_link> [collection]
      pytest_itemcollected [hook]
          item: <Function test_redirect_on_expired_magic_link>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_post_claims_link_and_creates_user_and_redirects[/blah/blah-/blah/blah]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_claims_link_and_creates_user_and_redirects[/blah/blah-/blah/blah]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_post_claims_link_and_creates_user_and_redirects[https://bad.place/blah-/]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_claims_link_and_creates_user_and_redirects[https://bad.place/blah-/]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/integration/common/auth/test_auth.py::TestClaimMagicLinkView' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Class TestSignOutView> [collection]
      pytest_collectstart [hook]
          collector: <Class TestSignOutView>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestSignOutView>
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSignOutView>
            name: test_get
            obj: <function TestSignOutView.test_get at 0x117d60fe0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117873ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth/test_auth.py::TestSignOutView' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_get> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/integration/common/auth/test_auth.py::TestSignOutView' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Class TestSSOSignInView> [collection]
      pytest_collectstart [hook]
          collector: <Class TestSSOSignInView>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestSSOSignInView>
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOSignInView>
            name: test_get
            obj: <function TestSSOSignInView.test_get at 0x117d61080>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117873ac0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth/test_auth.py::TestSSOSignInView' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_get> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/integration/common/auth/test_auth.py::TestSSOSignInView' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Class TestSSOGetTokenView> [collection]
      pytest_collectstart [hook]
          collector: <Class TestSSOGetTokenView>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestSSOGetTokenView>
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_get_without_fsd_admin_role_and_with_no_assigned_roles
            obj: <function TestSSOGetTokenView.test_get_without_fsd_admin_role_and_with_no_assigned_roles at 0x117d60f40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d619f0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_without_fsd_admin_role_and_with_no_assigned_roles>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_login_with_grant_member_role
            obj: <function TestSSOGetTokenView.test_login_with_grant_member_role at 0x117d61120>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d619f0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_login_with_grant_member_role>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_get_without_any_roles_should_403
            obj: <function TestSSOGetTokenView.test_get_without_any_roles_should_403 at 0x117d611c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d620d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_without_any_roles_should_403>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_get_valid_token_with_redirect
            obj: <function TestSSOGetTokenView.test_get_valid_token_with_redirect at 0x117d61260>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d62170>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_valid_token_with_redirect>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_platform_admin_first_login
            obj: <function TestSSOGetTokenView.test_platform_admin_first_login at 0x117d61300>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d622b0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_platform_admin_first_login>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_platform_admin_with_fsd_admin_role_removed
            obj: <function TestSSOGetTokenView.test_platform_admin_with_fsd_admin_role_removed at 0x117d613a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d625d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_platform_admin_with_fsd_admin_role_removed>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_platform_admin_with_grant_member_role_fsd_admin_role_removed
            obj: <function TestSSOGetTokenView.test_platform_admin_with_grant_member_role_fsd_admin_role_removed at 0x117d61440>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d625d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_platform_admin_with_grant_member_role_fsd_admin_role_removed>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_platform_admin_remove_all_other_roles
            obj: <function TestSSOGetTokenView.test_platform_admin_remove_all_other_roles at 0x117d614e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d62990>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_platform_admin_remove_all_other_roles>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_platform_admin_signin_claims_pending_invitations
            obj: <function TestSSOGetTokenView.test_platform_admin_signin_claims_pending_invitations at 0x117d61580>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d62cb0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_platform_admin_signin_claims_pending_invitations>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_grant_member_with_valid_invites_first_login
            obj: <function TestSSOGetTokenView.test_grant_member_with_valid_invites_first_login at 0x117d61620>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d62f30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_grant_member_with_valid_invites_first_login>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestSSOGetTokenView>
            name: test_invalid_grant_team_member_invitations_403
            obj: <function TestSSOGetTokenView.test_invalid_grant_team_member_invitations_403 at 0x117d616c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d631b0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_invalid_grant_team_member_invitations_403>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth/test_auth.py::TestSSOGetTokenView' lenresult=11 outcome='passed'> [hook]
    genitems <Function test_get_without_fsd_admin_role_and_with_no_assigned_roles> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_without_fsd_admin_role_and_with_no_assigned_roles>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_login_with_grant_member_role> [collection]
      pytest_itemcollected [hook]
          item: <Function test_login_with_grant_member_role>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_without_any_roles_should_403> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_without_any_roles_should_403>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_valid_token_with_redirect> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_valid_token_with_redirect>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_platform_admin_first_login> [collection]
      pytest_itemcollected [hook]
          item: <Function test_platform_admin_first_login>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_platform_admin_with_fsd_admin_role_removed> [collection]
      pytest_itemcollected [hook]
          item: <Function test_platform_admin_with_fsd_admin_role_removed>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_platform_admin_with_grant_member_role_fsd_admin_role_removed> [collection]
      pytest_itemcollected [hook]
          item: <Function test_platform_admin_with_grant_member_role_fsd_admin_role_removed>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_platform_admin_remove_all_other_roles> [collection]
      pytest_itemcollected [hook]
          item: <Function test_platform_admin_remove_all_other_roles>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_platform_admin_signin_claims_pending_invitations> [collection]
      pytest_itemcollected [hook]
          item: <Function test_platform_admin_signin_claims_pending_invitations>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_grant_member_with_valid_invites_first_login> [collection]
      pytest_itemcollected [hook]
          item: <Function test_grant_member_with_valid_invites_first_login>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_invalid_grant_team_member_invitations_403> [collection]
      pytest_itemcollected [hook]
          item: <Function test_invalid_grant_team_member_invitations_403>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/integration/common/auth/test_auth.py::TestSSOGetTokenView' lenresult=11 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Class TestAuthenticatedUserRedirect> [collection]
      pytest_collectstart [hook]
          collector: <Class TestAuthenticatedUserRedirect>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestAuthenticatedUserRedirect>
        pytest_pycollect_makeitem [hook]
            collector: <Class TestAuthenticatedUserRedirect>
            name: test_magic_link_get
            obj: <function TestAuthenticatedUserRedirect.test_magic_link_get at 0x117d61800>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d628f0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_magic_link_get>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestAuthenticatedUserRedirect>
            name: test_sso_get
            obj: <function TestAuthenticatedUserRedirect.test_sso_get at 0x117d618a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x117d625d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_sso_get>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth/test_auth.py::TestAuthenticatedUserRedirect' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_magic_link_get> [collection]
      pytest_itemcollected [hook]
          item: <Function test_magic_link_get>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_sso_get> [collection]
      pytest_itemcollected [hook]
          item: <Function test_sso_get>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/integration/common/auth/test_auth.py::TestAuthenticatedUserRedirect' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/integration/common/auth/test_auth.py' lenresult=7 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_decorators.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_decorators.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_decorators.py>
      find_module called for: tests.integration.common.auth.test_decorators [assertion]
      matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_decorators.py' [assertion]
      rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/auth/test_decorators.py') [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_decorators.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_decorators.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_decorators.py>
            name: uuid
            obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_decorators.py>
            name: UUID
            obj: <class 'uuid.UUID'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_decorators.py>
            name: pytest
            obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/auth/test_decorators.py' lenresult=0 outcome='failed'> [hook]
        pytest_exception_interact [hook]
            node: <Module test_decorators.py>
            call: <CallInfo when='collect' excinfo=<ExceptionInfo RuntimeError('Working outside of request context.\n\nThis typically means that you attempted to use functionality that needed\nan active HTTP request. Consult the documentation on testing for\ninformation about how to avoid this problem.') tblen=13>>
            report: <CollectReport 'tests/integration/common/auth/test_decorators.py' lenresult=0 outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/auth/test_decorators.py' lenresult=0 outcome='failed'>
        early skip of rewriting module: _jb_serial_tree_manager [assertion]
        early skip of rewriting module: teamcity.jb_local_exc_store [assertion]
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/auth' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package collections> [collection]
        pytest_collectstart [hook]
            collector: <Package collections>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package collections>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package collections>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/test_forms.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/test_forms.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package collections>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/test_forms.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/test_forms.py
            pytest_pycollect_makemodule [hook]
                parent: <Package collections>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/test_forms.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/test_forms.py
            finish pytest_pycollect_makemodule --> <Module test_forms.py> [hook]
          finish pytest_collect_file --> [<Module test_forms.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/collections' lenresult=1 outcome='passed'> [hook]
      genitems <Module test_forms.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_forms.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_forms.py>
        early skip of rewriting module: tests.integration.common.collections [assertion]
        find_module called for: tests.integration.common.collections.test_forms [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/test_forms.py' [assertion]
        found cached rewritten pyc for /Users/sarahsloan1/dev/funding-service/tests/integration/common/collections/test_forms.py [assertion]
        early skip of rewriting module: app.common.collections.forms [assertion]
        early skip of rewriting module: app.common.forms.fields [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: uuid
              obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: MultiDict
              obj: <class 'werkzeug.datastructures.structures.MultiDict'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: SelectField
              obj: <class 'wtforms.fields.choices.SelectField'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: DataRequired
              obj: <class 'wtforms.validators.DataRequired'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: build_question_form
              obj: <function build_question_form at 0x117b584a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: interfaces
              obj: <module 'app.common.data.interfaces' from '/Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: create_question
              obj: <function create_question at 0x116690900>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: QuestionDataType
              obj: <enum 'QuestionDataType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: ExpressionContext
              obj: <class 'app.common.expressions.ExpressionContext'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: GreaterThan
              obj: <class 'app.common.expressions.managed.GreaterThan'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: LessThan
              obj: <class 'app.common.expressions.managed.LessThan'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: MHCLGAccessibleAutocomplete
              obj: <class 'app.common.forms.fields.MHCLGAccessibleAutocomplete'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: EC
              obj: <class 'app.common.expressions.ExpressionContext'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: test_validation_attached_to_field_and_runs__text
              obj: <function test_validation_attached_to_field_and_runs__text at 0x117d62ac0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d61770>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: This is an answer
on multiple lines
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Multiple lines of text
                  argname: field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Test string
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Multiple lines of text
                  argname: field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Enter the test_text
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Multiple lines of text
                  argname: field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Test string
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Single line of text
                  argname: field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Enter the test_text
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Single line of text
                  argname: field_type
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_validation_attached_to_field_and_runs__text[This is an answer\non multiple lines-None-Multiple lines of text]>, <Function test_validation_attached_to_field_and_runs__text[Test string-None-Multiple lines of text]>, <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Multiple lines of text]>, <Function test_validation_attached_to_field_and_runs__text[Test string-None-Single line of text]>, <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Single line of text]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: test_validation_attached_to_field_and_runs__integer
              obj: <function test_validation_attached_to_field_and_runs__integer at 0x116693740>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d61770>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: -50
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: The answer must be greater than or equal to 0
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: The answer must be less than 100
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 50
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Not a valid integer value.
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: abcd
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Not a valid integer value.
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:
                  argname: value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Enter the test_integer
                  argname: error_message
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_validation_attached_to_field_and_runs__integer[-50-The answer must be greater than or equal to 0]>, <Function test_validation_attached_to_field_and_runs__integer[1000-The answer must be less than 100]>, <Function test_validation_attached_to_field_and_runs__integer[50-None]>, <Function test_validation_attached_to_field_and_runs__integer[0-None]>, <Function test_validation_attached_to_field_and_runs__integer[None-Not a valid integer value.]>, <Function test_validation_attached_to_field_and_runs__integer[abcd-Not a valid integer value.]>, <Function test_validation_attached_to_field_and_runs__integer[-Enter the test_integer]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: test_special_radio_field_enhancement_to_autocomplete
              obj: <function test_special_radio_field_enhancement_to_autocomplete at 0x117c5f560>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58a50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_special_radio_field_enhancement_to_autocomplete>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: test_validation_attached_to_multiple_fields
              obj: <function test_validation_attached_to_multiple_fields at 0x117b58540>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58cd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_validation_attached_to_multiple_fields>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: test_email_strips_empty_chars
              obj: <function test_email_strips_empty_chars at 0x117b58680>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58d70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:   email@email.com
                  argname: user_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: will_validate
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: email@email.com
                  argname: saved_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:   not-an-email
                  argname: user_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: will_validate
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: not-an-email
                  argname: saved_input
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_email_strips_empty_chars[  email@email.com  -True-email@email.com]>, <Function test_email_strips_empty_chars[  not-an-email  -False-not-an-email]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: test_url_strips_empty_chars
              obj: <function test_url_strips_empty_chars at 0x117b58720>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58d70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:   www.google.com
                  argname: user_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: will_validate
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: www.google.com
                  argname: saved_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:   not-a-url
                  argname: user_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: will_validate
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: not-a-url
                  argname: saved_input
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_url_strips_empty_chars[  www.google.com  -True-www.google.com]>, <Function test_url_strips_empty_chars[  not-a-url  -False-not-a-url]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/collections/test_forms.py' lenresult=18 outcome='passed'> [hook]
      genitems <Function test_validation_attached_to_field_and_runs__text[This is an answer\non multiple lines-None-Multiple lines of text]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__text[This is an answer\non multiple lines-None-Multiple lines of text]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__text[Test string-None-Multiple lines of text]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__text[Test string-None-Multiple lines of text]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Multiple lines of text]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Multiple lines of text]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__text[Test string-None-Single line of text]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__text[Test string-None-Single line of text]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Single line of text]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Single line of text]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__integer[-50-The answer must be greater than or equal to 0]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__integer[-50-The answer must be greater than or equal to 0]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__integer[1000-The answer must be less than 100]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__integer[1000-The answer must be less than 100]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__integer[50-None]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__integer[50-None]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__integer[0-None]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__integer[0-None]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__integer[None-Not a valid integer value.]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__integer[None-Not a valid integer value.]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__integer[abcd-Not a valid integer value.]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__integer[abcd-Not a valid integer value.]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_field_and_runs__integer[-Enter the test_integer]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_field_and_runs__integer[-Enter the test_integer]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_special_radio_field_enhancement_to_autocomplete> [collection]
        pytest_itemcollected [hook]
            item: <Function test_special_radio_field_enhancement_to_autocomplete>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_validation_attached_to_multiple_fields> [collection]
        pytest_itemcollected [hook]
            item: <Function test_validation_attached_to_multiple_fields>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_email_strips_empty_chars[  email@email.com  -True-email@email.com]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_email_strips_empty_chars[  email@email.com  -True-email@email.com]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_email_strips_empty_chars[  not-an-email  -False-not-an-email]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_email_strips_empty_chars[  not-an-email  -False-not-an-email]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_url_strips_empty_chars[  www.google.com  -True-www.google.com]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_url_strips_empty_chars[  www.google.com  -True-www.google.com]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_url_strips_empty_chars[  not-a-url  -False-not-a-url]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_url_strips_empty_chars[  not-a-url  -False-not-a-url]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/collections/test_forms.py' lenresult=18 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/collections' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package data> [collection]
        pytest_collectstart [hook]
            collector: <Package data>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package data>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package data>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db
              parent: <Package data>
          finish pytest_collect_directory --> <Dir db> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces
              parent: <Package data>
          finish pytest_collect_directory --> <Package interfaces> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/test_models.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/test_models.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package data>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/test_models.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/test_models.py
            pytest_pycollect_makemodule [hook]
                parent: <Package data>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/test_models.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/test_models.py
            finish pytest_pycollect_makemodule --> <Module test_models.py> [hook]
          finish pytest_collect_file --> [<Module test_models.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data' lenresult=3 outcome='passed'> [hook]
      genitems <Dir db> [collection]
        pytest_collectstart [hook]
            collector: <Dir db>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Dir db>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/test_constraints.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/test_constraints.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Dir db>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/test_constraints.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/test_constraints.py
            pytest_pycollect_makemodule [hook]
                parent: <Dir db>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/test_constraints.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/test_constraints.py
            finish pytest_pycollect_makemodule --> <Module test_constraints.py> [hook]
          finish pytest_collect_file --> [<Module test_constraints.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/db' lenresult=1 outcome='passed'> [hook]
      genitems <Module test_constraints.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_constraints.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_constraints.py>
        find_module called for: test_constraints [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/test_constraints.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/db/test_constraints.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_constraints.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_constraints.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_constraints.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_constraints.py>
              name: IntegrityError
              obj: <class 'sqlalchemy.exc.IntegrityError'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_constraints.py>
              name: ExpressionType
              obj: <enum 'ExpressionType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_constraints.py>
              name: ManagedExpressionsEnum
              obj: <enum 'ManagedExpressionsEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_constraints.py>
              name: RoleEnum
              obj: <enum 'RoleEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_constraints.py>
              name: TestUserRoleConstraints
              obj: <class 'test_constraints.TestUserRoleConstraints'>
          finish pytest_pycollect_makeitem --> <Class TestUserRoleConstraints> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_constraints.py>
              name: TestExpressionConstraints
              obj: <class 'test_constraints.TestExpressionConstraints'>
          finish pytest_pycollect_makeitem --> <Class TestExpressionConstraints> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/db/test_constraints.py' lenresult=2 outcome='passed'> [hook]
      genitems <Class TestUserRoleConstraints> [collection]
        pytest_collectstart [hook]
            collector: <Class TestUserRoleConstraints>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestUserRoleConstraints>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUserRoleConstraints>
              name: test_member_role_not_platform
              obj: <function TestUserRoleConstraints.test_member_role_not_platform at 0x117b58cc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b59270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_member_role_not_platform>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUserRoleConstraints>
              name: test_unique_constraint_with_nulls
              obj: <function TestUserRoleConstraints.test_unique_constraint_with_nulls at 0x117b58d60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b59590>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_unique_constraint_with_nulls>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/db/test_constraints.py::TestUserRoleConstraints' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_member_role_not_platform> [collection]
        pytest_itemcollected [hook]
            item: <Function test_member_role_not_platform>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_unique_constraint_with_nulls> [collection]
        pytest_itemcollected [hook]
            item: <Function test_unique_constraint_with_nulls>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/db/test_constraints.py::TestUserRoleConstraints' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestExpressionConstraints> [collection]
        pytest_collectstart [hook]
            collector: <Class TestExpressionConstraints>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestExpressionConstraints>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionConstraints>
              name: test_cannot_add_two_of_the_same_kind_of_validation_to_a_question
              obj: <function TestExpressionConstraints.test_cannot_add_two_of_the_same_kind_of_validation_to_a_question at 0x117b596c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b59810>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_cannot_add_two_of_the_same_kind_of_validation_to_a_question>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/db/test_constraints.py::TestExpressionConstraints' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_cannot_add_two_of_the_same_kind_of_validation_to_a_question> [collection]
        pytest_itemcollected [hook]
            item: <Function test_cannot_add_two_of_the_same_kind_of_validation_to_a_question>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/db/test_constraints.py::TestExpressionConstraints' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/db/test_constraints.py' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/db' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package interfaces> [collection]
        pytest_collectstart [hook]
            collector: <Package interfaces>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package interfaces>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package interfaces>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_collections.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_collections.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package interfaces>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_collections.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_collections.py
            pytest_pycollect_makemodule [hook]
                parent: <Package interfaces>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_collections.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_collections.py
            finish pytest_pycollect_makemodule --> <Module test_collections.py> [hook]
          finish pytest_collect_file --> [<Module test_collections.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_grants.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_grants.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package interfaces>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_grants.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_grants.py
            pytest_pycollect_makemodule [hook]
                parent: <Package interfaces>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_grants.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_grants.py
            finish pytest_pycollect_makemodule --> <Module test_grants.py> [hook]
          finish pytest_collect_file --> [<Module test_grants.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_user.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_user.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package interfaces>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_user.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_user.py
            pytest_pycollect_makemodule [hook]
                parent: <Package interfaces>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_user.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_user.py
            finish pytest_pycollect_makemodule --> <Module test_user.py> [hook]
          finish pytest_collect_file --> [<Module test_user.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces' lenresult=3 outcome='passed'> [hook]
      genitems <Module test_collections.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_collections.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_collections.py>
        early skip of rewriting module: tests.integration.common.data [assertion]
        early skip of rewriting module: tests.integration.common.data.interfaces [assertion]
        find_module called for: tests.integration.common.data.interfaces.test_collections [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_collections.py' [assertion]
        _read_pyc(/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_collections.py): out of date [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_collections.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: uuid
              obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: IntegrityError
              obj: <class 'sqlalchemy.exc.IntegrityError'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: NoResultFound
              obj: <class 'sqlalchemy.exc.NoResultFound'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TextSingleLineAnswer
              obj: <class 'app.common.collections.types.TextSingleLineAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: DataSourceItemReferenceDependencyException
              obj: <class 'app.common.data.interfaces.collections.DataSourceItemReferenceDependencyException'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: DependencyOrderException
              obj: <class 'app.common.data.interfaces.collections.DependencyOrderException'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: add_component_condition
              obj: <function add_component_condition at 0x116691940>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: add_question_validation
              obj: <function add_question_validation at 0x1166919e0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: add_submission_event
              obj: <function add_submission_event at 0x116691760>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: clear_submission_events
              obj: <function clear_submission_events at 0x116691800>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: create_collection
              obj: <function create_collection at 0x110c66ac0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: create_form
              obj: <function create_form at 0x1166904a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: create_group
              obj: <function create_group at 0x1166909a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: create_question
              obj: <function create_question at 0x116690900>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: delete_collection
              obj: <function delete_collection at 0x116691c60>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: delete_collection_test_submissions_created_by_user
              obj: <function delete_collection_test_submissions_created_by_user at 0x116691e40>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: delete_form
              obj: <function delete_form at 0x116691d00>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: delete_question
              obj: <function delete_question at 0x116691da0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: get_collection
              obj: <function get_collection at 0x115b07100>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: get_expression
              obj: <function get_expression at 0x116691a80>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: get_expression_by_id
              obj: <function get_expression_by_id at 0x116690b80>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: get_form_by_id
              obj: <function get_form_by_id at 0x116690400>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: get_group_by_id
              obj: <function get_group_by_id at 0x116690ae0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: get_question_by_id
              obj: <function get_question_by_id at 0x116690a40>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: get_referenced_data_source_items_by_managed_expression
              obj: <function get_referenced_data_source_items_by_managed_expression at 0x1166918a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: get_submission
              obj: <function get_submission at 0x116690220>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: is_component_dependency_order_valid
              obj: <function is_component_dependency_order_valid at 0x1166911c0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: move_component_down
              obj: <function move_component_down at 0x1166914e0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: move_component_up
              obj: <function move_component_up at 0x116691440>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: move_form_down
              obj: <function move_form_down at 0x1166905e0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: move_form_up
              obj: <function move_form_up at 0x116690540>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: raise_if_data_source_item_reference_dependency
              obj: <function raise_if_data_source_item_reference_dependency at 0x1166913a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: raise_if_group_questions_depend_on_each_other
              obj: <function raise_if_group_questions_depend_on_each_other at 0x116691300>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: raise_if_question_has_any_dependencies
              obj: <function raise_if_question_has_any_dependencies at 0x116691260>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: remove_question_expression
              obj: <function remove_question_expression at 0x116691b20>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: update_group
              obj: <function update_group at 0x116691620>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: update_question
              obj: <function update_question at 0x1166916c0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: update_question_expression
              obj: <function update_question_expression at 0x116691bc0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: update_submission_data
              obj: <function update_submission_data at 0x11662d940>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: DuplicateValueError
              obj: <class 'app.common.data.interfaces.exceptions.DuplicateValueError'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: Collection
              obj: <class 'app.common.data.models.Collection'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: DataSourceItem
              obj: <class 'app.common.data.models.DataSourceItem'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: Expression
              obj: <class 'app.common.data.models.Expression'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: Form
              obj: <class 'app.common.data.models.Form'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: Group
              obj: <class 'app.common.data.models.Group'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: Question
              obj: <class 'app.common.data.models.Question'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: Submission
              obj: <class 'app.common.data.models.Submission'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: SubmissionEvent
              obj: <class 'app.common.data.models.SubmissionEvent'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: CollectionType
              obj: <enum 'CollectionType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: ExpressionType
              obj: <enum 'ExpressionType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: ManagedExpressionsEnum
              obj: <enum 'ManagedExpressionsEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: MultilineTextInputRows
              obj: <enum 'MultilineTextInputRows'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: NumberInputWidths
              obj: <enum 'NumberInputWidths'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: QuestionDataType
              obj: <enum 'QuestionDataType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: QuestionPresentationOptions
              obj: <class 'app.common.data.types.QuestionPresentationOptions'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: SubmissionEventKey
              obj: <enum 'SubmissionEventKey'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: SubmissionModeEnum
              obj: <enum 'SubmissionModeEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: AnyOf
              obj: <class 'app.common.expressions.managed.AnyOf'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: GreaterThan
              obj: <class 'app.common.expressions.managed.GreaterThan'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: LessThan
              obj: <class 'app.common.expressions.managed.LessThan'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: Specifically
              obj: <class 'app.common.expressions.managed.Specifically'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestGetCollection
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestGetCollection'>
          finish pytest_pycollect_makeitem --> <Class TestGetCollection> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestCreateCollection
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestCreateCollection'>
          finish pytest_pycollect_makeitem --> <Class TestCreateCollection> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_get_submission
              obj: <function test_get_submission at 0x117b59ee0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1179dfbb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_submission>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_get_submission_with_full_schema
              obj: <function test_get_submission_with_full_schema at 0x117b59e40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b59770>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_submission_with_full_schema>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestGetFormById
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestGetFormById'>
          finish pytest_pycollect_makeitem --> <Class TestGetFormById> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_create_form
              obj: <function test_create_form at 0x117b59940>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58a50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_form>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_form_name_unique_in_collection
              obj: <function test_form_name_unique_in_collection at 0x117b59a80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5a0d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_name_unique_in_collection>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_move_form_up_down
              obj: <function test_move_form_up_down at 0x132420b80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5a170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move_form_up_down>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_get_question
              obj: <function test_get_question at 0x132421440>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324234d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_question>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_get_group
              obj: <function test_get_group at 0x1324216c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8910>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_group>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestCreateGroup
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestCreateGroup'>
          finish pytest_pycollect_makeitem --> <Class TestCreateGroup> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestUpdateGroup
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestUpdateGroup'>
          finish pytest_pycollect_makeitem --> <Class TestUpdateGroup> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestCreateQuestion
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestCreateQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestCreateQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestUpdateQuestion
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestUpdateQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestUpdateQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_move_question_up_down
              obj: <function test_move_question_up_down at 0x132421760>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8b90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move_question_up_down>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_move_question_with_dependencies
              obj: <function test_move_question_with_dependencies at 0x132422b60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8cd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move_question_with_dependencies>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_move_group_with_dependencies
              obj: <function test_move_group_with_dependencies at 0x132422c00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8e10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move_group_with_dependencies>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_move_group_with_child_dependencies
              obj: <function test_move_group_with_child_dependencies at 0x132422ca0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move_group_with_child_dependencies>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_move_question_with_group_dependencies
              obj: <function test_move_question_with_group_dependencies at 0x132422d40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9130>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move_question_with_group_dependencies>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_move_group_with_group_dependencies
              obj: <function test_move_group_with_group_dependencies at 0x132422de0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9310>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move_group_with_group_dependencies>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_raise_if_question_has_any_dependencies
              obj: <function test_raise_if_question_has_any_dependencies at 0x132422e80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb94f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_raise_if_question_has_any_dependencies>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_raise_if_group_has_any_dependencies
              obj: <function test_raise_if_group_has_any_dependencies at 0x132422f20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1179dfbb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_raise_if_group_has_any_dependencies>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_raise_if_group_questions_depend_on_each_other
              obj: <function test_raise_if_group_questions_depend_on_each_other at 0x132422fc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b59770>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_raise_if_group_questions_depend_on_each_other>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_raise_if_radios_data_source_item_reference_dependency
              obj: <function test_raise_if_radios_data_source_item_reference_dependency at 0x132423060>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58a50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_raise_if_radios_data_source_item_reference_dependency>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_raise_if_checkboxes_data_source_item_reference_dependency
              obj: <function test_raise_if_checkboxes_data_source_item_reference_dependency at 0x132423100>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5a0d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_raise_if_checkboxes_data_source_item_reference_dependency>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_update_submission_data
              obj: <function test_update_submission_data at 0x1324231a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5a170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_submission_data>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_add_submission_event
              obj: <function test_add_submission_event at 0x132423240>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324234d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_submission_event>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_clear_events_from_submission
              obj: <function test_clear_events_from_submission at 0x1324232e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb87d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_clear_events_from_submission>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: test_get_collection_with_full_schema
              obj: <function test_get_collection_with_full_schema at 0x132423380>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_collection_with_full_schema>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestIsComponentDependencyOrderValid
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestIsComponentDependencyOrderValid'>
          finish pytest_pycollect_makeitem --> <Class TestIsComponentDependencyOrderValid> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestExpressions
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestExpressions'>
          finish pytest_pycollect_makeitem --> <Class TestExpressions> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestDeleteCollection
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestDeleteCollection'>
          finish pytest_pycollect_makeitem --> <Class TestDeleteCollection> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestDeleteForm
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestDeleteForm'>
          finish pytest_pycollect_makeitem --> <Class TestDeleteForm> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestDeleteQuestion
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestDeleteQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestDeleteQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestDeleteCollectionSubmissions
              obj: <class 'tests.integration.common.data.interfaces.test_collections.TestDeleteCollectionSubmissions'>
          finish pytest_pycollect_makeitem --> <Class TestDeleteCollectionSubmissions> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py' lenresult=35 outcome='passed'> [hook]
      genitems <Class TestGetCollection> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetCollection>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetCollection>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetCollection>
              name: test_get_collection
              obj: <function TestGetCollection.test_get_collection at 0x117b59f80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8cd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_collection>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetCollection>
              name: test_get_collection_version
              obj: <function TestGetCollection.test_get_collection_version at 0x117b59da0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9090>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_collection_version>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetCollection>
              name: test_get_collection_version_latest_by_default
              obj: <function TestGetCollection.test_get_collection_version_latest_by_default at 0x117b59d00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9130>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_collection_version_latest_by_default>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetCollection>
              name: test_get_collection_with_grant_id
              obj: <function TestGetCollection.test_get_collection_with_grant_id at 0x117b599e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_collection_with_grant_id>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetCollection>
              name: test_get_collection_with_type
              obj: <function TestGetCollection.test_get_collection_with_type at 0x117b59b20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5a170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_collection_with_type>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestGetCollection' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_get_collection> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_collection>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_collection_version> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_collection_version>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_collection_version_latest_by_default> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_collection_version_latest_by_default>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_collection_with_grant_id> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_collection_with_grant_id>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_collection_with_type> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_collection_with_type>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestGetCollection' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestCreateCollection> [collection]
        pytest_collectstart [hook]
            collector: <Class TestCreateCollection>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestCreateCollection>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateCollection>
              name: test_create_collection
              obj: <function TestCreateCollection.test_create_collection at 0x117b59bc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_collection>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateCollection>
              name: test_create_collection_name_is_unique_per_grant
              obj: <function TestCreateCollection.test_create_collection_name_is_unique_per_grant at 0x117b591c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8b90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_collection_name_is_unique_per_grant>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestCreateCollection' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_create_collection> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_collection>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_collection_name_is_unique_per_grant> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_collection_name_is_unique_per_grant>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestCreateCollection' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Function test_get_submission> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_submission>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_submission_with_full_schema> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_submission_with_full_schema>
        finish pytest_itemcollected --> [] [hook]
      genitems <Class TestGetFormById> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetFormById>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetFormById>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetFormById>
              name: test_get_form
              obj: <function TestGetFormById.test_get_form at 0x117c5f100>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8af0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_form>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetFormById>
              name: test_get_form_with_all_questions
              obj: <function TestGetFormById.test_get_form_with_all_questions at 0x117d620c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_form_with_all_questions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetFormById>
              name: test_get_form_with_grant
              obj: <function TestGetFormById.test_get_form_with_grant at 0x117d61760>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9630>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_form_with_grant>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestGetFormById' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_get_form> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_form>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_form_with_all_questions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_form_with_all_questions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_form_with_grant> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_form_with_grant>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestGetFormById' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Function test_create_form> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_form>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_form_name_unique_in_collection> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_name_unique_in_collection>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move_form_up_down> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move_form_up_down>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_question> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_question>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_group>
        finish pytest_itemcollected --> [] [hook]
      genitems <Class TestCreateGroup> [collection]
        pytest_collectstart [hook]
            collector: <Class TestCreateGroup>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestCreateGroup>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateGroup>
              name: test_create_group
              obj: <function TestCreateGroup.test_create_group at 0x1324218a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5a0d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_group>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateGroup>
              name: test_create_group_presentation_options
              obj: <function TestCreateGroup.test_create_group_presentation_options at 0x132421940>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324234d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_group_presentation_options>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateGroup>
              name: test_create_nested_components
              obj: <function TestCreateGroup.test_create_nested_components at 0x1324219e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_nested_components>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestCreateGroup' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_create_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_group>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_group_presentation_options> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_group_presentation_options>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_nested_components> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_nested_components>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestCreateGroup' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestUpdateGroup> [collection]
        pytest_collectstart [hook]
            collector: <Class TestUpdateGroup>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestUpdateGroup>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateGroup>
              name: test_update_group
              obj: <function TestUpdateGroup.test_update_group at 0x132421a80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1179dfbb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_group>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateGroup>
              name: test_update_group_unique_overlap
              obj: <function TestUpdateGroup.test_update_group_unique_overlap at 0x132421b20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_group_unique_overlap>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateGroup>
              name: test_update_group_with_question_dependencies_cant_enable_same_page
              obj: <function TestUpdateGroup.test_update_group_with_question_dependencies_cant_enable_same_page at 0x132421bc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8a50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_group_with_question_dependencies_cant_enable_same_page>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateGroup>
              name: test_update_group_with_question_dependencies_can_disable_same_page
              obj: <function TestUpdateGroup.test_update_group_with_question_dependencies_can_disable_same_page at 0x132421c60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8eb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_group_with_question_dependencies_can_disable_same_page>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateGroup>
              name: test_update_group_with_guidance_fields
              obj: <function TestUpdateGroup.test_update_group_with_guidance_fields at 0x132421d00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8ff0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_group_with_guidance_fields>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestUpdateGroup' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_update_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_group>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_group_unique_overlap> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_group_unique_overlap>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_group_with_question_dependencies_cant_enable_same_page> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_group_with_question_dependencies_cant_enable_same_page>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_group_with_question_dependencies_can_disable_same_page> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_group_with_question_dependencies_can_disable_same_page>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_group_with_guidance_fields> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_group_with_guidance_fields>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestUpdateGroup' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestCreateQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestCreateQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestCreateQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_simple_types
              obj: <function TestCreateQuestion.test_simple_types at 0x132421800>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117568870>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Single line of text
                  argname: question_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Email address
                  argname: question_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Website address (URL)
                  argname: question_type
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_simple_types[Single line of text]>, <Function test_simple_types[Email address]>, <Function test_simple_types[Website address (URL)]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_integer
              obj: <function TestCreateQuestion.test_integer at 0x132421da0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117568870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_integer>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_text_multi_line
              obj: <function TestCreateQuestion.test_text_multi_line at 0x132421e40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_text_multi_line>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_yes_no
              obj: <function TestCreateQuestion.test_yes_no at 0x132421ee0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d62710>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_yes_no>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_radios
              obj: <function TestCreateQuestion.test_radios at 0x132421f80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d62710>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_radios>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_checkboxes
              obj: <function TestCreateQuestion.test_checkboxes at 0x132422020>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d62710>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_checkboxes>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_date
              obj: <function TestCreateQuestion.test_date at 0x1324220c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8a50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_date>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_break_if_new_question_types_added
              obj: <function TestCreateQuestion.test_break_if_new_question_types_added at 0x132422160>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb93b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_break_if_new_question_types_added>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_question_requires_data_type
              obj: <function TestCreateQuestion.test_question_requires_data_type at 0x132422200>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8ff0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_requires_data_type>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateQuestion>
              name: test_question_associated_with_group
              obj: <function TestCreateQuestion.test_question_associated_with_group at 0x1324222a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9950>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_associated_with_group>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestCreateQuestion' lenresult=12 outcome='passed'> [hook]
      genitems <Function test_simple_types[Single line of text]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_simple_types[Single line of text]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_simple_types[Email address]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_simple_types[Email address]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_simple_types[Website address (URL)]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_simple_types[Website address (URL)]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_integer> [collection]
        pytest_itemcollected [hook]
            item: <Function test_integer>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_text_multi_line> [collection]
        pytest_itemcollected [hook]
            item: <Function test_text_multi_line>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_yes_no> [collection]
        pytest_itemcollected [hook]
            item: <Function test_yes_no>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_radios> [collection]
        pytest_itemcollected [hook]
            item: <Function test_radios>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_checkboxes> [collection]
        pytest_itemcollected [hook]
            item: <Function test_checkboxes>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_date> [collection]
        pytest_itemcollected [hook]
            item: <Function test_date>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_break_if_new_question_types_added> [collection]
        pytest_itemcollected [hook]
            item: <Function test_break_if_new_question_types_added>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_question_requires_data_type> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_requires_data_type>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_question_associated_with_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_associated_with_group>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestCreateQuestion' lenresult=12 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestUpdateQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestUpdateQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestUpdateQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_simple_types
              obj: <function TestUpdateQuestion.test_simple_types at 0x132422340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58a50>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Single line of text
                  argname: question_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Email address
                  argname: question_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Website address (URL)
                  argname: question_type
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_simple_types[Single line of text]>, <Function test_simple_types[Email address]>, <Function test_simple_types[Website address (URL)]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_integer
              obj: <function TestUpdateQuestion.test_integer at 0x1324223e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58a50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_integer>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_text_multi_line
              obj: <function TestUpdateQuestion.test_text_multi_line at 0x132422480>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_text_multi_line>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_yes_no
              obj: <function TestUpdateQuestion.test_yes_no at 0x132422520>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8af0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_yes_no>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_radios
              obj: <function TestUpdateQuestion.test_radios at 0x1324225c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb93b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_radios>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_update_radios_question_options_errors_on_referenced_data_items
              obj: <function TestUpdateQuestion.test_update_radios_question_options_errors_on_referenced_data_items at 0x132422660>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb98b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_radios_question_options_errors_on_referenced_data_items>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_update_checkboxes_question_options_errors_on_referenced_data_items
              obj: <function TestUpdateQuestion.test_update_checkboxes_question_options_errors_on_referenced_data_items at 0x132422700>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8ff0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_checkboxes_question_options_errors_on_referenced_data_items>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_checkboxes
              obj: <function TestUpdateQuestion.test_checkboxes at 0x1324227a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8c30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_checkboxes>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_date
              obj: <function TestUpdateQuestion.test_date at 0x132422840>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9950>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_date>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_break_if_new_question_types_added
              obj: <function TestUpdateQuestion.test_break_if_new_question_types_added at 0x1324228e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9a90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_break_if_new_question_types_added>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_update_question_with_guidance_fields
              obj: <function TestUpdateQuestion.test_update_question_with_guidance_fields at 0x132422980>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9bd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_question_with_guidance_fields>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_update_question_guidance_optional_parameters
              obj: <function TestUpdateQuestion.test_update_question_guidance_optional_parameters at 0x132422a20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9d10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_question_guidance_optional_parameters>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpdateQuestion>
              name: test_update_question_clear_guidance_fields
              obj: <function TestUpdateQuestion.test_update_question_clear_guidance_fields at 0x132422ac0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9db0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_question_clear_guidance_fields>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestUpdateQuestion' lenresult=15 outcome='passed'> [hook]
      genitems <Function test_simple_types[Single line of text]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_simple_types[Single line of text]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_simple_types[Email address]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_simple_types[Email address]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_simple_types[Website address (URL)]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_simple_types[Website address (URL)]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_integer> [collection]
        pytest_itemcollected [hook]
            item: <Function test_integer>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_text_multi_line> [collection]
        pytest_itemcollected [hook]
            item: <Function test_text_multi_line>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_yes_no> [collection]
        pytest_itemcollected [hook]
            item: <Function test_yes_no>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_radios> [collection]
        pytest_itemcollected [hook]
            item: <Function test_radios>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_radios_question_options_errors_on_referenced_data_items> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_radios_question_options_errors_on_referenced_data_items>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_checkboxes_question_options_errors_on_referenced_data_items> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_checkboxes_question_options_errors_on_referenced_data_items>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_checkboxes> [collection]
        pytest_itemcollected [hook]
            item: <Function test_checkboxes>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_date> [collection]
        pytest_itemcollected [hook]
            item: <Function test_date>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_break_if_new_question_types_added> [collection]
        pytest_itemcollected [hook]
            item: <Function test_break_if_new_question_types_added>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_question_with_guidance_fields> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_question_with_guidance_fields>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_question_guidance_optional_parameters> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_question_guidance_optional_parameters>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_question_clear_guidance_fields> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_question_clear_guidance_fields>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestUpdateQuestion' lenresult=15 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Function test_move_question_up_down> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move_question_up_down>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move_question_with_dependencies> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move_question_with_dependencies>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move_group_with_dependencies> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move_group_with_dependencies>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move_group_with_child_dependencies> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move_group_with_child_dependencies>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move_question_with_group_dependencies> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move_question_with_group_dependencies>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move_group_with_group_dependencies> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move_group_with_group_dependencies>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_raise_if_question_has_any_dependencies> [collection]
        pytest_itemcollected [hook]
            item: <Function test_raise_if_question_has_any_dependencies>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_raise_if_group_has_any_dependencies> [collection]
        pytest_itemcollected [hook]
            item: <Function test_raise_if_group_has_any_dependencies>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_raise_if_group_questions_depend_on_each_other> [collection]
        pytest_itemcollected [hook]
            item: <Function test_raise_if_group_questions_depend_on_each_other>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_raise_if_radios_data_source_item_reference_dependency> [collection]
        pytest_itemcollected [hook]
            item: <Function test_raise_if_radios_data_source_item_reference_dependency>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_raise_if_checkboxes_data_source_item_reference_dependency> [collection]
        pytest_itemcollected [hook]
            item: <Function test_raise_if_checkboxes_data_source_item_reference_dependency>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_submission_data> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_submission_data>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_submission_event> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_submission_event>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_clear_events_from_submission> [collection]
        pytest_itemcollected [hook]
            item: <Function test_clear_events_from_submission>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_collection_with_full_schema> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_collection_with_full_schema>
        finish pytest_itemcollected --> [] [hook]
      genitems <Class TestIsComponentDependencyOrderValid> [collection]
        pytest_collectstart [hook]
            collector: <Class TestIsComponentDependencyOrderValid>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestIsComponentDependencyOrderValid>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsComponentDependencyOrderValid>
              name: test_with_nested_group_order
              obj: <function TestIsComponentDependencyOrderValid.test_with_nested_group_order at 0x132423560>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_with_nested_group_order>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestIsComponentDependencyOrderValid' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_with_nested_group_order> [collection]
        pytest_itemcollected [hook]
            item: <Function test_with_nested_group_order>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestIsComponentDependencyOrderValid' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestExpressions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestExpressions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestExpressions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_add_question_condition
              obj: <function TestExpressions.test_add_question_condition at 0x132423600>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b59270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_question_condition>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_add_condition_raises_if_same_page
              obj: <function TestExpressions.test_add_condition_raises_if_same_page at 0x1324236a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8af0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_condition_raises_if_same_page>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_add_radios_question_condition
              obj: <function TestExpressions.test_add_radios_question_condition at 0x132423740>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8ff0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_radios_question_condition>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_add_checkboxes_question_condition
              obj: <function TestExpressions.test_add_checkboxes_question_condition at 0x1324237e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9a90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_checkboxes_question_condition>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_add_question_condition_blocks_on_order
              obj: <function TestExpressions.test_add_question_condition_blocks_on_order at 0x132423880>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9c70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_question_condition_blocks_on_order>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_add_question_validation
              obj: <function TestExpressions.test_add_question_validation at 0x132423920>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9e50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_question_validation>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_update_expression
              obj: <function TestExpressions.test_update_expression at 0x1324239c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9ef0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_expression>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_update_anyof_expression
              obj: <function TestExpressions.test_update_anyof_expression at 0x132423a60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba210>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_anyof_expression>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_update_specifically_expression
              obj: <function TestExpressions.test_update_specifically_expression at 0x132423b00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba490>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_specifically_expression>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_update_expression_errors_on_validation_overlap
              obj: <function TestExpressions.test_update_expression_errors_on_validation_overlap at 0x132423ba0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58eb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_expression_errors_on_validation_overlap>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_remove_expression
              obj: <function TestExpressions.test_remove_expression at 0x132423c40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba490>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_remove_expression>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_get_expression
              obj: <function TestExpressions.test_get_expression at 0x132423ce0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9f90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_expression>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_get_expression_missing
              obj: <function TestExpressions.test_get_expression_missing at 0x132423d80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb98b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_expression_missing>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_get_expression_by_id
              obj: <function TestExpressions.test_get_expression_by_id at 0x132423e20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_expression_by_id>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_get_expression_by_id_missing
              obj: <function TestExpressions.test_get_expression_by_id_missing at 0x132423ec0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba8f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_expression_by_id_missing>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_get_referenced_data_source_items_by_anyof_managed_expression
              obj: <function TestExpressions.test_get_referenced_data_source_items_by_anyof_managed_expression at 0x132423f60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b59270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_referenced_data_source_items_by_anyof_managed_expression>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressions>
              name: test_get_referenced_data_source_items_by_specifically_managed_expression
              obj: <function TestExpressions.test_get_referenced_data_source_items_by_specifically_managed_expression at 0x117cb8040>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5a0d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_referenced_data_source_items_by_specifically_managed_expression>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestExpressions' lenresult=17 outcome='passed'> [hook]
      genitems <Function test_add_question_condition> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_question_condition>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_condition_raises_if_same_page> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_condition_raises_if_same_page>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_radios_question_condition> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_radios_question_condition>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_checkboxes_question_condition> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_checkboxes_question_condition>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_question_condition_blocks_on_order> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_question_condition_blocks_on_order>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_question_validation> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_question_validation>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_expression> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_expression>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_anyof_expression> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_anyof_expression>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_specifically_expression> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_specifically_expression>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_expression_errors_on_validation_overlap> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_expression_errors_on_validation_overlap>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_remove_expression> [collection]
        pytest_itemcollected [hook]
            item: <Function test_remove_expression>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_expression> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_expression>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_expression_missing> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_expression_missing>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_expression_by_id> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_expression_by_id>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_expression_by_id_missing> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_expression_by_id_missing>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_referenced_data_source_items_by_anyof_managed_expression> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_referenced_data_source_items_by_anyof_managed_expression>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_referenced_data_source_items_by_specifically_managed_expression> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_referenced_data_source_items_by_specifically_managed_expression>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestExpressions' lenresult=17 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestDeleteCollection> [collection]
        pytest_collectstart [hook]
            collector: <Class TestDeleteCollection>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestDeleteCollection>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteCollection>
              name: test_delete
              obj: <function TestDeleteCollection.test_delete at 0x117cb80e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9db0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_delete>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteCollection>
              name: test_delete_cascades_downstream
              obj: <function TestDeleteCollection.test_delete_cascades_downstream at 0x117cb8180>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba0d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_delete_cascades_downstream>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteCollection>
              name: test_can_delete_with_test_submissions
              obj: <function TestDeleteCollection.test_can_delete_with_test_submissions at 0x117cb8220>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9ef0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_can_delete_with_test_submissions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteCollection>
              name: test_cannot_delete_if_live_submissions
              obj: <function TestDeleteCollection.test_cannot_delete_if_live_submissions at 0x117cb82c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba210>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_cannot_delete_if_live_submissions>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestDeleteCollection' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_delete> [collection]
        pytest_itemcollected [hook]
            item: <Function test_delete>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_delete_cascades_downstream> [collection]
        pytest_itemcollected [hook]
            item: <Function test_delete_cascades_downstream>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_can_delete_with_test_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_can_delete_with_test_submissions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_cannot_delete_if_live_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_cannot_delete_if_live_submissions>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestDeleteCollection' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestDeleteForm> [collection]
        pytest_collectstart [hook]
            collector: <Class TestDeleteForm>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestDeleteForm>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteForm>
              name: test_delete
              obj: <function TestDeleteForm.test_delete at 0x117cb8360>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5a0d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_delete>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteForm>
              name: test_form_reordering
              obj: <function TestDeleteForm.test_form_reordering at 0x117cb8400>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b58eb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_reordering>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestDeleteForm' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_delete> [collection]
        pytest_itemcollected [hook]
            item: <Function test_delete>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_form_reordering> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_reordering>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestDeleteForm' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestDeleteQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestDeleteQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestDeleteQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteQuestion>
              name: test_delete
              obj: <function TestDeleteQuestion.test_delete at 0x117cb84a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_delete>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteQuestion>
              name: test_form_reordering
              obj: <function TestDeleteQuestion.test_form_reordering at 0x117cb8540>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb8af0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_reordering>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteQuestion>
              name: test_delete_group
              obj: <function TestDeleteQuestion.test_delete_group at 0x117cb85e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9c70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_delete_group>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteQuestion>
              name: test_nested_question_in_group
              obj: <function TestDeleteQuestion.test_nested_question_in_group at 0x117cb8680>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_nested_question_in_group>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestDeleteQuestion' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_delete> [collection]
        pytest_itemcollected [hook]
            item: <Function test_delete>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_form_reordering> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_reordering>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_delete_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_delete_group>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_nested_question_in_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_nested_question_in_group>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestDeleteQuestion' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestDeleteCollectionSubmissions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestDeleteCollectionSubmissions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestDeleteCollectionSubmissions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestDeleteCollectionSubmissions>
              name: test_delete_test_collection_submissions_created_by_user
              obj: <function TestDeleteCollectionSubmissions.test_delete_test_collection_submissions_created_by_user at 0x117cb8720>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9a90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_delete_test_collection_submissions_created_by_user>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestDeleteCollectionSubmissions' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_delete_test_collection_submissions_created_by_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_delete_test_collection_submissions_created_by_user>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py::TestDeleteCollectionSubmissions' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_collections.py' lenresult=35 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_grants.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_grants.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_grants.py>
        find_module called for: tests.integration.common.data.interfaces.test_grants [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_grants.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_grants.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: ExceptionInfo
              obj: <class '_pytest._code.code.ExceptionInfo'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: DuplicateValueError
              obj: <class 'app.common.data.interfaces.exceptions.DuplicateValueError'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: create_grant
              obj: <function create_grant at 0x1166922a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: get_all_grants
              obj: <function get_all_grants at 0x116692200>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: get_all_grants_by_user
              obj: <function get_all_grants_by_user at 0x116692160>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: get_grant
              obj: <function get_grant at 0x116692020>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: grant_name_exists
              obj: <function grant_name_exists at 0x1166920c0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: update_grant
              obj: <function update_grant at 0x116692340>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: Grant
              obj: <class 'app.common.data.models.Grant'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: RoleEnum
              obj: <enum 'RoleEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: test_get_grant
              obj: <function test_get_grant at 0x117b58a40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba350>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_grant>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: test_get_all_grants_platform_admin
              obj: <function test_get_all_grants_platform_admin at 0x117b5a0c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9c70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_all_grants_platform_admin>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: test_get_all_grants_member
              obj: <function test_get_all_grants_member at 0x117b58ea0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba210>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_all_grants_member>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: test_get_all_grants_by_user
              obj: <function test_get_all_grants_by_user at 0x117cb8fe0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9950>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_all_grants_by_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: test_create_grant
              obj: <function test_create_grant at 0x117cb9da0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba670>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_grant>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: test_create_duplicate_grant
              obj: <function test_create_duplicate_grant at 0x117cba7a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_duplicate_grant>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: test_update_grant_success
              obj: <function test_update_grant_success at 0x117cb9800>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba8f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_grant_success>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: test_update_grant_duplicate_name
              obj: <function test_update_grant_duplicate_name at 0x117cb9d00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cbaad0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_grant_duplicate_name>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: test_updated_grant_nothing_provided
              obj: <function test_updated_grant_nothing_provided at 0x117cba5c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cbac10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_updated_grant_nothing_provided>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grants.py>
              name: TestGrantNameExists
              obj: <class 'tests.integration.common.data.interfaces.test_grants.TestGrantNameExists'>
          finish pytest_pycollect_makeitem --> <Class TestGrantNameExists> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_grants.py' lenresult=10 outcome='passed'> [hook]
      genitems <Function test_get_grant> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_grant>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_all_grants_platform_admin> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_all_grants_platform_admin>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_all_grants_member> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_all_grants_member>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_all_grants_by_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_all_grants_by_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_grant> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_grant>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_duplicate_grant> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_duplicate_grant>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_grant_success> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_grant_success>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_grant_duplicate_name> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_grant_duplicate_name>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_updated_grant_nothing_provided> [collection]
        pytest_itemcollected [hook]
            item: <Function test_updated_grant_nothing_provided>
        finish pytest_itemcollected --> [] [hook]
      genitems <Class TestGrantNameExists> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGrantNameExists>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGrantNameExists>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantNameExists>
              name: test_grant_name_exists_true
              obj: <function TestGrantNameExists.test_grant_name_exists_true at 0x117cb8860>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9c70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_name_exists_true>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantNameExists>
              name: test_grant_name_exists_false
              obj: <function TestGrantNameExists.test_grant_name_exists_false at 0x117cb9bc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9950>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_name_exists_false>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantNameExists>
              name: test_grant_name_exists_case_insensitive
              obj: <function TestGrantNameExists.test_grant_name_exists_case_insensitive at 0x117cb8ae0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_name_exists_case_insensitive>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantNameExists>
              name: test_grant_name_exists_exclude_current_grant
              obj: <function TestGrantNameExists.test_grant_name_exists_exclude_current_grant at 0x117cba0c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cbab70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_name_exists_exclude_current_grant>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_grants.py::TestGrantNameExists' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_grant_name_exists_true> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_name_exists_true>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_name_exists_false> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_name_exists_false>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_name_exists_case_insensitive> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_name_exists_case_insensitive>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_name_exists_exclude_current_grant> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_name_exists_exclude_current_grant>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_grants.py::TestGrantNameExists' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_grants.py' lenresult=10 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_user.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_user.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_user.py>
        find_module called for: tests.integration.common.data.interfaces.test_user [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_user.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/interfaces/test_user.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: datetime
              obj: <class 'datetime.datetime'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: timedelta
              obj: <class 'datetime.timedelta'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: func
              obj: <sqlalchemy.sql.functions._FunctionGenerator object at 0x107bf6900>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: select
              obj: <function select at 0x107eea520>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: interfaces
              obj: <module 'app.common.data.interfaces' from '/Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: InvalidUserRoleError
              obj: <class 'app.common.data.interfaces.exceptions.InvalidUserRoleError'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: Invitation
              obj: <class 'app.common.data.models_user.Invitation'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: User
              obj: <class 'app.common.data.models_user.User'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: UserRole
              obj: <class 'app.common.data.models_user.UserRole'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: RoleEnum
              obj: <enum 'RoleEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TimeFreezer
              obj: <class 'tests.integration.utils.TimeFreezer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: freeze_time_format
              obj: %Y-%m-%d %H:%M:%S
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestCreateMagicLink
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestCreateMagicLink'>
          finish pytest_pycollect_makeitem --> <Class TestCreateMagicLink> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestGetMagicLink
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestGetMagicLink'>
          finish pytest_pycollect_makeitem --> <Class TestGetMagicLink> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestClaimMagicLink
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestClaimMagicLink'>
          finish pytest_pycollect_makeitem --> <Class TestClaimMagicLink> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestGetUser
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestGetUser'>
          finish pytest_pycollect_makeitem --> <Class TestGetUser> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestGetUserByEmail
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestGetUserByEmail'>
          finish pytest_pycollect_makeitem --> <Class TestGetUserByEmail> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestGetUserByAzureAdSubjectId
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestGetUserByAzureAdSubjectId'>
          finish pytest_pycollect_makeitem --> <Class TestGetUserByAzureAdSubjectId> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestSetUserLastLoggedInAt
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestSetUserLastLoggedInAt'>
          finish pytest_pycollect_makeitem --> <Class TestSetUserLastLoggedInAt> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestUpsertUserByEmail
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestUpsertUserByEmail'>
          finish pytest_pycollect_makeitem --> <Class TestUpsertUserByEmail> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestUpsertUserByAzureAdSubjectId
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestUpsertUserByAzureAdSubjectId'>
          finish pytest_pycollect_makeitem --> <Class TestUpsertUserByAzureAdSubjectId> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestUpsertUserRole
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestUpsertUserRole'>
          finish pytest_pycollect_makeitem --> <Class TestUpsertUserRole> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestSetUserRoleInterfaces
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestSetUserRoleInterfaces'>
          finish pytest_pycollect_makeitem --> <Class TestSetUserRoleInterfaces> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestRemoveUserRoleInterfaces
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestRemoveUserRoleInterfaces'>
          finish pytest_pycollect_makeitem --> <Class TestRemoveUserRoleInterfaces> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_user.py>
              name: TestInvitations
              obj: <class 'tests.integration.common.data.interfaces.test_user.TestInvitations'>
          finish pytest_pycollect_makeitem --> <Class TestInvitations> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py' lenresult=13 outcome='passed'> [hook]
      genitems <Class TestCreateMagicLink> [collection]
        pytest_collectstart [hook]
            collector: <Class TestCreateMagicLink>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestCreateMagicLink>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateMagicLink>
              name: test_create_magic_link_existing_user
              obj: <function TestCreateMagicLink.test_create_magic_link_existing_user at 0x117b5b740>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba3f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_magic_link_existing_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateMagicLink>
              name: test_create_magic_link_new_user
              obj: <function TestCreateMagicLink.test_create_magic_link_new_user at 0x117b5bb00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cbbe30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_magic_link_new_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateMagicLink>
              name: test_create_magic_link_check_expiry_time
              obj: <function TestCreateMagicLink.test_create_magic_link_check_expiry_time at 0x117b5bec0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c100f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_magic_link_check_expiry_time>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCreateMagicLink>
              name: test_create_magic_link_expires_other_magic_links_for_the_user
              obj: <function TestCreateMagicLink.test_create_magic_link_expires_other_magic_links_for_the_user at 0x117b5a340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5b9d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_magic_link_expires_other_magic_links_for_the_user>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestCreateMagicLink' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_create_magic_link_existing_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_magic_link_existing_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_magic_link_new_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_magic_link_new_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_magic_link_check_expiry_time> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_magic_link_check_expiry_time>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_magic_link_expires_other_magic_links_for_the_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_magic_link_expires_other_magic_links_for_the_user>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestCreateMagicLink' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetMagicLink> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetMagicLink>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetMagicLink>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetMagicLink>
              name: test_get_magic_link_by_id
              obj: <function TestGetMagicLink.test_get_magic_link_by_id at 0x117b5a980>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_magic_link_by_id>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetMagicLink>
              name: test_get_magic_link_by_code
              obj: <function TestGetMagicLink.test_get_magic_link_by_code at 0x117b5b380>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_magic_link_by_code>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestGetMagicLink' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_get_magic_link_by_id> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_magic_link_by_id>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_magic_link_by_code> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_magic_link_by_code>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestGetMagicLink' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestClaimMagicLink> [collection]
        pytest_collectstart [hook]
            collector: <Class TestClaimMagicLink>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestClaimMagicLink>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestClaimMagicLink>
              name: test_claim_magic_link_success
              obj: <function TestClaimMagicLink.test_claim_magic_link_success at 0x117b5a3e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba670>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_claim_magic_link_success>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestClaimMagicLink>
              name: test_claim_magic_link_fail_no_user
              obj: <function TestClaimMagicLink.test_claim_magic_link_fail_no_user at 0x116adbd80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cbbf70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_claim_magic_link_fail_no_user>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestClaimMagicLink' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_claim_magic_link_success> [collection]
        pytest_itemcollected [hook]
            item: <Function test_claim_magic_link_success>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_claim_magic_link_fail_no_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_claim_magic_link_fail_no_user>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestClaimMagicLink' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetUser> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetUser>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetUser>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetUser>
              name: test_get_user_by_id
              obj: <function TestGetUser.test_get_user_by_id at 0x114e70f40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c102d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_user_by_id>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestGetUser' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_get_user_by_id> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_user_by_id>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestGetUser' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetUserByEmail> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetUserByEmail>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetUserByEmail>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetUserByEmail>
              name: test_get_existing_user
              obj: <function TestGetUserByEmail.test_get_existing_user at 0x114e70e00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10410>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_existing_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetUserByEmail>
              name: test_get_user_where_none_exists
              obj: <function TestGetUserByEmail.test_get_user_where_none_exists at 0x114e70ea0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5b9d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_user_where_none_exists>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestGetUserByEmail' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_get_existing_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_existing_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_user_where_none_exists> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_user_where_none_exists>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestGetUserByEmail' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetUserByAzureAdSubjectId> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetUserByAzureAdSubjectId>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetUserByAzureAdSubjectId>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetUserByAzureAdSubjectId>
              name: test_get_existing_user
              obj: <function TestGetUserByAzureAdSubjectId.test_get_existing_user at 0x114e70d60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_existing_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetUserByAzureAdSubjectId>
              name: test_get_user_where_none_exists
              obj: <function TestGetUserByAzureAdSubjectId.test_get_user_where_none_exists at 0x110c19b20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_user_where_none_exists>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestGetUserByAzureAdSubjectId' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_get_existing_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_existing_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_user_where_none_exists> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_user_where_none_exists>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestGetUserByAzureAdSubjectId' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestSetUserLastLoggedInAt> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSetUserLastLoggedInAt>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSetUserLastLoggedInAt>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUserLastLoggedInAt>
              name: test_set_user_last_logged_in_at_utc
              obj: <function TestSetUserLastLoggedInAt.test_set_user_last_logged_in_at_utc at 0x116ad9b20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c102d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_set_user_last_logged_in_at_utc>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestSetUserLastLoggedInAt' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_set_user_last_logged_in_at_utc> [collection]
        pytest_itemcollected [hook]
            item: <Function test_set_user_last_logged_in_at_utc>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestSetUserLastLoggedInAt' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestUpsertUserByEmail> [collection]
        pytest_collectstart [hook]
            collector: <Class TestUpsertUserByEmail>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestUpsertUserByEmail>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpsertUserByEmail>
              name: test_create_new_user
              obj: <function TestUpsertUserByEmail.test_create_new_user at 0x117cb9940>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10550>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_new_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpsertUserByEmail>
              name: test_get_existing_user_with_update
              obj: <function TestUpsertUserByEmail.test_get_existing_user_with_update at 0x117cba200>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10730>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_existing_user_with_update>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestUpsertUserByEmail' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_create_new_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_new_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_existing_user_with_update> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_existing_user_with_update>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestUpsertUserByEmail' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestUpsertUserByAzureAdSubjectId> [collection]
        pytest_collectstart [hook]
            collector: <Class TestUpsertUserByAzureAdSubjectId>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestUpsertUserByAzureAdSubjectId>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpsertUserByAzureAdSubjectId>
              name: test_create_new_user
              obj: <function TestUpsertUserByAzureAdSubjectId.test_create_new_user at 0x117cba340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10a50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_new_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpsertUserByAzureAdSubjectId>
              name: test_get_existing_user_with_update
              obj: <function TestUpsertUserByAzureAdSubjectId.test_get_existing_user_with_update at 0x117cbade0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10c30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_existing_user_with_update>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestUpsertUserByAzureAdSubjectId' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_create_new_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_new_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_existing_user_with_update> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_existing_user_with_update>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestUpsertUserByAzureAdSubjectId' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestUpsertUserRole> [collection]
        pytest_collectstart [hook]
            collector: <Class TestUpsertUserRole>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestUpsertUserRole>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpsertUserRole>
              name: test_add_user_role
              obj: <function TestUpsertUserRole.test_add_user_role at 0x110c199e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9c70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: organisation
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: grant
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.ADMIN
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: organisation
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: grant
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.MEMBER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_user_role[False-False-admin]>, <Function test_add_user_role[True-False-member]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpsertUserRole>
              name: test_multiple_roles_treated_as_distinct_and_dont_overwrite
              obj: <function TestUpsertUserRole.test_multiple_roles_treated_as_distinct_and_dont_overwrite at 0x117cbaca0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5b9d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_multiple_roles_treated_as_distinct_and_dont_overwrite>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpsertUserRole>
              name: test_add_existing_user_role
              obj: <function TestUpsertUserRole.test_add_existing_user_role at 0x117cbae80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5b9d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_existing_user_role>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpsertUserRole>
              name: test_upsert_existing_user_role
              obj: <function TestUpsertUserRole.test_upsert_existing_user_role at 0x117cbaf20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c104b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_upsert_existing_user_role>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUpsertUserRole>
              name: test_add_invalid_user_role
              obj: <function TestUpsertUserRole.test_add_invalid_user_role at 0x117cbafc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10550>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: organisation
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: grant
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.MEMBER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: A 'member' role must be linked to an organisation or grant.
                  argname: message
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_invalid_user_role[False-False-member-A 'member' role must be linked to an organisation or grant.]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestUpsertUserRole' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_add_user_role[False-False-admin]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_user_role[False-False-admin]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_user_role[True-False-member]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_user_role[True-False-member]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_roles_treated_as_distinct_and_dont_overwrite> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_roles_treated_as_distinct_and_dont_overwrite>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_existing_user_role> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_existing_user_role>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_upsert_existing_user_role> [collection]
        pytest_itemcollected [hook]
            item: <Function test_upsert_existing_user_role>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_invalid_user_role[False-False-member-A 'member' role must be linked to an organisation or grant.]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_invalid_user_role[False-False-member-A 'member' role must be linked to an organisation or grant.]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestUpsertUserRole' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestSetUserRoleInterfaces> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSetUserRoleInterfaces>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSetUserRoleInterfaces>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUserRoleInterfaces>
              name: test_set_platform_admin_role_for_user
              obj: <function TestSetUserRoleInterfaces.test_set_platform_admin_role_for_user at 0x117cbb060>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cbaad0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_set_platform_admin_role_for_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUserRoleInterfaces>
              name: test_set_platform_admin_role_already_exists
              obj: <function TestSetUserRoleInterfaces.test_set_platform_admin_role_already_exists at 0x117cbb100>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10690>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_set_platform_admin_role_already_exists>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUserRoleInterfaces>
              name: test_set_platform_admin_multiple_roles_already_exists
              obj: <function TestSetUserRoleInterfaces.test_set_platform_admin_multiple_roles_already_exists at 0x117cbb1a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10550>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_set_platform_admin_multiple_roles_already_exists>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUserRoleInterfaces>
              name: test_set_grant_team_role_for_user
              obj: <function TestSetUserRoleInterfaces.test_set_grant_team_role_for_user at 0x117cbb240>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10a50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_set_grant_team_role_for_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUserRoleInterfaces>
              name: test_set_grant_team_role_already_exists
              obj: <function TestSetUserRoleInterfaces.test_set_grant_team_role_already_exists at 0x117cbb2e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10d70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_set_grant_team_role_already_exists>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestSetUserRoleInterfaces' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_set_platform_admin_role_for_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_set_platform_admin_role_for_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_set_platform_admin_role_already_exists> [collection]
        pytest_itemcollected [hook]
            item: <Function test_set_platform_admin_role_already_exists>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_set_platform_admin_multiple_roles_already_exists> [collection]
        pytest_itemcollected [hook]
            item: <Function test_set_platform_admin_multiple_roles_already_exists>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_set_grant_team_role_for_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_set_grant_team_role_for_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_set_grant_team_role_already_exists> [collection]
        pytest_itemcollected [hook]
            item: <Function test_set_grant_team_role_already_exists>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestSetUserRoleInterfaces' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestRemoveUserRoleInterfaces> [collection]
        pytest_collectstart [hook]
            collector: <Class TestRemoveUserRoleInterfaces>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestRemoveUserRoleInterfaces>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestRemoveUserRoleInterfaces>
              name: test_remove_platform_admin_role_from_user
              obj: <function TestRemoveUserRoleInterfaces.test_remove_platform_admin_role_from_user at 0x117cbb380>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c111d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_remove_platform_admin_role_from_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestRemoveUserRoleInterfaces>
              name: test_remove_platform_admin_role_when_only_other_roles_exist
              obj: <function TestRemoveUserRoleInterfaces.test_remove_platform_admin_role_when_only_other_roles_exist at 0x117cbb420>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11310>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_remove_platform_admin_role_when_only_other_roles_exist>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestRemoveUserRoleInterfaces>
              name: test_remove_grant_team_role_from_user
              obj: <function TestRemoveUserRoleInterfaces.test_remove_grant_team_role_from_user at 0x117cbb4c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c113b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_remove_grant_team_role_from_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestRemoveUserRoleInterfaces>
              name: test_remove_grant_team_role_from_user_with_multiple_roles
              obj: <function TestRemoveUserRoleInterfaces.test_remove_grant_team_role_from_user_with_multiple_roles at 0x117cbb560>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c114f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_remove_grant_team_role_from_user_with_multiple_roles>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestRemoveUserRoleInterfaces>
              name: test_remove_all_roles_from_user
              obj: <function TestRemoveUserRoleInterfaces.test_remove_all_roles_from_user at 0x117cbb600>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11630>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_remove_all_roles_from_user>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestRemoveUserRoleInterfaces' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_remove_platform_admin_role_from_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_remove_platform_admin_role_from_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_remove_platform_admin_role_when_only_other_roles_exist> [collection]
        pytest_itemcollected [hook]
            item: <Function test_remove_platform_admin_role_when_only_other_roles_exist>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_remove_grant_team_role_from_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_remove_grant_team_role_from_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_remove_grant_team_role_from_user_with_multiple_roles> [collection]
        pytest_itemcollected [hook]
            item: <Function test_remove_grant_team_role_from_user_with_multiple_roles>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_remove_all_roles_from_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_remove_all_roles_from_user>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestRemoveUserRoleInterfaces' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestInvitations> [collection]
        pytest_collectstart [hook]
            collector: <Class TestInvitations>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestInvitations>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_create_invitation
              obj: <function TestInvitations.test_create_invitation at 0x117cbb6a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5b610>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_invitation>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_create_invitation_expires_existing_invitations
              obj: <function TestInvitations.test_create_invitation_expires_existing_invitations at 0x117cbb740>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9090>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_invitation_expires_existing_invitations>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_create_invitation_expires_existing_invitations_when_org_grant_null
              obj: <function TestInvitations.test_create_invitation_expires_existing_invitations_when_org_grant_null at 0x117cbb7e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba3f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_invitation_expires_existing_invitations_when_org_grant_null>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_get_invitation
              obj: <function TestInvitations.test_get_invitation at 0x117cbb880>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba8f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_invitation>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_claim_invitation
              obj: <function TestInvitations.test_claim_invitation at 0x117cbb920>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cbbcf0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_claim_invitation>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_get_usable_invitations_by_email
              obj: <function TestInvitations.test_get_usable_invitations_by_email at 0x117cbb9c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10690>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_usable_invitations_by_email>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_create_user_and_claim_invitations
              obj: <function TestInvitations.test_create_user_and_claim_invitations at 0x117cbba60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10230>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_user_and_claim_invitations>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_grant_member_add_role_or_create_invitation_adds_role
              obj: <function TestInvitations.test_grant_member_add_role_or_create_invitation_adds_role at 0x117cbbb00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c104b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_member_add_role_or_create_invitation_adds_role>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_grant_member_add_role_or_create_invitation_creates_invitation
              obj: <function TestInvitations.test_grant_member_add_role_or_create_invitation_creates_invitation at 0x117cbbba0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_member_add_role_or_create_invitation_creates_invitation>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInvitations>
              name: test_upsert_platform_admin_user_and_set_platform_admin_role_claims_invitations
              obj: <function TestInvitations.test_upsert_platform_admin_user_and_set_platform_admin_role_claims_invitations at 0x117cbbc40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c10550>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_upsert_platform_admin_user_and_set_platform_admin_role_claims_invitations>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestInvitations' lenresult=10 outcome='passed'> [hook]
      genitems <Function test_create_invitation> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_invitation>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_invitation_expires_existing_invitations> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_invitation_expires_existing_invitations>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_invitation_expires_existing_invitations_when_org_grant_null> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_invitation_expires_existing_invitations_when_org_grant_null>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_invitation> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_invitation>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_claim_invitation> [collection]
        pytest_itemcollected [hook]
            item: <Function test_claim_invitation>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_usable_invitations_by_email> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_usable_invitations_by_email>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_create_user_and_claim_invitations> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_user_and_claim_invitations>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_member_add_role_or_create_invitation_adds_role> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_member_add_role_or_create_invitation_adds_role>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_member_add_role_or_create_invitation_creates_invitation> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_member_add_role_or_create_invitation_creates_invitation>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_upsert_platform_admin_user_and_set_platform_admin_role_claims_invitations> [collection]
        pytest_itemcollected [hook]
            item: <Function test_upsert_platform_admin_user_and_set_platform_admin_role_claims_invitations>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py::TestInvitations' lenresult=10 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces/test_user.py' lenresult=13 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/interfaces' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_models.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_models.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_models.py>
        find_module called for: tests.integration.common.data.test_models [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/test_models.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/data/test_models.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: QuestionDataType
              obj: <enum 'QuestionDataType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: ExpressionType
              obj: <enum 'ExpressionType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: QuestionPresentationOptions
              obj: <class 'app.common.data.types.QuestionPresentationOptions'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: SubmissionModeEnum
              obj: <enum 'SubmissionModeEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: TestSubmissionModel
              obj: <class 'tests.integration.common.data.test_models.TestSubmissionModel'>
          finish pytest_pycollect_makeitem --> <Class TestSubmissionModel> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: TestQuestionModel
              obj: <class 'tests.integration.common.data.test_models.TestQuestionModel'>
          finish pytest_pycollect_makeitem --> <Class TestQuestionModel> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: TestFormModel
              obj: <class 'tests.integration.common.data.test_models.TestFormModel'>
          finish pytest_pycollect_makeitem --> <Class TestFormModel> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: TestGroupModel
              obj: <class 'tests.integration.common.data.test_models.TestGroupModel'>
          finish pytest_pycollect_makeitem --> <Class TestGroupModel> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/test_models.py' lenresult=4 outcome='passed'> [hook]
      genitems <Class TestSubmissionModel> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSubmissionModel>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSubmissionModel>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionModel>
              name: test_test_submission_property_only_includes_test_submissions
              obj: <function TestSubmissionModel.test_test_submission_property_only_includes_test_submissions at 0x117c10360>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c111d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_test_submission_property_only_includes_test_submissions>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/test_models.py::TestSubmissionModel' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_test_submission_property_only_includes_test_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_test_submission_property_only_includes_test_submissions>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/test_models.py::TestSubmissionModel' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestQuestionModel> [collection]
        pytest_collectstart [hook]
            collector: <Class TestQuestionModel>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestQuestionModel>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestQuestionModel>
              name: test_question_property_selects_expressions
              obj: <function TestQuestionModel.test_question_property_selects_expressions at 0x117c10a40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11590>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_property_selects_expressions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestQuestionModel>
              name: test_question_gets_a_valid_expression_that_belongs_to_it
              obj: <function TestQuestionModel.test_question_gets_a_valid_expression_that_belongs_to_it at 0x117c10c20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5b610>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_gets_a_valid_expression_that_belongs_to_it>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestQuestionModel>
              name: test_question_does_not_get_a_valid_expression_that_does_not_belong_to_it
              obj: <function TestQuestionModel.test_question_does_not_get_a_valid_expression_that_does_not_belong_to_it at 0x117c10d60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5b610>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_does_not_get_a_valid_expression_that_does_not_belong_to_it>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestQuestionModel>
              name: test_data_source_items
              obj: <function TestQuestionModel.test_data_source_items at 0x117c10e00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5b9d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_data_source_items>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestQuestionModel>
              name: test_data_source_items_last_item_is_distinct
              obj: <function TestQuestionModel.test_data_source_items_last_item_is_distinct at 0x117c10ea0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cba670>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_data_source_items_last_item_is_distinct>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/test_models.py::TestQuestionModel' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_question_property_selects_expressions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_property_selects_expressions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_question_gets_a_valid_expression_that_belongs_to_it> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_gets_a_valid_expression_that_belongs_to_it>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_question_does_not_get_a_valid_expression_that_does_not_belong_to_it> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_does_not_get_a_valid_expression_that_does_not_belong_to_it>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_data_source_items> [collection]
        pytest_itemcollected [hook]
            item: <Function test_data_source_items>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_data_source_items_last_item_is_distinct> [collection]
        pytest_itemcollected [hook]
            item: <Function test_data_source_items_last_item_is_distinct>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/test_models.py::TestQuestionModel' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestFormModel> [collection]
        pytest_collectstart [hook]
            collector: <Class TestFormModel>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestFormModel>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormModel>
              name: test_questions_property_filters_nested_questions
              obj: <function TestFormModel.test_questions_property_filters_nested_questions at 0x117c10fe0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c119f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_questions_property_filters_nested_questions>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/test_models.py::TestFormModel' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_questions_property_filters_nested_questions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_questions_property_filters_nested_questions>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/test_models.py::TestFormModel' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGroupModel> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGroupModel>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGroupModel>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGroupModel>
              name: test_questions_property_filters_nested_questions
              obj: <function TestGroupModel.test_questions_property_filters_nested_questions at 0x117c10540>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11d10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_questions_property_filters_nested_questions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGroupModel>
              name: test_same_page_property
              obj: <function TestGroupModel.test_same_page_property at 0x117c11120>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11d10>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: show_questions_on_the_same_page
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: show_questions_on_the_same_page
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_same_page_property[True]>, <Function test_same_page_property[False]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/data/test_models.py::TestGroupModel' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_questions_property_filters_nested_questions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_questions_property_filters_nested_questions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_same_page_property[True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_same_page_property[True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_same_page_property[False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_same_page_property[False]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/test_models.py::TestGroupModel' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data/test_models.py' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/data' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package expressions> [collection]
        pytest_collectstart [hook]
            collector: <Package expressions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package expressions>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package expressions>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_init.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_init.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package expressions>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_init.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_init.py
            pytest_pycollect_makemodule [hook]
                parent: <Package expressions>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_init.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_init.py
            finish pytest_pycollect_makemodule --> <Module test_init.py> [hook]
          finish pytest_collect_file --> [<Module test_init.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_managed.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_managed.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package expressions>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_managed.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_managed.py
            pytest_pycollect_makemodule [hook]
                parent: <Package expressions>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_managed.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_managed.py
            finish pytest_pycollect_makemodule --> <Module test_managed.py> [hook]
          finish pytest_collect_file --> [<Module test_managed.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_registry.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_registry.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package expressions>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_registry.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_registry.py
            pytest_pycollect_makemodule [hook]
                parent: <Package expressions>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_registry.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_registry.py
            finish pytest_pycollect_makemodule --> <Module test_registry.py> [hook]
          finish pytest_collect_file --> [<Module test_registry.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions' lenresult=3 outcome='passed'> [hook]
      genitems <Module test_init.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_init.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_init.py>
        early skip of rewriting module: tests.integration.common.expressions [assertion]
        find_module called for: tests.integration.common.expressions.test_init [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_init.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_init.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: datetime
              obj: <module 'datetime' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/datetime.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: PropertyMock
              obj: <class 'unittest.mock.PropertyMock'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: immutabledict
              obj: <class 'immutabledict.immutabledict'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: Expression
              obj: <class 'app.common.data.models.Expression'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: ExpressionType
              obj: <enum 'ExpressionType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: DisallowedExpression
              obj: <class 'app.common.expressions.DisallowedExpression'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: ExpressionContext
              obj: <class 'app.common.expressions.ExpressionContext'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: evaluate
              obj: <function evaluate at 0x114fe9a80>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: GreaterThan
              obj: <class 'app.common.expressions.managed.GreaterThan'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: TestExpressionContext
              obj: <class 'tests.integration.common.expressions.test_init.TestExpressionContext'>
          finish pytest_pycollect_makeitem --> <Class TestExpressionContext> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: TestEvaluatingManagedExpressions
              obj: <class 'tests.integration.common.expressions.test_init.TestEvaluatingManagedExpressions'>
          finish pytest_pycollect_makeitem --> <Class TestEvaluatingManagedExpressions> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_init.py>
              name: TestEvaluatingManagedExpressionsWithRequiredFunctions
              obj: <class 'tests.integration.common.expressions.test_init.TestEvaluatingManagedExpressionsWithRequiredFunctions'>
          finish pytest_pycollect_makeitem --> <Class TestEvaluatingManagedExpressionsWithRequiredFunctions> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_init.py' lenresult=3 outcome='passed'> [hook]
      genitems <Class TestExpressionContext> [collection]
        pytest_collectstart [hook]
            collector: <Class TestExpressionContext>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestExpressionContext>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_layering
              obj: <function TestExpressionContext.test_layering at 0x117c11d00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117cb9a90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_layering>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_iteration
              obj: <function TestExpressionContext.test_iteration at 0x117c11f80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c119f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_iteration>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_get
              obj: <function TestExpressionContext.test_get at 0x117c12020>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c127b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_length
              obj: <function TestExpressionContext.test_length at 0x117c12200>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c12850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_length>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_contains
              obj: <function TestExpressionContext.test_contains at 0x117c120c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c128f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_contains>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_keys
              obj: <function TestExpressionContext.test_keys at 0x117c12160>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c12a30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_keys>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_values
              obj: <function TestExpressionContext.test_values at 0x117c122a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c12ad0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_values>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_items
              obj: <function TestExpressionContext.test_items at 0x117c12340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c12b70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_items>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_init.py::TestExpressionContext' lenresult=8 outcome='passed'> [hook]
      genitems <Function test_layering> [collection]
        pytest_itemcollected [hook]
            item: <Function test_layering>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_iteration> [collection]
        pytest_itemcollected [hook]
            item: <Function test_iteration>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_length> [collection]
        pytest_itemcollected [hook]
            item: <Function test_length>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_contains> [collection]
        pytest_itemcollected [hook]
            item: <Function test_contains>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_keys> [collection]
        pytest_itemcollected [hook]
            item: <Function test_keys>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_values> [collection]
        pytest_itemcollected [hook]
            item: <Function test_values>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_items> [collection]
        pytest_itemcollected [hook]
            item: <Function test_items>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_init.py::TestExpressionContext' lenresult=8 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestEvaluatingManagedExpressions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestEvaluatingManagedExpressions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestEvaluatingManagedExpressions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEvaluatingManagedExpressions>
              name: test_greater_than
              obj: <function TestEvaluatingManagedExpressions.test_greater_than at 0x117c123e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b5b9d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_greater_than>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_init.py::TestEvaluatingManagedExpressions' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_greater_than> [collection]
        pytest_itemcollected [hook]
            item: <Function test_greater_than>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_init.py::TestEvaluatingManagedExpressions' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestEvaluatingManagedExpressionsWithRequiredFunctions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestEvaluatingManagedExpressionsWithRequiredFunctions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestEvaluatingManagedExpressionsWithRequiredFunctions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEvaluatingManagedExpressionsWithRequiredFunctions>
              name: test_managed_expression_with_required_function_allowed_imported
              obj: <function TestEvaluatingManagedExpressionsWithRequiredFunctions.test_managed_expression_with_required_function_allowed_imported at 0x117c11bc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11450>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2023-12-01
                  argname: question_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2026-12-01
                  argname: question_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_managed_expression_with_required_function_allowed_imported[question_value0-True]>, <Function test_managed_expression_with_required_function_allowed_imported[question_value1-False]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEvaluatingManagedExpressionsWithRequiredFunctions>
              name: test_managed_expression_with_required_function_allowed_builtin
              obj: <function TestEvaluatingManagedExpressionsWithRequiredFunctions.test_managed_expression_with_required_function_allowed_builtin at 0x117c12480>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11450>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 309
                  argname: question_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: question_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_managed_expression_with_required_function_allowed_builtin[309-True]>, <Function test_managed_expression_with_required_function_allowed_builtin[0-False]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEvaluatingManagedExpressionsWithRequiredFunctions>
              name: test_managed_expression_with_required_function_allowed_custom
              obj: <function TestEvaluatingManagedExpressionsWithRequiredFunctions.test_managed_expression_with_required_function_allowed_custom at 0x117c12520>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11450>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 100
                  argname: question_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 5
                  argname: question_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_managed_expression_with_required_function_allowed_custom[100-True]>, <Function test_managed_expression_with_required_function_allowed_custom[5-False]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEvaluatingManagedExpressionsWithRequiredFunctions>
              name: test_managed_expression_with_required_function_builtin_not_present_builtin
              obj: <function TestEvaluatingManagedExpressionsWithRequiredFunctions.test_managed_expression_with_required_function_builtin_not_present_builtin at 0x117c125c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c12a30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_managed_expression_with_required_function_builtin_not_present_builtin>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEvaluatingManagedExpressionsWithRequiredFunctions>
              name: test_managed_expression_with_required_function_not_present_custom
              obj: <function TestEvaluatingManagedExpressionsWithRequiredFunctions.test_managed_expression_with_required_function_not_present_custom at 0x117c12660>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c12b70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_managed_expression_with_required_function_not_present_custom>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_init.py::TestEvaluatingManagedExpressionsWithRequiredFunctions' lenresult=8 outcome='passed'> [hook]
      genitems <Function test_managed_expression_with_required_function_allowed_imported[question_value0-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_managed_expression_with_required_function_allowed_imported[question_value0-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_managed_expression_with_required_function_allowed_imported[question_value1-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_managed_expression_with_required_function_allowed_imported[question_value1-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_managed_expression_with_required_function_allowed_builtin[309-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_managed_expression_with_required_function_allowed_builtin[309-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_managed_expression_with_required_function_allowed_builtin[0-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_managed_expression_with_required_function_allowed_builtin[0-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_managed_expression_with_required_function_allowed_custom[100-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_managed_expression_with_required_function_allowed_custom[100-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_managed_expression_with_required_function_allowed_custom[5-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_managed_expression_with_required_function_allowed_custom[5-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_managed_expression_with_required_function_builtin_not_present_builtin> [collection]
        pytest_itemcollected [hook]
            item: <Function test_managed_expression_with_required_function_builtin_not_present_builtin>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_managed_expression_with_required_function_not_present_custom> [collection]
        pytest_itemcollected [hook]
            item: <Function test_managed_expression_with_required_function_not_present_custom>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_init.py::TestEvaluatingManagedExpressionsWithRequiredFunctions' lenresult=8 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_init.py' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_managed.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_managed.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_managed.py>
        find_module called for: tests.integration.common.expressions.test_managed [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_managed.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_managed.py') [assertion]
        early skip of rewriting module: _strptime [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: datetime
              obj: <module 'datetime' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/datetime.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: uuid
              obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: get_question_by_id
              obj: <function get_question_by_id at 0x116690a40>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: Expression
              obj: <class 'app.common.data.models.Expression'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: evaluate
              obj: <function evaluate at 0x114fe9a80>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: AnyOf
              obj: <class 'app.common.expressions.managed.AnyOf'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: Between
              obj: <class 'app.common.expressions.managed.Between'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: BetweenDates
              obj: <class 'app.common.expressions.managed.BetweenDates'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: GreaterThan
              obj: <class 'app.common.expressions.managed.GreaterThan'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: IsAfter
              obj: <class 'app.common.expressions.managed.IsAfter'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: IsBefore
              obj: <class 'app.common.expressions.managed.IsBefore'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: IsNo
              obj: <class 'app.common.expressions.managed.IsNo'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: IsYes
              obj: <class 'app.common.expressions.managed.IsYes'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: LessThan
              obj: <class 'app.common.expressions.managed.LessThan'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: Specifically
              obj: <class 'app.common.expressions.managed.Specifically'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TRadioItem
              obj: <class 'app.types.TRadioItem'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestBaseManagedExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestBaseManagedExpression'>
          finish pytest_pycollect_makeitem --> <Class TestBaseManagedExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestGreaterThanExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestGreaterThanExpression'>
          finish pytest_pycollect_makeitem --> <Class TestGreaterThanExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestLessThanExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestLessThanExpression'>
          finish pytest_pycollect_makeitem --> <Class TestLessThanExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestBetweenExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestBetweenExpression'>
          finish pytest_pycollect_makeitem --> <Class TestBetweenExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestAnyOfExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestAnyOfExpression'>
          finish pytest_pycollect_makeitem --> <Class TestAnyOfExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestIsYesExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestIsYesExpression'>
          finish pytest_pycollect_makeitem --> <Class TestIsYesExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestIsNoExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestIsNoExpression'>
          finish pytest_pycollect_makeitem --> <Class TestIsNoExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestSpecificallyExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestSpecificallyExpression'>
          finish pytest_pycollect_makeitem --> <Class TestSpecificallyExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestIsBeforeExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestIsBeforeExpression'>
          finish pytest_pycollect_makeitem --> <Class TestIsBeforeExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestIsAfterExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestIsAfterExpression'>
          finish pytest_pycollect_makeitem --> <Class TestIsAfterExpression> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_managed.py>
              name: TestIsBetweenDatesExpression
              obj: <class 'tests.integration.common.expressions.test_managed.TestIsBetweenDatesExpression'>
          finish pytest_pycollect_makeitem --> <Class TestIsBetweenDatesExpression> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py' lenresult=11 outcome='passed'> [hook]
      genitems <Class TestBaseManagedExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestBaseManagedExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestBaseManagedExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBaseManagedExpression>
              name: test_gets_referenced_question
              obj: <function TestBaseManagedExpression.test_gets_referenced_question at 0x117c139c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_gets_referenced_question>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestBaseManagedExpression' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_gets_referenced_question> [collection]
        pytest_itemcollected [hook]
            item: <Function test_gets_referenced_question>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestBaseManagedExpression' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGreaterThanExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGreaterThanExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGreaterThanExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGreaterThanExpression>
              name: test_evaluate
              obj: <function TestGreaterThanExpression.test_evaluate at 0x117c13920>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b193b0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 999
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1001
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[1000-False-999-False]>, <Function test_evaluate[1000-False-1000-False]>, <Function test_evaluate[1000-True-1000-True]>, <Function test_evaluate[1000-False-1001-True]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestGreaterThanExpression' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_evaluate[1000-False-999-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[1000-False-999-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[1000-False-1000-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[1000-False-1000-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[1000-True-1000-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[1000-True-1000-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[1000-False-1001-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[1000-False-1001-True]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestGreaterThanExpression' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestLessThanExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestLessThanExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestLessThanExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestLessThanExpression>
              name: test_evaluate
              obj: <function TestLessThanExpression.test_evaluate at 0x117c13a60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11310>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 999
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1001
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[1000-False-999-True]>, <Function test_evaluate[1000-False-1000-False]>, <Function test_evaluate[1000-True-1000-True]>, <Function test_evaluate[1000-False-1001-False]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestLessThanExpression' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_evaluate[1000-False-999-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[1000-False-999-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[1000-False-1000-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[1000-False-1000-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[1000-True-1000-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[1000-True-1000-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[1000-False-1001-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[1000-False-1001-False]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestLessThanExpression' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestBetweenExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestBetweenExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestBetweenExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBetweenExpression>
              name: test_evaluate
              obj: <function TestBetweenExpression.test_evaluate at 0x117c13b00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117c11310>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: minimum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: maximum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: minimum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: maximum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: minimum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: maximum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: minimum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: maximum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 999
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: minimum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: maximum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: minimum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: minimum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: maximum_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: maximum_inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1000
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[0-False-1000-False-0-False]>, <Function test_evaluate[0-True-1000-False-0-True]>, <Function test_evaluate[0-False-1000-False-1-True]>, <Function test_evaluate[0-False-1000-False-999-True]>, <Function test_evaluate[0-False-1000-False-1000-False]>, <Function test_evaluate[0-True-1000-True-1000-True]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestBetweenExpression' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_evaluate[0-False-1000-False-0-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[0-False-1000-False-0-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[0-True-1000-False-0-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[0-True-1000-False-0-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[0-False-1000-False-1-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[0-False-1000-False-1-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[0-False-1000-False-999-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[0-False-1000-False-999-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[0-False-1000-False-1000-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[0-False-1000-False-1000-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[0-True-1000-True-1000-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[0-True-1000-True-1000-True]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestBetweenExpression' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestAnyOfExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAnyOfExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAnyOfExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAnyOfExpression>
              name: test_evaluate
              obj: <function TestAnyOfExpression.test_evaluate at 0x117c13ba0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19bd0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [{'key': 'red', 'label': 'Red'}, {'key': 'blue', 'label': 'Blue'}]
                  argname: items
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: red
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [{'key': 'red', 'label': 'Red'}, {'key': 'blue', 'label': 'Blue'}]
                  argname: items
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: blue
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [{'key': 'red', 'label': 'Red'}, {'key': 'blue', 'label': 'Blue'}]
                  argname: items
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Blue
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [{'key': 'red', 'label': 'Red'}, {'key': 'blue', 'label': 'Blue'}]
                  argname: items
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: green
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[items0-red-True]>, <Function test_evaluate[items1-blue-True]>, <Function test_evaluate[items2-Blue-False]>, <Function test_evaluate[items3-green-False]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestAnyOfExpression' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_evaluate[items0-red-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[items0-red-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[items1-blue-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[items1-blue-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[items2-Blue-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[items2-Blue-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[items3-green-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[items3-green-False]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestAnyOfExpression' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestIsYesExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestIsYesExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestIsYesExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsYesExpression>
              name: test_evaluate
              obj: <function TestIsYesExpression.test_evaluate at 0x117c13c40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19bd0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[True-True]>, <Function test_evaluate[False-False]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsYesExpression' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_evaluate[True-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[True-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-False]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsYesExpression' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestIsNoExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestIsNoExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestIsNoExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsNoExpression>
              name: test_evaluate
              obj: <function TestIsNoExpression.test_evaluate at 0x117c13ce0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19bd0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[True-False]>, <Function test_evaluate[False-True]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsNoExpression' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_evaluate[True-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[True-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-True]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsNoExpression' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestSpecificallyExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSpecificallyExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSpecificallyExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSpecificallyExpression>
              name: test_evaluate
              obj: <function TestSpecificallyExpression.test_evaluate at 0x117c13d80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19a90>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'key': 'red', 'label': 'Red'}
                  argname: item
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'red', 'blue'}
                  argname: answers
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'key': 'blue', 'label': 'Blue'}
                  argname: item
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'red', 'blue'}
                  argname: answers
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'key': 'Red', 'label': 'Red'}
                  argname: item
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'red', 'blue'}
                  argname: answers
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'key': 'green', 'label': 'Green'}
                  argname: item
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'red', 'blue'}
                  argname: answers
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[item0-answers0-True]>, <Function test_evaluate[item1-answers1-True]>, <Function test_evaluate[item2-answers2-False]>, <Function test_evaluate[item3-answers3-False]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestSpecificallyExpression' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_evaluate[item0-answers0-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[item0-answers0-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[item1-answers1-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[item1-answers1-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[item2-answers2-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[item2-answers2-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[item3-answers3-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[item3-answers3-False]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestSpecificallyExpression' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestIsBeforeExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestIsBeforeExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestIsBeforeExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsBeforeExpression>
              name: maximum_value
              obj: 2025-01-01
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsBeforeExpression>
              name: test_evaluate
              obj: <function TestIsBeforeExpression.test_evaluate at 0x117c13e20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19a90>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2024-12-30
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2025-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2025-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2025-01-03
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[False-answer0-True]>, <Function test_evaluate[False-answer1-False]>, <Function test_evaluate[True-answer2-True]>, <Function test_evaluate[False-answer3-False]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsBeforeExpression' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_evaluate[False-answer0-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-answer0-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-answer1-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-answer1-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[True-answer2-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[True-answer2-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-answer3-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-answer3-False]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsBeforeExpression' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestIsAfterExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestIsAfterExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestIsAfterExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsAfterExpression>
              name: min_value
              obj: 2020-01-01
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsAfterExpression>
              name: test_evaluate
              obj: <function TestIsAfterExpression.test_evaluate at 0x117c13f60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19a90>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2019-12-30
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2020-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2020-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: inclusive
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2020-01-03
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[False-answer0-False]>, <Function test_evaluate[False-answer1-False]>, <Function test_evaluate[True-answer2-True]>, <Function test_evaluate[False-answer3-True]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsAfterExpression' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_evaluate[False-answer0-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-answer0-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-answer1-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-answer1-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[True-answer2-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[True-answer2-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-answer3-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-answer3-True]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsAfterExpression' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestIsBetweenDatesExpression> [collection]
        pytest_collectstart [hook]
            collector: <Class TestIsBetweenDatesExpression>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestIsBetweenDatesExpression>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsBetweenDatesExpression>
              name: min_value
              obj: 2020-01-01
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsBetweenDatesExpression>
              name: max_value
              obj: 2025-01-01
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestIsBetweenDatesExpression>
              name: test_evaluate
              obj: <function TestIsBetweenDatesExpression.test_evaluate at 0x117b18ea0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19090>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2019-12-30
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2020-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2020-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2020-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2020-01-03
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2020-01-03
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2025-01-03
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2025-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2025-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2025-01-01
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2024-12-30
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: earliest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: latest_inc
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2024-12-30
                  argname: answer
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_evaluate[False-False-answer0-False]>, <Function test_evaluate[False-False-answer1-False]>, <Function test_evaluate[True-False-answer2-True]>, <Function test_evaluate[True-True-answer3-True]>, <Function test_evaluate[False-False-answer4-True]>, <Function test_evaluate[True-False-answer5-True]>, <Function test_evaluate[False-False-answer6-False]>, <Function test_evaluate[False-False-answer7-False]>, <Function test_evaluate[True-True-answer8-True]>, <Function test_evaluate[False-True-answer9-True]>, <Function test_evaluate[False-False-answer10-True]>, <Function test_evaluate[False-True-answer11-True]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsBetweenDatesExpression' lenresult=12 outcome='passed'> [hook]
      genitems <Function test_evaluate[False-False-answer0-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-False-answer0-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-False-answer1-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-False-answer1-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[True-False-answer2-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[True-False-answer2-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[True-True-answer3-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[True-True-answer3-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-False-answer4-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-False-answer4-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[True-False-answer5-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[True-False-answer5-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-False-answer6-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-False-answer6-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-False-answer7-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-False-answer7-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[True-True-answer8-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[True-True-answer8-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-True-answer9-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-True-answer9-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-False-answer10-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-False-answer10-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_evaluate[False-True-answer11-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_evaluate[False-True-answer11-True]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py::TestIsBetweenDatesExpression' lenresult=12 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_managed.py' lenresult=11 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_registry.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_registry.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_registry.py>
        find_module called for: tests.integration.common.expressions.test_registry [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_registry.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/expressions/test_registry.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_registry.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_registry.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_registry.py>
              name: QuestionDataType
              obj: <enum 'QuestionDataType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_registry.py>
              name: _registry_by_expression_enum
              obj: {<ManagedExpressionsEnum.GREATER_THAN: 'Greater than'>: <class 'app.common.expressions.managed.GreaterThan'>, <ManagedExpressionsEnum.LESS_THAN: 'Less than'>: <class 'app.common.expressions.managed.LessThan'>, <ManagedExpressionsEnum.BETWEEN: 'Between'>: <class 'app.common.expressions.managed.Between'>, <ManagedExpressionsEnum.ANY_OF: 'Any of'>: <class 'app.common.expressions.managed.AnyOf'>, <ManagedExpressionsEnum.IS_YES: 'Yes'>: <class 'app.common.expressions.managed.IsYes'>, <ManagedExpressionsEnum.IS_NO: 'No'>: <class 'app.common.expressions.managed.IsNo'>, <ManagedExpressionsEnum.SPECIFICALLY: 'Specifically'>: <class 'app.common.expressions.managed.Specifically'>, <ManagedExpressionsEnum.IS_BEFORE: 'Is before'>: <class 'app.common.expressions.managed.IsBefore'>, <ManagedExpressionsEnum.IS_AFTER: 'Is after'>: <class 'app.common.expressions.managed.IsAfter'>, <ManagedExpressionsEnum.BETWEEN_DATES: 'Between dates'>: <class 'app.common.expressions.managed.BetweenDates'>}
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_registry.py>
              name: get_managed_conditions_by_data_type
              obj: <function get_managed_conditions_by_data_type at 0x115835ee0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_registry.py>
              name: get_managed_validators_by_data_type
              obj: <function get_managed_validators_by_data_type at 0x115835f80>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_registry.py>
              name: get_registered_data_types
              obj: <function get_registered_data_types at 0x115835e40>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_registry.py>
              name: get_supported_form_questions
              obj: <function get_supported_form_questions at 0x115836160>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_registry.py>
              name: TestManagedExpressions
              obj: <class 'tests.integration.common.expressions.test_registry.TestManagedExpressions'>
          finish pytest_pycollect_makeitem --> <Class TestManagedExpressions> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_registry.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestManagedExpressions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestManagedExpressions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestManagedExpressions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManagedExpressions>
              name: test_get_registered_data_types
              obj: <function TestManagedExpressions.test_get_registered_data_types at 0x117b1a340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_registered_data_types>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManagedExpressions>
              name: test_get_supported_form_questions_filters_question_types
              obj: <function TestManagedExpressions.test_get_supported_form_questions_filters_question_types at 0x117b1a700>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1aad0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_supported_form_questions_filters_question_types>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManagedExpressions>
              name: test_get_supported_form_questions_filters_out_the_current_question
              obj: <function TestManagedExpressions.test_get_supported_form_questions_filters_out_the_current_question at 0x117b1a660>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1ab70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_supported_form_questions_filters_out_the_current_question>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManagedExpressions>
              name: test_new_managed_expressions_added
              obj: <function TestManagedExpressions.test_new_managed_expressions_added at 0x117b1a7a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1acb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_new_managed_expressions_added>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/expressions/test_registry.py::TestManagedExpressions' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_get_registered_data_types> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_registered_data_types>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_supported_form_questions_filters_question_types> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_supported_form_questions_filters_question_types>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_supported_form_questions_filters_out_the_current_question> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_supported_form_questions_filters_out_the_current_question>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_new_managed_expressions_added> [collection]
        pytest_itemcollected [hook]
            item: <Function test_new_managed_expressions_added>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_registry.py::TestManagedExpressions' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions/test_registry.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/expressions' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package helpers> [collection]
        pytest_collectstart [hook]
            collector: <Package helpers>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package helpers>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package helpers>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/test_collections.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/test_collections.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package helpers>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/test_collections.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/test_collections.py
            pytest_pycollect_makemodule [hook]
                parent: <Package helpers>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/test_collections.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/test_collections.py
            finish pytest_pycollect_makemodule --> <Module test_collections.py> [hook]
          finish pytest_collect_file --> [<Module test_collections.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/helpers' lenresult=1 outcome='passed'> [hook]
      genitems <Module test_collections.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_collections.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_collections.py>
        early skip of rewriting module: tests.integration.common.helpers [assertion]
        find_module called for: tests.integration.common.helpers.test_collections [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/test_collections.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/helpers/test_collections.py') [assertion]
        early skip of rewriting module: app.common.helpers [assertion]
        early skip of rewriting module: app.common.helpers.collections [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: csv
              obj: <module 'csv' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/csv.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: json
              obj: <module 'json' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/json/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: uuid
              obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: date
              obj: <class 'datetime.date'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: datetime
              obj: <class 'datetime.datetime'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: StringIO
              obj: <class '_io.StringIO'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: mock
              obj: <module 'unittest.mock' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/unittest/mock.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: immutabledict
              obj: <class 'immutabledict.immutabledict'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: build_question_form
              obj: <function build_question_form at 0x117b584a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: NOT_ASKED
              obj: NOT_ASKED
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: DateAnswer
              obj: <class 'app.common.collections.types.DateAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: IntegerAnswer
              obj: <class 'app.common.collections.types.IntegerAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: MultipleChoiceFromListAnswer
              obj: <class 'app.common.collections.types.MultipleChoiceFromListAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: SingleChoiceFromListAnswer
              obj: <class 'app.common.collections.types.SingleChoiceFromListAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TextMultiLineAnswer
              obj: <class 'app.common.collections.types.TextMultiLineAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TextSingleLineAnswer
              obj: <class 'app.common.collections.types.TextSingleLineAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: YesNoAnswer
              obj: <class 'app.common.collections.types.YesNoAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: interfaces
              obj: <module 'app.common.data.interfaces' from '/Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: QuestionDataType
              obj: <enum 'QuestionDataType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: SubmissionModeEnum
              obj: <enum 'SubmissionModeEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: SubmissionStatusEnum
              obj: <enum 'SubmissionStatusEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TasklistTaskStatusEnum
              obj: <enum 'TasklistTaskStatusEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: ExpressionContext
              obj: <class 'app.common.expressions.ExpressionContext'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: format_datetime
              obj: <function format_datetime at 0x115a90c20>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: CollectionHelper
              obj: <class 'app.common.helpers.collections.CollectionHelper'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: SubmissionHelper
              obj: <class 'app.common.helpers.collections.SubmissionHelper'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: _deserialise_question_type
              obj: <function _deserialise_question_type at 0x117ded8a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: AnyStringMatching
              obj: <class 'tests.utils.AnyStringMatching'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: EC
              obj: <class 'app.common.expressions.ExpressionContext'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: __pydevd_ret_val_dict
              obj: {'TestSubmissionHelper': None, 'TestCollectionHelper': None}
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestSubmissionHelper
              obj: <class 'tests.integration.common.helpers.test_collections.TestSubmissionHelper'>
          finish pytest_pycollect_makeitem --> <Class TestSubmissionHelper> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestCollectionHelper
              obj: <class 'tests.integration.common.helpers.test_collections.TestCollectionHelper'>
          finish pytest_pycollect_makeitem --> <Class TestCollectionHelper> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/helpers/test_collections.py' lenresult=2 outcome='passed'> [hook]
      genitems <Class TestSubmissionHelper> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSubmissionHelper>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSubmissionHelper>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: __pydevd_ret_val_dict
              obj: {'TestGetAndSubmitAnswerForQuestion': None, 'TestFormData': None, 'TestExpressionContext': None, 'TestStatuses': None}
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetAndSubmitAnswerForQuestion
              obj: <class 'tests.integration.common.helpers.test_collections.TestSubmissionHelper.TestGetAndSubmitAnswerForQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestGetAndSubmitAnswerForQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestFormData
              obj: <class 'tests.integration.common.helpers.test_collections.TestSubmissionHelper.TestFormData'>
          finish pytest_pycollect_makeitem --> <Class TestFormData> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestExpressionContext
              obj: <class 'tests.integration.common.helpers.test_collections.TestSubmissionHelper.TestExpressionContext'>
          finish pytest_pycollect_makeitem --> <Class TestExpressionContext> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestStatuses
              obj: <class 'tests.integration.common.helpers.test_collections.TestSubmissionHelper.TestStatuses'>
          finish pytest_pycollect_makeitem --> <Class TestStatuses> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper' lenresult=4 outcome='passed'> [hook]
      genitems <Class TestGetAndSubmitAnswerForQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetAndSubmitAnswerForQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetAndSubmitAnswerForQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetAndSubmitAnswerForQuestion>
              name: test_submit_valid_data
              obj: <function TestSubmissionHelper.TestGetAndSubmitAnswerForQuestion.test_submit_valid_data at 0x117deda80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19090>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_submit_valid_data>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetAndSubmitAnswerForQuestion>
              name: test_get_data_maps_type
              obj: <function TestSubmissionHelper.TestGetAndSubmitAnswerForQuestion.test_get_data_maps_type at 0x117dedb20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a990>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_data_maps_type>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetAndSubmitAnswerForQuestion>
              name: test_can_get_falsey_answers
              obj: <function TestSubmissionHelper.TestGetAndSubmitAnswerForQuestion.test_can_get_falsey_answers at 0x117dedbc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a530>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_can_get_falsey_answers>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetAndSubmitAnswerForQuestion>
              name: test_cannot_submit_answer_on_submitted_submission
              obj: <function TestSubmissionHelper.TestGetAndSubmitAnswerForQuestion.test_cannot_submit_answer_on_submitted_submission at 0x117dedc60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117dee7b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_cannot_submit_answer_on_submitted_submission>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper::TestGetAndSubmitAnswerForQuestion' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_submit_valid_data> [collection]
        pytest_itemcollected [hook]
            item: <Function test_submit_valid_data>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_data_maps_type> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_data_maps_type>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_can_get_falsey_answers> [collection]
        pytest_itemcollected [hook]
            item: <Function test_can_get_falsey_answers>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_cannot_submit_answer_on_submitted_submission> [collection]
        pytest_itemcollected [hook]
            item: <Function test_cannot_submit_answer_on_submitted_submission>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper::TestGetAndSubmitAnswerForQuestion' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestFormData> [collection]
        pytest_collectstart [hook]
            collector: <Class TestFormData>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestFormData>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormData>
              name: test_no_submission_data
              obj: <function TestSubmissionHelper.TestFormData.test_no_submission_data at 0x117dedd00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117deea30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_no_submission_data>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormData>
              name: test_with_submission_data
              obj: <function TestSubmissionHelper.TestFormData.test_with_submission_data at 0x117dedda0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117deecb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_with_submission_data>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper::TestFormData' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_no_submission_data> [collection]
        pytest_itemcollected [hook]
            item: <Function test_no_submission_data>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_with_submission_data> [collection]
        pytest_itemcollected [hook]
            item: <Function test_with_submission_data>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper::TestFormData' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestExpressionContext> [collection]
        pytest_collectstart [hook]
            collector: <Class TestExpressionContext>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestExpressionContext>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_no_submission_data
              obj: <function TestSubmissionHelper.TestExpressionContext.test_no_submission_data at 0x117dede40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117deee90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_no_submission_data>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExpressionContext>
              name: test_with_submission_data
              obj: <function TestSubmissionHelper.TestExpressionContext.test_with_submission_data at 0x117dedee0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117deefd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_with_submission_data>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper::TestExpressionContext' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_no_submission_data> [collection]
        pytest_itemcollected [hook]
            item: <Function test_no_submission_data>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_with_submission_data> [collection]
        pytest_itemcollected [hook]
            item: <Function test_with_submission_data>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper::TestExpressionContext' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestStatuses> [collection]
        pytest_collectstart [hook]
            collector: <Class TestStatuses>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestStatuses>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestStatuses>
              name: test_form_status_based_on_questions
              obj: <function TestSubmissionHelper.TestStatuses.test_form_status_based_on_questions at 0x117dedf80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19090>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_status_based_on_questions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestStatuses>
              name: test_form_status_with_no_questions
              obj: <function TestSubmissionHelper.TestStatuses.test_form_status_with_no_questions at 0x117dee020>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a990>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_status_with_no_questions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestStatuses>
              name: test_submission_status_based_on_forms
              obj: <function TestSubmissionHelper.TestStatuses.test_submission_status_based_on_forms at 0x117dee0c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b199f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_submission_status_based_on_forms>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestStatuses>
              name: test_toggle_form_status
              obj: <function TestSubmissionHelper.TestStatuses.test_toggle_form_status at 0x117dee160>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117dee990>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_toggle_form_status>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestStatuses>
              name: test_toggle_form_status_doesnt_change_status_if_already_completed
              obj: <function TestSubmissionHelper.TestStatuses.test_toggle_form_status_doesnt_change_status_if_already_completed at 0x117dee200>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117deeb70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_toggle_form_status_doesnt_change_status_if_already_completed>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestStatuses>
              name: test_submit_submission_rejected_if_not_complete
              obj: <function TestSubmissionHelper.TestStatuses.test_submit_submission_rejected_if_not_complete at 0x117dee2a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117dee850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_submit_submission_rejected_if_not_complete>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper::TestStatuses' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_form_status_based_on_questions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_status_based_on_questions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_form_status_with_no_questions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_status_with_no_questions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_submission_status_based_on_forms> [collection]
        pytest_itemcollected [hook]
            item: <Function test_submission_status_based_on_forms>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_toggle_form_status> [collection]
        pytest_itemcollected [hook]
            item: <Function test_toggle_form_status>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_toggle_form_status_doesnt_change_status_if_already_completed> [collection]
        pytest_itemcollected [hook]
            item: <Function test_toggle_form_status_doesnt_change_status_if_already_completed>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_submit_submission_rejected_if_not_complete> [collection]
        pytest_itemcollected [hook]
            item: <Function test_submit_submission_rejected_if_not_complete>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper::TestStatuses' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/helpers/test_collections.py::TestSubmissionHelper' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestCollectionHelper> [collection]
        pytest_collectstart [hook]
            collector: <Class TestCollectionHelper>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestCollectionHelper>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCollectionHelper>
              name: test_init_collection_helper
              obj: <function TestCollectionHelper.test_init_collection_helper at 0x117ded940>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117deefd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_init_collection_helper>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCollectionHelper>
              name: test_generate_csv_content_check_correct_rows_for_multiple_simple_submissions_every_question_type
              obj: <function TestCollectionHelper.test_generate_csv_content_check_correct_rows_for_multiple_simple_submissions_every_question_type at 0x117ded9e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117def070>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_generate_csv_content_check_correct_rows_for_multiple_simple_submissions_every_question_type>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCollectionHelper>
              name: test_generate_csv_content_skipped_questions
              obj: <function TestCollectionHelper.test_generate_csv_content_skipped_questions at 0x117dee340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117def1b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_generate_csv_content_skipped_questions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCollectionHelper>
              name: test_generate_csv_content_skipped_questions_previously_answered
              obj: <function TestCollectionHelper.test_generate_csv_content_skipped_questions_previously_answered at 0x117dee3e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117def390>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_generate_csv_content_skipped_questions_previously_answered>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCollectionHelper>
              name: test_all_question_types_appear_correctly_in_csv_row
              obj: <function TestCollectionHelper.test_all_question_types_appear_correctly_in_csv_row at 0x117dee480>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1bbb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_all_question_types_appear_correctly_in_csv_row>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCollectionHelper>
              name: test_all_question_types_appear_correctly_in_json_export
              obj: <function TestCollectionHelper.test_all_question_types_appear_correctly_in_json_export at 0x117dee520>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19090>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_all_question_types_appear_correctly_in_json_export>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCollectionHelper>
              name: test_multiple_submission_export_non_conditional
              obj: <function TestCollectionHelper.test_multiple_submission_export_non_conditional at 0x117dee5c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19090>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 3
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 5
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 12
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 60
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 100
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 500
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_multiple_submission_export_non_conditional[1]>, <Function test_multiple_submission_export_non_conditional[2]>, <Function test_multiple_submission_export_non_conditional[3]>, <Function test_multiple_submission_export_non_conditional[5]>, <Function test_multiple_submission_export_non_conditional[12]>, <Function test_multiple_submission_export_non_conditional[60]>, <Function test_multiple_submission_export_non_conditional[100]>, <Function test_multiple_submission_export_non_conditional[500]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCollectionHelper>
              name: test_multiple_submission_export_conditional
              obj: <function TestCollectionHelper.test_multiple_submission_export_conditional at 0x117dee660>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a850>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 3
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 5
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 12
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 60
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 100
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 500
                  argname: num_test_submissions
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_multiple_submission_export_conditional[1]>, <Function test_multiple_submission_export_conditional[2]>, <Function test_multiple_submission_export_conditional[3]>, <Function test_multiple_submission_export_conditional[5]>, <Function test_multiple_submission_export_conditional[12]>, <Function test_multiple_submission_export_conditional[60]>, <Function test_multiple_submission_export_conditional[100]>, <Function test_multiple_submission_export_conditional[500]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/helpers/test_collections.py::TestCollectionHelper' lenresult=22 outcome='passed'> [hook]
      genitems <Function test_init_collection_helper> [collection]
        pytest_itemcollected [hook]
            item: <Function test_init_collection_helper>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_generate_csv_content_check_correct_rows_for_multiple_simple_submissions_every_question_type> [collection]
        pytest_itemcollected [hook]
            item: <Function test_generate_csv_content_check_correct_rows_for_multiple_simple_submissions_every_question_type>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_generate_csv_content_skipped_questions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_generate_csv_content_skipped_questions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_generate_csv_content_skipped_questions_previously_answered> [collection]
        pytest_itemcollected [hook]
            item: <Function test_generate_csv_content_skipped_questions_previously_answered>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_all_question_types_appear_correctly_in_csv_row> [collection]
        pytest_itemcollected [hook]
            item: <Function test_all_question_types_appear_correctly_in_csv_row>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_all_question_types_appear_correctly_in_json_export> [collection]
        pytest_itemcollected [hook]
            item: <Function test_all_question_types_appear_correctly_in_json_export>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_non_conditional[1]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_non_conditional[1]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_non_conditional[2]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_non_conditional[2]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_non_conditional[3]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_non_conditional[3]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_non_conditional[5]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_non_conditional[5]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_non_conditional[12]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_non_conditional[12]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_non_conditional[60]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_non_conditional[60]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_non_conditional[100]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_non_conditional[100]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_non_conditional[500]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_non_conditional[500]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_conditional[1]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_conditional[1]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_conditional[2]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_conditional[2]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_conditional[3]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_conditional[3]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_conditional[5]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_conditional[5]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_conditional[12]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_conditional[12]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_conditional[60]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_conditional[60]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_conditional[100]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_conditional[100]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_submission_export_conditional[500]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_submission_export_conditional[500]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/helpers/test_collections.py::TestCollectionHelper' lenresult=22 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/helpers/test_collections.py' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/helpers' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_api_routes.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_api_routes.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_api_routes.py>
        find_module called for: tests.integration.common.test_api_routes [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/test_api_routes.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/test_api_routes.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_api_routes.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_api_routes.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_api_routes.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_api_routes.py>
              name: url_for
              obj: <function url_for at 0x107802980>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_api_routes.py>
              name: MarkdownToHtmlForm
              obj: <class 'app.common.forms.MarkdownToHtmlForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_api_routes.py>
              name: TestMarkdownToHtml
              obj: <class 'tests.integration.common.test_api_routes.TestMarkdownToHtml'>
          finish pytest_pycollect_makeitem --> <Class TestMarkdownToHtml> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/test_api_routes.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestMarkdownToHtml> [collection]
        pytest_collectstart [hook]
            collector: <Class TestMarkdownToHtml>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestMarkdownToHtml>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMarkdownToHtml>
              name: test_post_unauthorised_if_not_mhclg_email_address
              obj: <function TestMarkdownToHtml.test_post_unauthorised_if_not_mhclg_email_address at 0x117deefc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a990>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_unauthorised_if_not_mhclg_email_address>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMarkdownToHtml>
              name: test_post_success_with_mhclg_user
              obj: <function TestMarkdownToHtml.test_post_success_with_mhclg_user at 0x117deea20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_success_with_mhclg_user>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/test_api_routes.py::TestMarkdownToHtml' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_post_unauthorised_if_not_mhclg_email_address> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_unauthorised_if_not_mhclg_email_address>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_success_with_mhclg_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_success_with_mhclg_user>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/test_api_routes.py::TestMarkdownToHtml' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/test_api_routes.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_filters.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_filters.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_filters.py>
        find_module called for: tests.integration.common.test_filters [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/common/test_filters.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/common/test_filters.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: to_ordinal
              obj: <function to_ordinal at 0x115a90e00>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: TestToOrdinal
              obj: <class 'tests.integration.common.test_filters.TestToOrdinal'>
          finish pytest_pycollect_makeitem --> <Class TestToOrdinal> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/test_filters.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestToOrdinal> [collection]
        pytest_collectstart [hook]
            collector: <Class TestToOrdinal>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestToOrdinal>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestToOrdinal>
              name: test_number_to_ordinal
              obj: <function TestToOrdinal.test_number_to_ordinal at 0x117deeca0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117deef30>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1
                  argname: number
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: first
                  argname: ordinal
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2
                  argname: number
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: second
                  argname: ordinal
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 3
                  argname: number
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: third
                  argname: ordinal
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 10
                  argname: number
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: tenth
                  argname: ordinal
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 11
                  argname: number
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: eleventh
                  argname: ordinal
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 12
                  argname: number
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: twelfth
                  argname: ordinal
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 13
                  argname: number
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: thirteenth
                  argname: ordinal
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 14
                  argname: number
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: fourteenth
                  argname: ordinal
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 21
                  argname: number
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: twenty-first
                  argname: ordinal
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_number_to_ordinal[1-first]>, <Function test_number_to_ordinal[2-second]>, <Function test_number_to_ordinal[3-third]>, <Function test_number_to_ordinal[10-tenth]>, <Function test_number_to_ordinal[11-eleventh]>, <Function test_number_to_ordinal[12-twelfth]>, <Function test_number_to_ordinal[13-thirteenth]>, <Function test_number_to_ordinal[14-fourteenth]>, <Function test_number_to_ordinal[21-twenty-first]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/common/test_filters.py::TestToOrdinal' lenresult=9 outcome='passed'> [hook]
      genitems <Function test_number_to_ordinal[1-first]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_number_to_ordinal[1-first]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_number_to_ordinal[2-second]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_number_to_ordinal[2-second]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_number_to_ordinal[3-third]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_number_to_ordinal[3-third]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_number_to_ordinal[10-tenth]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_number_to_ordinal[10-tenth]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_number_to_ordinal[11-eleventh]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_number_to_ordinal[11-eleventh]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_number_to_ordinal[12-twelfth]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_number_to_ordinal[12-twelfth]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_number_to_ordinal[13-thirteenth]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_number_to_ordinal[13-thirteenth]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_number_to_ordinal[14-fourteenth]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_number_to_ordinal[14-fourteenth]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_number_to_ordinal[21-twenty-first]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_number_to_ordinal[21-twenty-first]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/test_filters.py::TestToOrdinal' lenresult=9 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common/test_filters.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/common' lenresult=7 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package deliver_grant_funding> [collection]
        pytest_collectstart [hook]
            collector: <Package deliver_grant_funding>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package deliver_grant_funding>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package deliver_grant_funding>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes
              parent: <Package deliver_grant_funding>
          finish pytest_collect_directory --> <Package routes> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/test_helpers.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/test_helpers.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package deliver_grant_funding>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/test_helpers.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/test_helpers.py
            pytest_pycollect_makemodule [hook]
                parent: <Package deliver_grant_funding>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/test_helpers.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/test_helpers.py
            finish pytest_pycollect_makemodule --> <Module test_helpers.py> [hook]
          finish pytest_collect_file --> [<Module test_helpers.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding' lenresult=2 outcome='passed'> [hook]
      genitems <Package routes> [collection]
        pytest_collectstart [hook]
            collector: <Package routes>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package routes>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package routes>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_details.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_details.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package routes>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_details.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_details.py
            pytest_pycollect_makemodule [hook]
                parent: <Package routes>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_details.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_details.py
            finish pytest_pycollect_makemodule --> <Module test_grant_details.py> [hook]
          finish pytest_collect_file --> [<Module test_grant_details.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_setup.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_setup.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package routes>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_setup.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_setup.py
            pytest_pycollect_makemodule [hook]
                parent: <Package routes>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_setup.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_setup.py
            finish pytest_pycollect_makemodule --> <Module test_grant_setup.py> [hook]
          finish pytest_collect_file --> [<Module test_grant_setup.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_team.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_team.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package routes>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_team.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_team.py
            pytest_pycollect_makemodule [hook]
                parent: <Package routes>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_team.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_team.py
            finish pytest_pycollect_makemodule --> <Module test_grant_team.py> [hook]
          finish pytest_collect_file --> [<Module test_grant_team.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_misc.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_misc.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package routes>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_misc.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_misc.py
            pytest_pycollect_makemodule [hook]
                parent: <Package routes>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_misc.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_misc.py
            finish pytest_pycollect_makemodule --> <Module test_misc.py> [hook]
          finish pytest_collect_file --> [<Module test_misc.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_reports.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_reports.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package routes>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_reports.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_reports.py
            pytest_pycollect_makemodule [hook]
                parent: <Package routes>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_reports.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_reports.py
            finish pytest_pycollect_makemodule --> <Module test_reports.py> [hook]
          finish pytest_collect_file --> [<Module test_reports.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_runner.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_runner.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package routes>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_runner.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_runner.py
            pytest_pycollect_makemodule [hook]
                parent: <Package routes>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_runner.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_runner.py
            finish pytest_pycollect_makemodule --> <Module test_runner.py> [hook]
          finish pytest_collect_file --> [<Module test_runner.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes' lenresult=6 outcome='passed'> [hook]
      genitems <Module test_grant_details.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_grant_details.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_grant_details.py>
        early skip of rewriting module: tests.integration.deliver_grant_funding [assertion]
        early skip of rewriting module: tests.integration.deliver_grant_funding.routes [assertion]
        find_module called for: tests.integration.deliver_grant_funding.routes.test_grant_details [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_details.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_details.py') [assertion]
        early skip of rewriting module: app.deliver_grant_funding [assertion]
        early skip of rewriting module: app.deliver_grant_funding.forms [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: BeautifulSoup
              obj: <class 'bs4.BeautifulSoup'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: url_for
              obj: <function url_for at 0x107802980>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: Grant
              obj: <class 'app.common.data.models.Grant'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: GrantContactForm
              obj: <class 'app.deliver_grant_funding.forms.GrantContactForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: GrantDescriptionForm
              obj: <class 'app.deliver_grant_funding.forms.GrantDescriptionForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: GrantGGISForm
              obj: <class 'app.deliver_grant_funding.forms.GrantGGISForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: GrantNameForm
              obj: <class 'app.deliver_grant_funding.forms.GrantNameForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: get_h1_text
              obj: <function get_h1_text at 0x1175c8540>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: get_h2_text
              obj: <function get_h2_text at 0x1175c85e0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: TestViewGrantDetails
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_details.TestViewGrantDetails'>
          finish pytest_pycollect_makeitem --> <Class TestViewGrantDetails> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: TestChangeGGIS
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_details.TestChangeGGIS'>
          finish pytest_pycollect_makeitem --> <Class TestChangeGGIS> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: TestChangeGrantName
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_details.TestChangeGrantName'>
          finish pytest_pycollect_makeitem --> <Class TestChangeGrantName> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: TestChangeGrantDescription
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_details.TestChangeGrantDescription'>
          finish pytest_pycollect_makeitem --> <Class TestChangeGrantDescription> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_details.py>
              name: TestChangeGrantContact
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_details.TestChangeGrantContact'>
          finish pytest_pycollect_makeitem --> <Class TestChangeGrantContact> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py' lenresult=5 outcome='passed'> [hook]
      genitems <Class TestViewGrantDetails> [collection]
        pytest_collectstart [hook]
            collector: <Class TestViewGrantDetails>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestViewGrantDetails>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestViewGrantDetails>
              name: test_as_platform_admin
              obj: <function TestViewGrantDetails.test_as_platform_admin at 0x117defe20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3db30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_as_platform_admin>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestViewGrantDetails>
              name: test_as_grant_admin
              obj: <function TestViewGrantDetails.test_as_grant_admin at 0x117def9c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3de50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_as_grant_admin>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestViewGrantDetails>
              name: test_as_grant_member
              obj: <function TestViewGrantDetails.test_as_grant_member at 0x117d3c360>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3e170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_as_grant_member>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestViewGrantDetails' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_as_platform_admin> [collection]
        pytest_itemcollected [hook]
            item: <Function test_as_platform_admin>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_as_grant_admin> [collection]
        pytest_itemcollected [hook]
            item: <Function test_as_grant_admin>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_as_grant_member> [collection]
        pytest_itemcollected [hook]
            item: <Function test_as_grant_member>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestViewGrantDetails' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestChangeGGIS> [collection]
        pytest_collectstart [hook]
            collector: <Class TestChangeGGIS>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestChangeGGIS>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeGGIS>
              name: test_grant_change_ggis_get
              obj: <function TestChangeGGIS.test_grant_change_ggis_get at 0x117d3d4e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117defb10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_change_ggis_get>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeGGIS>
              name: test_grant_change_ggis_post
              obj: <function TestChangeGGIS.test_grant_change_ggis_post at 0x117d3d580>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_change_ggis_post>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestChangeGGIS' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_grant_change_ggis_get> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_change_ggis_get>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_change_ggis_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_change_ggis_post>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestChangeGGIS' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestChangeGrantName> [collection]
        pytest_collectstart [hook]
            collector: <Class TestChangeGrantName>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestChangeGrantName>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeGrantName>
              name: test_grant_change_name_get
              obj: <function TestChangeGrantName.test_grant_change_name_get at 0x117d3d620>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3db30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_change_name_get>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeGrantName>
              name: test_grant_change_name_post
              obj: <function TestChangeGrantName.test_grant_change_name_post at 0x117d3d6c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3e490>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_change_name_post>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeGrantName>
              name: test_grant_change_name_post_with_errors
              obj: <function TestChangeGrantName.test_grant_change_name_post_with_errors at 0x117d3d760>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3e490>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_change_name_post_with_errors>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestChangeGrantName' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_grant_change_name_get> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_change_name_get>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_change_name_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_change_name_post>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_change_name_post_with_errors> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_change_name_post_with_errors>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestChangeGrantName' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestChangeGrantDescription> [collection]
        pytest_collectstart [hook]
            collector: <Class TestChangeGrantDescription>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestChangeGrantDescription>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeGrantDescription>
              name: test_grant_change_description_get
              obj: <function TestChangeGrantDescription.test_grant_change_description_get at 0x117d3d800>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3e490>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_change_description_get>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeGrantDescription>
              name: test_grant_change_description_post
              obj: <function TestChangeGrantDescription.test_grant_change_description_post at 0x117d3d8a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3e490>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_change_description_post>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestChangeGrantDescription' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_grant_change_description_get> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_change_description_get>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_change_description_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_change_description_post>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestChangeGrantDescription' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestChangeGrantContact> [collection]
        pytest_collectstart [hook]
            collector: <Class TestChangeGrantContact>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestChangeGrantContact>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeGrantContact>
              name: test_grant_change_contact_get
              obj: <function TestChangeGrantContact.test_grant_change_contact_get at 0x117d3d940>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117def1b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_change_contact_get>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeGrantContact>
              name: test_grant_change_contact_post
              obj: <function TestChangeGrantContact.test_grant_change_contact_post at 0x117d3d9e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3de50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_change_contact_post>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestChangeGrantContact' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_grant_change_contact_get> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_change_contact_get>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_change_contact_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_change_contact_post>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py::TestChangeGrantContact' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_details.py' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_grant_setup.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_grant_setup.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_grant_setup.py>
        find_module called for: tests.integration.deliver_grant_funding.routes.test_grant_setup [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_setup.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_setup.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: UUID
              obj: <class 'uuid.UUID'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: BeautifulSoup
              obj: <class 'bs4.BeautifulSoup'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: url_for
              obj: <function url_for at 0x107802980>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: Grant
              obj: <class 'app.common.data.models.Grant'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: GenericSubmitForm
              obj: <class 'app.common.forms.GenericSubmitForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: GrantContactForm
              obj: <class 'app.deliver_grant_funding.forms.GrantContactForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: GrantDescriptionForm
              obj: <class 'app.deliver_grant_funding.forms.GrantDescriptionForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: GrantGGISForm
              obj: <class 'app.deliver_grant_funding.forms.GrantGGISForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: GrantNameForm
              obj: <class 'app.deliver_grant_funding.forms.GrantNameForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: get_h1_text
              obj: <function get_h1_text at 0x1175c8540>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: get_h2_text
              obj: <function get_h2_text at 0x1175c85e0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: TestGrantSetupIntro
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_setup.TestGrantSetupIntro'>
          finish pytest_pycollect_makeitem --> <Class TestGrantSetupIntro> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: TestGrantSetupGgis
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_setup.TestGrantSetupGgis'>
          finish pytest_pycollect_makeitem --> <Class TestGrantSetupGgis> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: TestGrantSetupName
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_setup.TestGrantSetupName'>
          finish pytest_pycollect_makeitem --> <Class TestGrantSetupName> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: TestGrantSetupDescription
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_setup.TestGrantSetupDescription'>
          finish pytest_pycollect_makeitem --> <Class TestGrantSetupDescription> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: TestGrantSetupContact
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_setup.TestGrantSetupContact'>
          finish pytest_pycollect_makeitem --> <Class TestGrantSetupContact> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_setup.py>
              name: TestGrantSetupCheckYourAnswers
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_setup.TestGrantSetupCheckYourAnswers'>
          finish pytest_pycollect_makeitem --> <Class TestGrantSetupCheckYourAnswers> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py' lenresult=6 outcome='passed'> [hook]
      genitems <Class TestGrantSetupIntro> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGrantSetupIntro>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGrantSetupIntro>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupIntro>
              name: test_grant_setup_intro_get
              obj: <function TestGrantSetupIntro.test_grant_setup_intro_get at 0x117d3da80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117dee850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_intro_get>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupIntro>
              name: test_grant_setup_intro_post
              obj: <function TestGrantSetupIntro.test_grant_setup_intro_post at 0x117d3dda0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3ead0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_intro_post>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupIntro' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_grant_setup_intro_get> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_intro_get>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_setup_intro_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_intro_post>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupIntro' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGrantSetupGgis> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGrantSetupGgis>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGrantSetupGgis>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupGgis>
              name: test_grant_setup_ggis_get_with_session
              obj: <function TestGrantSetupGgis.test_grant_setup_ggis_get_with_session at 0x117d3df80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3db30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_ggis_get_with_session>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupGgis>
              name: test_grant_setup_ggis_get_without_session_redirects
              obj: <function TestGrantSetupGgis.test_grant_setup_ggis_get_without_session_redirects at 0x117d3e0c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314190>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_ggis_get_without_session_redirects>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupGgis>
              name: test_grant_setup_ggis_post_with_ggis
              obj: <function TestGrantSetupGgis.test_grant_setup_ggis_post_with_ggis at 0x117d3e3e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314230>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_ggis_post_with_ggis>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupGgis>
              name: test_grant_setup_ggis_post_no_ggis_redirects_to_required_info
              obj: <function TestGrantSetupGgis.test_grant_setup_ggis_post_no_ggis_redirects_to_required_info at 0x117d3ed40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314370>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_ggis_post_no_ggis_redirects_to_required_info>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupGgis>
              name: test_grant_setup_ggis_required_info_get
              obj: <function TestGrantSetupGgis.test_grant_setup_ggis_required_info_get at 0x117d3fa60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314410>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_ggis_required_info_get>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupGgis' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_grant_setup_ggis_get_with_session> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_ggis_get_with_session>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_setup_ggis_get_without_session_redirects> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_ggis_get_without_session_redirects>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_setup_ggis_post_with_ggis> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_ggis_post_with_ggis>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_setup_ggis_post_no_ggis_redirects_to_required_info> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_ggis_post_no_ggis_redirects_to_required_info>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_setup_ggis_required_info_get> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_ggis_required_info_get>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupGgis' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGrantSetupName> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGrantSetupName>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGrantSetupName>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupName>
              name: test_grant_setup_name_get_with_session
              obj: <function TestGrantSetupName.test_grant_setup_name_get_with_session at 0x117d3fb00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_name_get_with_session>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupName>
              name: test_grant_setup_name_post
              obj: <function TestGrantSetupName.test_grant_setup_name_post at 0x117d3fba0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314a50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_name_post>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupName' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_grant_setup_name_get_with_session> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_name_get_with_session>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_setup_name_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_name_post>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupName' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGrantSetupDescription> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGrantSetupDescription>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGrantSetupDescription>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupDescription>
              name: test_grant_setup_description_get_with_session
              obj: <function TestGrantSetupDescription.test_grant_setup_description_get_with_session at 0x117d3fc40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19090>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_description_get_with_session>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupDescription>
              name: test_grant_setup_description_post_too_long
              obj: <function TestGrantSetupDescription.test_grant_setup_description_post_too_long at 0x117d3fce0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3db30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_description_post_too_long>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupDescription>
              name: test_grant_setup_description_post_valid
              obj: <function TestGrantSetupDescription.test_grant_setup_description_post_valid at 0x117d3fd80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_description_post_valid>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupDescription' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_grant_setup_description_get_with_session> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_description_get_with_session>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_setup_description_post_too_long> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_description_post_too_long>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_setup_description_post_valid> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_description_post_valid>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupDescription' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGrantSetupContact> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGrantSetupContact>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGrantSetupContact>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupContact>
              name: test_grant_setup_contact_get_with_session
              obj: <function TestGrantSetupContact.test_grant_setup_contact_get_with_session at 0x117d3fe20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314190>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_contact_get_with_session>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupContact>
              name: test_grant_setup_contact_post_valid
              obj: <function TestGrantSetupContact.test_grant_setup_contact_post_valid at 0x117d3fec0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323144b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_setup_contact_post_valid>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupContact' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_grant_setup_contact_get_with_session> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_contact_get_with_session>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_setup_contact_post_valid> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_setup_contact_post_valid>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupContact' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGrantSetupCheckYourAnswers> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGrantSetupCheckYourAnswers>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGrantSetupCheckYourAnswers>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantSetupCheckYourAnswers>
              name: test_grant_check_your_answers_post_creates_grant
              obj: <function TestGrantSetupCheckYourAnswers.test_grant_check_your_answers_post_creates_grant at 0x117d3ff60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314c30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_check_your_answers_post_creates_grant>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupCheckYourAnswers' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_grant_check_your_answers_post_creates_grant> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_check_your_answers_post_creates_grant>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py::TestGrantSetupCheckYourAnswers' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_setup.py' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_grant_team.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_grant_team.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_grant_team.py>
        find_module called for: tests.integration.deliver_grant_funding.routes.test_grant_team [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_team.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_grant_team.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: BeautifulSoup
              obj: <class 'bs4.BeautifulSoup'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: url_for
              obj: <function url_for at 0x107802980>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: get_current_user
              obj: <function get_current_user at 0x1166927a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: Invitation
              obj: <class 'app.common.data.models_user.Invitation'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: RoleEnum
              obj: <enum 'RoleEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: get_h2_text
              obj: <function get_h2_text at 0x1175c85e0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: get_soup_text
              obj: <function get_soup_text at 0x1175c84a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: TestGrantTeamListUsers
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_team.TestGrantTeamListUsers'>
          finish pytest_pycollect_makeitem --> <Class TestGrantTeamListUsers> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_grant_team.py>
              name: TestGrantTeamAddUser
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_grant_team.TestGrantTeamAddUser'>
          finish pytest_pycollect_makeitem --> <Class TestGrantTeamAddUser> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_team.py' lenresult=2 outcome='passed'> [hook]
      genitems <Class TestGrantTeamListUsers> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGrantTeamListUsers>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGrantTeamListUsers>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamListUsers>
              name: test_list_users_for_grant_with_platform_admin_and_no_member
              obj: <function TestGrantTeamListUsers.test_list_users_for_grant_with_platform_admin_and_no_member at 0x1323142c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323140f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_users_for_grant_with_platform_admin_and_no_member>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamListUsers>
              name: test_list_users_for_grant_with_platform_admin_check_add_member_button
              obj: <function TestGrantTeamListUsers.test_list_users_for_grant_with_platform_admin_check_add_member_button at 0x1323144a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323140f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_users_for_grant_with_platform_admin_check_add_member_button>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamListUsers>
              name: test_list_users_for_grant_with_member_no_add_member_button
              obj: <function TestGrantTeamListUsers.test_list_users_for_grant_with_member_no_add_member_button at 0x132314b80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323140f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_users_for_grant_with_member_no_add_member_button>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamListUsers>
              name: test_list_users_for_grant_with_not_logged_in_members
              obj: <function TestGrantTeamListUsers.test_list_users_for_grant_with_not_logged_in_members at 0x1323149a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323140f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_users_for_grant_with_not_logged_in_members>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamListUsers>
              name: test_list_users_for_grant_with_member
              obj: <function TestGrantTeamListUsers.test_list_users_for_grant_with_member at 0x132314680>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323140f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_users_for_grant_with_member>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_team.py::TestGrantTeamListUsers' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_list_users_for_grant_with_platform_admin_and_no_member> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_users_for_grant_with_platform_admin_and_no_member>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_list_users_for_grant_with_platform_admin_check_add_member_button> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_users_for_grant_with_platform_admin_check_add_member_button>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_list_users_for_grant_with_member_no_add_member_button> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_users_for_grant_with_member_no_add_member_button>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_list_users_for_grant_with_not_logged_in_members> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_users_for_grant_with_not_logged_in_members>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_list_users_for_grant_with_member> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_users_for_grant_with_member>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_team.py::TestGrantTeamListUsers' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGrantTeamAddUser> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGrantTeamAddUser>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGrantTeamAddUser>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamAddUser>
              name: test_add_user_to_grant_with_platform_admin_add_another_platform_admin
              obj: <function TestGrantTeamAddUser.test_add_user_to_grant_with_platform_admin_add_another_platform_admin at 0x132314ae0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117dee850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_user_to_grant_with_platform_admin_add_another_platform_admin>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamAddUser>
              name: test_add_user_to_grant_with_platform_admin_add_member
              obj: <function TestGrantTeamAddUser.test_add_user_to_grant_with_platform_admin_add_member at 0x132314c20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_user_to_grant_with_platform_admin_add_member>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamAddUser>
              name: test_add_user_to_grant_with_platform_admin_add_same_member_again
              obj: <function TestGrantTeamAddUser.test_add_user_to_grant_with_platform_admin_add_same_member_again at 0x132314cc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_user_to_grant_with_platform_admin_add_same_member_again>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamAddUser>
              name: test_add_user_to_grant_creates_invitation_for_new_user
              obj: <function TestGrantTeamAddUser.test_add_user_to_grant_creates_invitation_for_new_user at 0x132314d60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_user_to_grant_creates_invitation_for_new_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGrantTeamAddUser>
              name: test_add_user_to_grant_adds_existing_user_no_invitation
              obj: <function TestGrantTeamAddUser.test_add_user_to_grant_adds_existing_user_no_invitation at 0x132314e00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_add_user_to_grant_adds_existing_user_no_invitation>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_team.py::TestGrantTeamAddUser' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_add_user_to_grant_with_platform_admin_add_another_platform_admin> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_user_to_grant_with_platform_admin_add_another_platform_admin>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_user_to_grant_with_platform_admin_add_member> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_user_to_grant_with_platform_admin_add_member>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_user_to_grant_with_platform_admin_add_same_member_again> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_user_to_grant_with_platform_admin_add_same_member_again>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_user_to_grant_creates_invitation_for_new_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_user_to_grant_creates_invitation_for_new_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_add_user_to_grant_adds_existing_user_no_invitation> [collection]
        pytest_itemcollected [hook]
            item: <Function test_add_user_to_grant_adds_existing_user_no_invitation>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_team.py::TestGrantTeamAddUser' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_grant_team.py' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_misc.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_misc.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_misc.py>
        find_module called for: tests.integration.deliver_grant_funding.routes.test_misc [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_misc.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_misc.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_misc.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_misc.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_misc.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_misc.py>
              name: BeautifulSoup
              obj: <class 'bs4.BeautifulSoup'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_misc.py>
              name: get_current_user
              obj: <function get_current_user at 0x1166927a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_misc.py>
              name: RoleEnum
              obj: <enum 'RoleEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_misc.py>
              name: get_h1_text
              obj: <function get_h1_text at 0x1175c8540>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_misc.py>
              name: TestListGrants
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_misc.TestListGrants'>
          finish pytest_pycollect_makeitem --> <Class TestListGrants> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_misc.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestListGrants> [collection]
        pytest_collectstart [hook]
            collector: <Class TestListGrants>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestListGrants>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListGrants>
              name: test_list_grants_as_admin
              obj: <function TestListGrants.test_list_grants_as_admin at 0x132315760>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3e5d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_grants_as_admin>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListGrants>
              name: test_list_grants_as_member_with_single_grant
              obj: <function TestListGrants.test_list_grants_as_member_with_single_grant at 0x132315800>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3e5d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_grants_as_member_with_single_grant>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListGrants>
              name: test_list_grants_as_member_with_multiple_grants
              obj: <function TestListGrants.test_list_grants_as_member_with_multiple_grants at 0x1323158a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323140f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_grants_as_member_with_multiple_grants>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListGrants>
              name: test_list_grant_requires_mhclg_user
              obj: <function TestListGrants.test_list_grant_requires_mhclg_user at 0x132315940>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_grant_requires_mhclg_user>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_misc.py::TestListGrants' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_list_grants_as_admin> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_grants_as_admin>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_list_grants_as_member_with_single_grant> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_grants_as_member_with_single_grant>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_list_grants_as_member_with_multiple_grants> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_grants_as_member_with_multiple_grants>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_list_grant_requires_mhclg_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_grant_requires_mhclg_user>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_misc.py::TestListGrants' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_misc.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_reports.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_reports.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_reports.py>
        find_module called for: tests.integration.deliver_grant_funding.routes.test_reports [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_reports.py' [assertion]
        _read_pyc(/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_reports.py): out of date [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_reports.py') [assertion]
        early skip of rewriting module: app.common.expressions.forms [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: logging
              obj: <module 'logging' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/logging/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: uuid
              obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: FixtureRequest
              obj: <class '_pytest.fixtures.FixtureRequest'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: BeautifulSoup
              obj: <class 'bs4.BeautifulSoup'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: url_for
              obj: <function url_for at 0x107802980>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: QuestionDataType
              obj: <enum 'QuestionDataType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: interfaces
              obj: <module 'app.common.data.interfaces' from '/Users/sarahsloan1/dev/funding-service/app/common/data/interfaces/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: Collection
              obj: <class 'app.common.data.models.Collection'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: Expression
              obj: <class 'app.common.data.models.Expression'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: Form
              obj: <class 'app.common.data.models.Form'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: Group
              obj: <class 'app.common.data.models.Group'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: Question
              obj: <class 'app.common.data.models.Question'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: ExpressionType
              obj: <enum 'ExpressionType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: QuestionPresentationOptions
              obj: <class 'app.common.data.types.QuestionPresentationOptions'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: SubmissionModeEnum
              obj: <enum 'SubmissionModeEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: build_managed_expression_form
              obj: <function build_managed_expression_form at 0x133074860>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: GreaterThan
              obj: <class 'app.common.expressions.managed.GreaterThan'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: IsNo
              obj: <class 'app.common.expressions.managed.IsNo'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: IsYes
              obj: <class 'app.common.expressions.managed.IsYes'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: GenericConfirmDeletionForm
              obj: <class 'app.common.forms.GenericConfirmDeletionForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: GenericSubmitForm
              obj: <class 'app.common.forms.GenericSubmitForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: AddGuidanceForm
              obj: <class 'app.deliver_grant_funding.forms.AddGuidanceForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: AddTaskForm
              obj: <class 'app.deliver_grant_funding.forms.AddTaskForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: GroupDisplayOptionsForm
              obj: <class 'app.deliver_grant_funding.forms.GroupDisplayOptionsForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: GroupForm
              obj: <class 'app.deliver_grant_funding.forms.GroupForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: QuestionForm
              obj: <class 'app.deliver_grant_funding.forms.QuestionForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: QuestionTypeForm
              obj: <class 'app.deliver_grant_funding.forms.QuestionTypeForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: SetUpReportForm
              obj: <class 'app.deliver_grant_funding.forms.SetUpReportForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: AnyStringMatching
              obj: <class 'tests.utils.AnyStringMatching'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: get_h1_text
              obj: <function get_h1_text at 0x1175c8540>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: get_h2_text
              obj: <function get_h2_text at 0x1175c85e0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: page_has_button
              obj: <function page_has_button at 0x1175c8720>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: page_has_error
              obj: <function page_has_error at 0x1173323e0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: page_has_link
              obj: <function page_has_link at 0x1175c8680>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestListReports
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestListReports'>
          finish pytest_pycollect_makeitem --> <Class TestListReports> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestSetUpReport
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestSetUpReport'>
          finish pytest_pycollect_makeitem --> <Class TestSetUpReport> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestChangeReportName
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestChangeReportName'>
          finish pytest_pycollect_makeitem --> <Class TestChangeReportName> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestAddTask
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestAddTask'>
          finish pytest_pycollect_makeitem --> <Class TestAddTask> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestListReportTasks
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestListReportTasks'>
          finish pytest_pycollect_makeitem --> <Class TestListReportTasks> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestMoveTask
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestMoveTask'>
          finish pytest_pycollect_makeitem --> <Class TestMoveTask> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestChangeQuestionGroupName
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestChangeQuestionGroupName'>
          finish pytest_pycollect_makeitem --> <Class TestChangeQuestionGroupName> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestChangeQuestionGroupDisplay
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestChangeQuestionGroupDisplay'>
          finish pytest_pycollect_makeitem --> <Class TestChangeQuestionGroupDisplay> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestChangeFormName
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestChangeFormName'>
          finish pytest_pycollect_makeitem --> <Class TestChangeFormName> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestListGroupQuestions
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestListGroupQuestions'>
          finish pytest_pycollect_makeitem --> <Class TestListGroupQuestions> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestListTaskQuestions
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestListTaskQuestions'>
          finish pytest_pycollect_makeitem --> <Class TestListTaskQuestions> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestMoveQuestion
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestMoveQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestMoveQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestChooseQuestionType
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestChooseQuestionType'>
          finish pytest_pycollect_makeitem --> <Class TestChooseQuestionType> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestAddQuestion
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestAddQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestAddQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestAddQuestionGroup
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestAddQuestionGroup'>
          finish pytest_pycollect_makeitem --> <Class TestAddQuestionGroup> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestEditQuestion
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestEditQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestEditQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestAddQuestionConditionSelectQuestion
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestAddQuestionConditionSelectQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestAddQuestionConditionSelectQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestAddQuestionCondition
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestAddQuestionCondition'>
          finish pytest_pycollect_makeitem --> <Class TestAddQuestionCondition> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestEditQuestionCondition
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestEditQuestionCondition'>
          finish pytest_pycollect_makeitem --> <Class TestEditQuestionCondition> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestAddQuestionValidation
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestAddQuestionValidation'>
          finish pytest_pycollect_makeitem --> <Class TestAddQuestionValidation> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestEditQuestionValidation
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestEditQuestionValidation'>
          finish pytest_pycollect_makeitem --> <Class TestEditQuestionValidation> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestManageGuidance
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestManageGuidance'>
          finish pytest_pycollect_makeitem --> <Class TestManageGuidance> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestListSubmissions
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestListSubmissions'>
          finish pytest_pycollect_makeitem --> <Class TestListSubmissions> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestExportReportSubmissions
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestExportReportSubmissions'>
          finish pytest_pycollect_makeitem --> <Class TestExportReportSubmissions> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_reports.py>
              name: TestViewSubmission
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_reports.TestViewSubmission'>
          finish pytest_pycollect_makeitem --> <Class TestViewSubmission> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py' lenresult=25 outcome='passed'> [hook]
      genitems <Class TestListReports> [collection]
        pytest_collectstart [hook]
            collector: <Class TestListReports>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestListReports>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReports>
              name: test_404
              obj: <function TestListReports.test_404 at 0x1323140e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132316350>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReports>
              name: test_grant_member_get_no_reports
              obj: <function TestListReports.test_grant_member_get_no_reports at 0x133074220>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323162b0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_member_get_no_reports[authenticated_grant_member_client-False]>, <Function test_grant_member_get_no_reports[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReports>
              name: test_grant_member_get_with_reports
              obj: <function TestListReports.test_grant_member_get_with_reports at 0x133074ae0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117dee850>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_platform_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_grant_member_get_with_reports[authenticated_grant_member_client-False]>, <Function test_grant_member_get_with_reports[authenticated_grant_admin_client-True]>, <Function test_grant_member_get_with_reports[authenticated_platform_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReports>
              name: test_get_hides_delete_link_with_submissions
              obj: <function TestListReports.test_get_hides_delete_link_with_submissions at 0x133074b80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b1a850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_hides_delete_link_with_submissions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReports>
              name: test_get_with_delete_parameter_no_submissions
              obj: <function TestListReports.test_get_with_delete_parameter_no_submissions at 0x133074c20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315310>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_with_delete_parameter_no_submissions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReports>
              name: test_post_delete
              obj: <function TestListReports.test_post_delete at 0x133074cc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315310>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_delete
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_delete
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_delete[authenticated_grant_member_client-False]>, <Function test_post_delete[authenticated_grant_admin_client-True]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListReports' lenresult=10 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_member_get_no_reports[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_member_get_no_reports[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_member_get_no_reports[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_member_get_no_reports[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_member_get_with_reports[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_member_get_with_reports[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_member_get_with_reports[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_member_get_with_reports[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_grant_member_get_with_reports[authenticated_platform_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_grant_member_get_with_reports[authenticated_platform_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_hides_delete_link_with_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_hides_delete_link_with_submissions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_with_delete_parameter_no_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_with_delete_parameter_no_submissions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_delete[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_delete[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_delete[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_delete[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListReports' lenresult=10 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestSetUpReport> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSetUpReport>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSetUpReport>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUpReport>
              name: test_404
              obj: <function TestSetUpReport.test_404 at 0x133074d60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315f90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUpReport>
              name: test_get
              obj: <function TestSetUpReport.test_get at 0x133074e00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315f90>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUpReport>
              name: test_post
              obj: <function TestSetUpReport.test_post at 0x133074ea0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315f90>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post[authenticated_grant_member_client-False]>, <Function test_post[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSetUpReport>
              name: test_post_duplicate_report_name
              obj: <function TestSetUpReport.test_post_duplicate_report_name at 0x133074f40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_duplicate_report_name>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestSetUpReport' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_duplicate_report_name> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_duplicate_report_name>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestSetUpReport' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestChangeReportName> [collection]
        pytest_collectstart [hook]
            collector: <Class TestChangeReportName>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestChangeReportName>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeReportName>
              name: test_404
              obj: <function TestChangeReportName.test_404 at 0x133074fe0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399630>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeReportName>
              name: test_get
              obj: <function TestChangeReportName.test_get at 0x133075080>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399630>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeReportName>
              name: test_get_with_delete_parameter_with_live_submissions
              obj: <function TestChangeReportName.test_get_with_delete_parameter_with_live_submissions at 0x133075120>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117d3e5d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_with_delete_parameter_with_live_submissions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeReportName>
              name: test_post_update_name
              obj: <function TestChangeReportName.test_post_update_name at 0x1330751c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323162b0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_name[authenticated_grant_member_client-False]>, <Function test_post_update_name[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeReportName>
              name: test_post_update_name_duplicate
              obj: <function TestChangeReportName.test_post_update_name_duplicate at 0x133075260>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315a90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_name_duplicate>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeReportName>
              name: test_update_name_when_delete_banner_showing_does_not_delete
              obj: <function TestChangeReportName.test_update_name_when_delete_banner_showing_does_not_delete at 0x133075300>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315db0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_name_when_delete_banner_showing_does_not_delete>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChangeReportName' lenresult=8 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_with_delete_parameter_with_live_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_with_delete_parameter_with_live_submissions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_name[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_name[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_name[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_name[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_name_duplicate> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_name_duplicate>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_name_when_delete_banner_showing_does_not_delete> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_name_when_delete_banner_showing_does_not_delete>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChangeReportName' lenresult=8 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestAddTask> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAddTask>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAddTask>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddTask>
              name: test_404
              obj: <function TestAddTask.test_404 at 0x1330753a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323999f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddTask>
              name: test_get
              obj: <function TestAddTask.test_get at 0x133075440>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323999f0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddTask>
              name: test_post
              obj: <function TestAddTask.test_post at 0x1330754e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323151d0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post[authenticated_grant_member_client-False]>, <Function test_post[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddTask>
              name: test_post_duplicate_form_name
              obj: <function TestAddTask.test_post_duplicate_form_name at 0x133075580>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132316530>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_duplicate_form_name>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddTask' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_duplicate_form_name> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_duplicate_form_name>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddTask' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestListReportTasks> [collection]
        pytest_collectstart [hook]
            collector: <Class TestListReportTasks>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestListReportTasks>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReportTasks>
              name: test_404
              obj: <function TestListReportTasks.test_404 at 0x133075620>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399810>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReportTasks>
              name: test_get_no_tasks
              obj: <function TestListReportTasks.test_get_no_tasks at 0x1330756c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x117b19090>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_no_tasks[authenticated_grant_member_client-False]>, <Function test_get_no_tasks[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReportTasks>
              name: test_get_with_tasks
              obj: <function TestListReportTasks.test_get_with_tasks at 0x133075760>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315f90>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_with_tasks[authenticated_grant_member_client-False]>, <Function test_get_with_tasks[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListReportTasks>
              name: test_post_list_report_tasks_preview
              obj: <function TestListReportTasks.test_post_list_report_tasks_preview at 0x133075800>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315f90>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_list_report_tasks_preview[authenticated_no_role_client-False]>, <Function test_post_list_report_tasks_preview[authenticated_grant_member_client-True]>, <Function test_post_list_report_tasks_preview[authenticated_grant_admin_client-True]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListReportTasks' lenresult=8 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_no_tasks[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_no_tasks[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_no_tasks[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_no_tasks[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_with_tasks[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_with_tasks[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_with_tasks[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_with_tasks[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_list_report_tasks_preview[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_list_report_tasks_preview[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_list_report_tasks_preview[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_list_report_tasks_preview[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_list_report_tasks_preview[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_list_report_tasks_preview[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListReportTasks' lenresult=8 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestMoveTask> [collection]
        pytest_collectstart [hook]
            collector: <Class TestMoveTask>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestMoveTask>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMoveTask>
              name: test_404
              obj: <function TestMoveTask.test_404 at 0x1330758a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399810>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMoveTask>
              name: test_400
              obj: <function TestMoveTask.test_400 at 0x133075940>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399810>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_400>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMoveTask>
              name: test_move
              obj: <function TestMoveTask.test_move at 0x1330759e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399950>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: up
                  argname: direction
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: down
                  argname: direction
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move[up]>, <Function test_move[down]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestMoveTask' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_400> [collection]
        pytest_itemcollected [hook]
            item: <Function test_400>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move[up]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move[up]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move[down]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move[down]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestMoveTask' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestChangeQuestionGroupName> [collection]
        pytest_collectstart [hook]
            collector: <Class TestChangeQuestionGroupName>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestChangeQuestionGroupName>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeQuestionGroupName>
              name: test_404
              obj: <function TestChangeQuestionGroupName.test_404 at 0x133075a80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132316530>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeQuestionGroupName>
              name: test_get
              obj: <function TestChangeQuestionGroupName.test_get at 0x133075b20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132316530>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeQuestionGroupName>
              name: test_post
              obj: <function TestChangeQuestionGroupName.test_post at 0x133075bc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132316530>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeQuestionGroupName>
              name: test_post_duplicate
              obj: <function TestChangeQuestionGroupName.test_post_duplicate at 0x133075c60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399a90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_duplicate>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChangeQuestionGroupName' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_duplicate> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_duplicate>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChangeQuestionGroupName' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestChangeQuestionGroupDisplay> [collection]
        pytest_collectstart [hook]
            collector: <Class TestChangeQuestionGroupDisplay>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestChangeQuestionGroupDisplay>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeQuestionGroupDisplay>
              name: test_404
              obj: <function TestChangeQuestionGroupDisplay.test_404 at 0x133075d00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399bd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeQuestionGroupDisplay>
              name: test_get
              obj: <function TestChangeQuestionGroupDisplay.test_get at 0x133075da0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399f90>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeQuestionGroupDisplay>
              name: test_post
              obj: <function TestChangeQuestionGroupDisplay.test_post at 0x133075e40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeQuestionGroupDisplay>
              name: test_post_change_same_page_with_question_inter_dependencies
              obj: <function TestChangeQuestionGroupDisplay.test_post_change_same_page_with_question_inter_dependencies at 0x133075ee0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315b30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_change_same_page_with_question_inter_dependencies>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChangeQuestionGroupDisplay' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_change_same_page_with_question_inter_dependencies> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_change_same_page_with_question_inter_dependencies>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChangeQuestionGroupDisplay' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestChangeFormName> [collection]
        pytest_collectstart [hook]
            collector: <Class TestChangeFormName>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestChangeFormName>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeFormName>
              name: test_404
              obj: <function TestChangeFormName.test_404 at 0x133075f80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399590>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeFormName>
              name: test_get
              obj: <function TestChangeFormName.test_get at 0x133076020>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399590>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeFormName>
              name: test_get_blocked_if_live_submissions
              obj: <function TestChangeFormName.test_get_blocked_if_live_submissions at 0x1330760c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a2b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_blocked_if_live_submissions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeFormName>
              name: test_post_update_name
              obj: <function TestChangeFormName.test_post_update_name at 0x133076160>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a170>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_name[authenticated_grant_member_client-False]>, <Function test_post_update_name[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChangeFormName>
              name: test_post_update_name_duplicate
              obj: <function TestChangeFormName.test_post_update_name_duplicate at 0x133076200>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a530>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_name_duplicate>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChangeFormName' lenresult=7 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_blocked_if_live_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_blocked_if_live_submissions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_name[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_name[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_name[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_name[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_name_duplicate> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_name_duplicate>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChangeFormName' lenresult=7 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestListGroupQuestions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestListGroupQuestions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestListGroupQuestions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListGroupQuestions>
              name: test_404
              obj: <function TestListGroupQuestions.test_404 at 0x1330762a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323999f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListGroupQuestions>
              name: test_admin_actions
              obj: <function TestListGroupQuestions.test_admin_actions at 0x133076340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a0d0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_admin_actions[authenticated_grant_member_client-False]>, <Function test_admin_actions[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListGroupQuestions>
              name: test_delete_confirmation_banner
              obj: <function TestListGroupQuestions.test_delete_confirmation_banner at 0x1330763e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a350>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_delete_confirmation_banner>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListGroupQuestions>
              name: test_cannot_delete_with_depended_on_questions_in_group
              obj: <function TestListGroupQuestions.test_cannot_delete_with_depended_on_questions_in_group at 0x133076480>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132398f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_cannot_delete_with_depended_on_questions_in_group>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListGroupQuestions' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_admin_actions[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_admin_actions[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_admin_actions[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_admin_actions[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_delete_confirmation_banner> [collection]
        pytest_itemcollected [hook]
            item: <Function test_delete_confirmation_banner>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_cannot_delete_with_depended_on_questions_in_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_cannot_delete_with_depended_on_questions_in_group>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListGroupQuestions' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestListTaskQuestions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestListTaskQuestions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestListTaskQuestions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListTaskQuestions>
              name: test_404
              obj: <function TestListTaskQuestions.test_404 at 0x133076520>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239aa30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListTaskQuestions>
              name: test_admin_actions
              obj: <function TestListTaskQuestions.test_admin_actions at 0x1330765c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239aad0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_edit
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_admin_actions[authenticated_grant_member_client-False]>, <Function test_admin_actions[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListTaskQuestions>
              name: test_delete_confirmation_banner
              obj: <function TestListTaskQuestions.test_delete_confirmation_banner at 0x133076660>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_delete_confirmation_banner>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListTaskQuestions>
              name: test_cannot_delete_with_live_submissions
              obj: <function TestListTaskQuestions.test_cannot_delete_with_live_submissions at 0x133076700>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a710>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_cannot_delete_with_live_submissions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListTaskQuestions>
              name: test_post_list_task_questions_preview
              obj: <function TestListTaskQuestions.test_post_list_task_questions_preview at 0x1330767a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a710>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_list_task_questions_preview[authenticated_no_role_client-False]>, <Function test_post_list_task_questions_preview[authenticated_grant_member_client-True]>, <Function test_post_list_task_questions_preview[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListTaskQuestions>
              name: test_post_list_task_questions_returns_to_task_list
              obj: <function TestListTaskQuestions.test_post_list_task_questions_returns_to_task_list at 0x133076840>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a350>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_list_task_questions_returns_to_task_list>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListTaskQuestions' lenresult=9 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_admin_actions[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_admin_actions[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_admin_actions[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_admin_actions[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_delete_confirmation_banner> [collection]
        pytest_itemcollected [hook]
            item: <Function test_delete_confirmation_banner>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_cannot_delete_with_live_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_cannot_delete_with_live_submissions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_list_task_questions_preview[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_list_task_questions_preview[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_list_task_questions_preview[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_list_task_questions_preview[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_list_task_questions_preview[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_list_task_questions_preview[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_list_task_questions_returns_to_task_list> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_list_task_questions_returns_to_task_list>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListTaskQuestions' lenresult=9 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestMoveQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestMoveQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestMoveQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMoveQuestion>
              name: test_404
              obj: <function TestMoveQuestion.test_404 at 0x1330768e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b070>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMoveQuestion>
              name: test_no_access_for_grant_members
              obj: <function TestMoveQuestion.test_no_access_for_grant_members at 0x133076980>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132315b30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_no_access_for_grant_members>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMoveQuestion>
              name: test_400
              obj: <function TestMoveQuestion.test_400 at 0x133076a20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239aa30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_400>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMoveQuestion>
              name: test_move
              obj: <function TestMoveQuestion.test_move at 0x133076ac0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132316530>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: up
                  argname: direction
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: down
                  argname: direction
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move[up]>, <Function test_move[down]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMoveQuestion>
              name: test_move_group
              obj: <function TestMoveQuestion.test_move_group at 0x133076b60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239af30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_move_group>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestMoveQuestion' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_no_access_for_grant_members> [collection]
        pytest_itemcollected [hook]
            item: <Function test_no_access_for_grant_members>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_400> [collection]
        pytest_itemcollected [hook]
            item: <Function test_400>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move[up]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move[up]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move[down]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move[down]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_move_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_move_group>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestMoveQuestion' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestChooseQuestionType> [collection]
        pytest_collectstart [hook]
            collector: <Class TestChooseQuestionType>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestChooseQuestionType>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChooseQuestionType>
              name: test_404
              obj: <function TestChooseQuestionType.test_404 at 0x133076c00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323999f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChooseQuestionType>
              name: test_get
              obj: <function TestChooseQuestionType.test_get at 0x133076ca0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323999f0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestChooseQuestionType>
              name: test_post
              obj: <function TestChooseQuestionType.test_post at 0x133076d40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1323999f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChooseQuestionType' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestChooseQuestionType' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestAddQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAddQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAddQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestion>
              name: test_404
              obj: <function TestAddQuestion.test_404 at 0x133076de0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239adf0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestion>
              name: test_get
              obj: <function TestAddQuestion.test_get at 0x133076e80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239adf0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestion>
              name: test_post
              obj: <function TestAddQuestion.test_post at 0x133076f20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132314f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestion>
              name: test_post_add_to_group
              obj: <function TestAddQuestion.test_post_add_to_group at 0x133076fc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239adf0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_add_to_group>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestion' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_add_to_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_add_to_group>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestion' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestAddQuestionGroup> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAddQuestionGroup>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAddQuestionGroup>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionGroup>
              name: test_404
              obj: <function TestAddQuestionGroup.test_404 at 0x133077060>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239ad50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionGroup>
              name: test_missing_name
              obj: <function TestAddQuestionGroup.test_missing_name at 0x133077100>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239ad50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_missing_name>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionGroup>
              name: test_get
              obj: <function TestAddQuestionGroup.test_get at 0x1330771a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399c70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionGroup>
              name: test_post
              obj: <function TestAddQuestionGroup.test_post at 0x133077240>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399c70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionGroup>
              name: test_post_duplicate
              obj: <function TestAddQuestionGroup.test_post_duplicate at 0x1330772e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b250>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_duplicate>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestionGroup' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_missing_name> [collection]
        pytest_itemcollected [hook]
            item: <Function test_missing_name>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_duplicate> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_duplicate>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestionGroup' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestEditQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestEditQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestEditQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestion>
              name: test_404
              obj: <function TestEditQuestion.test_404 at 0x133077380>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestion>
              name: test_get
              obj: <function TestEditQuestion.test_get at 0x133077420>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a170>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestion>
              name: test_get_with_group
              obj: <function TestEditQuestion.test_get_with_group at 0x1330774c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_with_group>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestion>
              name: test_post
              obj: <function TestEditQuestion.test_post at 0x133077560>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b110>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestion>
              name: test_post_dependency_order_errors
              obj: <function TestEditQuestion.test_post_dependency_order_errors at 0x133077600>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132398f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_dependency_order_errors>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestion>
              name: test_post_data_source_item_errors
              obj: <function TestEditQuestion.test_post_data_source_item_errors at 0x1330776a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b610>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_data_source_item_errors>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestEditQuestion' lenresult=7 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_with_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_with_group>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_dependency_order_errors> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_dependency_order_errors>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_data_source_item_errors> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_data_source_item_errors>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestEditQuestion' lenresult=7 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestAddQuestionConditionSelectQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAddQuestionConditionSelectQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAddQuestionConditionSelectQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionConditionSelectQuestion>
              name: test_404
              obj: <function TestAddQuestionConditionSelectQuestion.test_404 at 0x133077740>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239bc50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionConditionSelectQuestion>
              name: test_get
              obj: <function TestAddQuestionConditionSelectQuestion.test_get at 0x1330777e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239bc50>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionConditionSelectQuestion>
              name: test_get_with_available_questions
              obj: <function TestAddQuestionConditionSelectQuestion.test_get_with_available_questions at 0x133077880>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239ba70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_with_available_questions[authenticated_grant_member_client-False]>, <Function test_get_with_available_questions[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionConditionSelectQuestion>
              name: test_post
              obj: <function TestAddQuestionConditionSelectQuestion.test_post at 0x133077920>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239ba70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionConditionSelectQuestion>
              name: test_post_rejects_same_page_group
              obj: <function TestAddQuestionConditionSelectQuestion.test_post_rejects_same_page_group at 0x1330779c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239ba70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_rejects_same_page_group>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestionConditionSelectQuestion' lenresult=7 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_with_available_questions[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_with_available_questions[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_with_available_questions[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_with_available_questions[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_rejects_same_page_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_rejects_same_page_group>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestionConditionSelectQuestion' lenresult=7 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestAddQuestionCondition> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAddQuestionCondition>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAddQuestionCondition>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionCondition>
              name: test_404
              obj: <function TestAddQuestionCondition.test_404 at 0x133077a60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b610>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionCondition>
              name: test_get
              obj: <function TestAddQuestionCondition.test_get at 0x133077b00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b610>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionCondition>
              name: test_post
              obj: <function TestAddQuestionCondition.test_post at 0x133077ba0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132398f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionCondition>
              name: test_post_for_group
              obj: <function TestAddQuestionCondition.test_post_for_group at 0x133077c40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239bb10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_for_group>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionCondition>
              name: test_post_duplicate_condition
              obj: <function TestAddQuestionCondition.test_post_duplicate_condition at 0x133077ce0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b890>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_duplicate_condition>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestionCondition' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_for_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_for_group>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_duplicate_condition> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_duplicate_condition>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestionCondition' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestEditQuestionCondition> [collection]
        pytest_collectstart [hook]
            collector: <Class TestEditQuestionCondition>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestEditQuestionCondition>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionCondition>
              name: test_404
              obj: <function TestEditQuestionCondition.test_404 at 0x133077d80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450190>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionCondition>
              name: test_get
              obj: <function TestEditQuestionCondition.test_get at 0x133077e20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132398f50>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionCondition>
              name: test_get_with_delete_parameter
              obj: <function TestEditQuestionCondition.test_get_with_delete_parameter at 0x133077ec0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239bcf0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_with_delete_parameter>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionCondition>
              name: test_post_update_condition
              obj: <function TestEditQuestionCondition.test_post_update_condition at 0x133077f60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450050>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_condition>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionCondition>
              name: test_post_update_group_condition
              obj: <function TestEditQuestionCondition.test_post_update_group_condition at 0x132398040>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450050>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_group_condition>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionCondition>
              name: test_post_update_condition_duplicate
              obj: <function TestEditQuestionCondition.test_post_update_condition_duplicate at 0x1323980e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450050>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_condition_duplicate>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionCondition>
              name: test_post_delete
              obj: <function TestEditQuestionCondition.test_post_delete at 0x132398180>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450730>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_delete>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestEditQuestionCondition' lenresult=8 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_with_delete_parameter> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_with_delete_parameter>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_condition> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_condition>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_group_condition> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_group_condition>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_condition_duplicate> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_condition_duplicate>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_delete> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_delete>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestEditQuestionCondition' lenresult=8 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestAddQuestionValidation> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAddQuestionValidation>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAddQuestionValidation>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionValidation>
              name: test_404
              obj: <function TestAddQuestionValidation.test_404 at 0x132398220>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b570>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionValidation>
              name: test_get
              obj: <function TestAddQuestionValidation.test_get at 0x1323982c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b570>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionValidation>
              name: test_get_no_validation_available
              obj: <function TestAddQuestionValidation.test_get_no_validation_available at 0x132398360>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239a170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_no_validation_available>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionValidation>
              name: test_post
              obj: <function TestAddQuestionValidation.test_post at 0x132398400>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450050>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAddQuestionValidation>
              name: test_post_duplicate_validation
              obj: <function TestAddQuestionValidation.test_post_duplicate_validation at 0x1323984a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450050>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_duplicate_validation>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestionValidation' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_no_validation_available> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_no_validation_available>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_duplicate_validation> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_duplicate_validation>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestAddQuestionValidation' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestEditQuestionValidation> [collection]
        pytest_collectstart [hook]
            collector: <Class TestEditQuestionValidation>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestEditQuestionValidation>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionValidation>
              name: test_404
              obj: <function TestEditQuestionValidation.test_404 at 0x132398540>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239ba70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionValidation>
              name: test_get
              obj: <function TestEditQuestionValidation.test_get at 0x1323985e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239ba70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionValidation>
              name: test_get_with_delete_parameter
              obj: <function TestEditQuestionValidation.test_get_with_delete_parameter at 0x132398680>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239ba70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_with_delete_parameter>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionValidation>
              name: test_post_update_validation
              obj: <function TestEditQuestionValidation.test_post_update_validation at 0x132398720>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132399770>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_validation>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionValidation>
              name: test_post_update_validation_duplicate
              obj: <function TestEditQuestionValidation.test_post_update_validation_duplicate at 0x1323987c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450050>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_validation_duplicate>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEditQuestionValidation>
              name: test_post_delete
              obj: <function TestEditQuestionValidation.test_post_delete at 0x132398860>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324505f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_delete>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestEditQuestionValidation' lenresult=7 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_with_delete_parameter> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_with_delete_parameter>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_validation> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_validation>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_validation_duplicate> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_validation_duplicate>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_delete> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_delete>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestEditQuestionValidation' lenresult=7 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestManageGuidance> [collection]
        pytest_collectstart [hook]
            collector: <Class TestManageGuidance>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestManageGuidance>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_404
              obj: <function TestManageGuidance.test_404 at 0x132398900>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450e10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_get_access_control
              obj: <function TestManageGuidance.test_get_access_control at 0x1323989a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450eb0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_access
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_access_control[authenticated_grant_member_client-False]>, <Function test_get_access_control[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_get_add_guidance
              obj: <function TestManageGuidance.test_get_add_guidance at 0x132398a40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b570>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_add_guidance>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_get_edit_guidance
              obj: <function TestManageGuidance.test_get_edit_guidance at 0x132398ae0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450c30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_edit_guidance>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_post_add_guidance
              obj: <function TestManageGuidance.test_post_add_guidance at 0x132398b80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324511d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_add_guidance>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_post_update_guidance
              obj: <function TestManageGuidance.test_post_update_guidance at 0x132398c20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324505f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_guidance>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_post_clear_guidance
              obj: <function TestManageGuidance.test_post_clear_guidance at 0x132398cc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_clear_guidance>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_post_guidance_with_heading_or_text_but_not_Both
              obj: <function TestManageGuidance.test_post_guidance_with_heading_or_text_but_not_Both at 0x132398d60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451270>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_guidance_with_heading_or_text_but_not_Both>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_get_edit_guidance_groups
              obj: <function TestManageGuidance.test_get_edit_guidance_groups at 0x132398e00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451770>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_edit_guidance_groups>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestManageGuidance>
              name: test_post_update_guidance_groups
              obj: <function TestManageGuidance.test_post_update_guidance_groups at 0x132398ea0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451a90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_update_guidance_groups>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestManageGuidance' lenresult=11 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_access_control[authenticated_grant_member_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_access_control[authenticated_grant_member_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_access_control[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_access_control[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_add_guidance> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_add_guidance>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_edit_guidance> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_edit_guidance>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_add_guidance> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_add_guidance>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_guidance> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_guidance>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_clear_guidance> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_clear_guidance>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_guidance_with_heading_or_text_but_not_Both> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_guidance_with_heading_or_text_but_not_Both>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_edit_guidance_groups> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_edit_guidance_groups>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_update_guidance_groups> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_update_guidance_groups>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestManageGuidance' lenresult=11 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestListSubmissions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestListSubmissions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestListSubmissions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListSubmissions>
              name: test_404
              obj: <function TestListSubmissions.test_404 at 0x132398fe0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452030>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListSubmissions>
              name: test_no_submissions
              obj: <function TestListSubmissions.test_no_submissions at 0x132399080>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324520d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_no_submissions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestListSubmissions>
              name: test_based_on_submission_mode
              obj: <function TestListSubmissions.test_based_on_submission_mode at 0x132399120>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324520d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_based_on_submission_mode>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListSubmissions' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_no_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_no_submissions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_based_on_submission_mode> [collection]
        pytest_itemcollected [hook]
            item: <Function test_based_on_submission_mode>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestListSubmissions' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestExportReportSubmissions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestExportReportSubmissions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestExportReportSubmissions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExportReportSubmissions>
              name: test_404
              obj: <function TestExportReportSubmissions.test_404 at 0x1323991c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132450c30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExportReportSubmissions>
              name: test_unknown_export_type
              obj: <function TestExportReportSubmissions.test_unknown_export_type at 0x132399260>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451450>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_unknown_export_type>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExportReportSubmissions>
              name: test_csv_download
              obj: <function TestExportReportSubmissions.test_csv_download at 0x132399300>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451bd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_csv_download>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestExportReportSubmissions>
              name: test_json_download
              obj: <function TestExportReportSubmissions.test_json_download at 0x1323993a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451d10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_json_download>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestExportReportSubmissions' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_unknown_export_type> [collection]
        pytest_itemcollected [hook]
            item: <Function test_unknown_export_type>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_csv_download> [collection]
        pytest_itemcollected [hook]
            item: <Function test_csv_download>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_json_download> [collection]
        pytest_itemcollected [hook]
            item: <Function test_json_download>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestExportReportSubmissions' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestViewSubmission> [collection]
        pytest_collectstart [hook]
            collector: <Class TestViewSubmission>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestViewSubmission>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestViewSubmission>
              name: test_404
              obj: <function TestViewSubmission.test_404 at 0x132399440>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452490>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_404>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestViewSubmission>
              name: test_forms_and_questions_and_answers_displayed
              obj: <function TestViewSubmission.test_forms_and_questions_and_answers_displayed at 0x1323994e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b4d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_forms_and_questions_and_answers_displayed>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestViewSubmission' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_404> [collection]
        pytest_itemcollected [hook]
            item: <Function test_404>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_forms_and_questions_and_answers_displayed> [collection]
        pytest_itemcollected [hook]
            item: <Function test_forms_and_questions_and_answers_displayed>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py::TestViewSubmission' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_reports.py' lenresult=25 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_runner.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_runner.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_runner.py>
        find_module called for: tests.integration.deliver_grant_funding.routes.test_runner [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_runner.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/routes/test_runner.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: FixtureRequest
              obj: <class '_pytest.fixtures.FixtureRequest'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: BeautifulSoup
              obj: <class 'bs4.BeautifulSoup'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: url_for
              obj: <function url_for at 0x107802980>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: ExpressionType
              obj: <enum 'ExpressionType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: QuestionPresentationOptions
              obj: <class 'app.common.data.types.QuestionPresentationOptions'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: SubmissionModeEnum
              obj: <enum 'SubmissionModeEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: get_h1_text
              obj: <function get_h1_text at 0x1175c8540>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: TestSubmissionTasklist
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_runner.TestSubmissionTasklist'>
          finish pytest_pycollect_makeitem --> <Class TestSubmissionTasklist> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: TestAskAQuestion
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_runner.TestAskAQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestAskAQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: TestCheckYourAnswers
              obj: <class 'tests.integration.deliver_grant_funding.routes.test_runner.TestCheckYourAnswers'>
          finish pytest_pycollect_makeitem --> <Class TestCheckYourAnswers> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_runner.py' lenresult=3 outcome='passed'> [hook]
      genitems <Class TestSubmissionTasklist> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSubmissionTasklist>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSubmissionTasklist>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionTasklist>
              name: test_get_submission_tasklist
              obj: <function TestSubmissionTasklist.test_get_submission_tasklist at 0x132452020>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451db0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_submission_tasklist[authenticated_no_role_client-False]>, <Function test_get_submission_tasklist[authenticated_grant_member_client-True]>, <Function test_get_submission_tasklist[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionTasklist>
              name: test_get_other_users_submission_tasklist_403s
              obj: <function TestSubmissionTasklist.test_get_other_users_submission_tasklist_403s at 0x1324519e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451db0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_other_users_submission_tasklist_403s[authenticated_no_role_client]>, <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_member_client]>, <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_admin_client]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionTasklist>
              name: test_post_submission_tasklist_test
              obj: <function TestSubmissionTasklist.test_post_submission_tasklist_test at 0x132451260>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451db0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_submission_tasklist_test[authenticated_no_role_client-False]>, <Function test_post_submission_tasklist_test[authenticated_grant_member_client-True]>, <Function test_post_submission_tasklist_test[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionTasklist>
              name: test_post_submission_tasklist_live
              obj: <function TestSubmissionTasklist.test_post_submission_tasklist_live at 0x132451300>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b570>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_submission_tasklist_live[authenticated_no_role_client-False]>, <Function test_post_submission_tasklist_live[authenticated_grant_member_client-True]>, <Function test_post_submission_tasklist_live[authenticated_grant_admin_client-True]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_runner.py::TestSubmissionTasklist' lenresult=12 outcome='passed'> [hook]
      genitems <Function test_get_submission_tasklist[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_submission_tasklist[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_submission_tasklist[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_submission_tasklist[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_submission_tasklist[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_submission_tasklist[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_other_users_submission_tasklist_403s[authenticated_no_role_client]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_other_users_submission_tasklist_403s[authenticated_no_role_client]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_member_client]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_member_client]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_admin_client]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_admin_client]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_submission_tasklist_test[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_submission_tasklist_test[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_submission_tasklist_test[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_submission_tasklist_test[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_submission_tasklist_test[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_submission_tasklist_test[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_submission_tasklist_live[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_submission_tasklist_live[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_submission_tasklist_live[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_submission_tasklist_live[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_submission_tasklist_live[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_submission_tasklist_live[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_runner.py::TestSubmissionTasklist' lenresult=12 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestAskAQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAskAQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAskAQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAskAQuestion>
              name: test_get_ask_a_question
              obj: <function TestAskAQuestion.test_get_ask_a_question at 0x132450040>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451db0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_ask_a_question[authenticated_no_role_client-False]>, <Function test_get_ask_a_question[authenticated_grant_member_client-True]>, <Function test_get_ask_a_question[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAskAQuestion>
              name: test_get_other_users_ask_a_question_403s
              obj: <function TestAskAQuestion.test_get_other_users_ask_a_question_403s at 0x132451120>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451db0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_other_users_ask_a_question_403s[authenticated_no_role_client]>, <Function test_get_other_users_ask_a_question_403s[authenticated_grant_member_client]>, <Function test_get_other_users_ask_a_question_403s[authenticated_grant_admin_client]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAskAQuestion>
              name: test_get_ask_a_question_with_failing_condition_redirects
              obj: <function TestAskAQuestion.test_get_ask_a_question_with_failing_condition_redirects at 0x132450e00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451db0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_ask_a_question_with_failing_condition_redirects>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAskAQuestion>
              name: test_post_ask_a_question
              obj: <function TestAskAQuestion.test_post_ask_a_question at 0x1324504a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451590>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_ask_a_question[authenticated_no_role_client-False]>, <Function test_post_ask_a_question[authenticated_grant_member_client-True]>, <Function test_post_ask_a_question[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAskAQuestion>
              name: test_question_without_guidance_uses_question_as_heading
              obj: <function TestAskAQuestion.test_question_without_guidance_uses_question_as_heading at 0x132450680>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451590>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_without_guidance_uses_question_as_heading>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAskAQuestion>
              name: test_question_with_guidance_uses_guidance_heading
              obj: <function TestAskAQuestion.test_question_with_guidance_uses_guidance_heading at 0x132452520>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132451590>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_with_guidance_uses_guidance_heading>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAskAQuestion>
              name: test_group_same_page_with_questions_uses_group_guidance
              obj: <function TestAskAQuestion.test_group_same_page_with_questions_uses_group_guidance at 0x1324520c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324522b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_group_same_page_with_questions_uses_group_guidance>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_runner.py::TestAskAQuestion' lenresult=13 outcome='passed'> [hook]
      genitems <Function test_get_ask_a_question[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_ask_a_question[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_ask_a_question[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_ask_a_question[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_ask_a_question[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_ask_a_question[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_other_users_ask_a_question_403s[authenticated_no_role_client]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_other_users_ask_a_question_403s[authenticated_no_role_client]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_other_users_ask_a_question_403s[authenticated_grant_member_client]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_other_users_ask_a_question_403s[authenticated_grant_member_client]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_other_users_ask_a_question_403s[authenticated_grant_admin_client]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_other_users_ask_a_question_403s[authenticated_grant_admin_client]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_ask_a_question_with_failing_condition_redirects> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_ask_a_question_with_failing_condition_redirects>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_ask_a_question[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_ask_a_question[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_ask_a_question[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_ask_a_question[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_ask_a_question[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_ask_a_question[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_question_without_guidance_uses_question_as_heading> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_without_guidance_uses_question_as_heading>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_question_with_guidance_uses_guidance_heading> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_with_guidance_uses_guidance_heading>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_group_same_page_with_questions_uses_group_guidance> [collection]
        pytest_itemcollected [hook]
            item: <Function test_group_same_page_with_questions_uses_group_guidance>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_runner.py::TestAskAQuestion' lenresult=13 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestCheckYourAnswers> [collection]
        pytest_collectstart [hook]
            collector: <Class TestCheckYourAnswers>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestCheckYourAnswers>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCheckYourAnswers>
              name: test_get_check_your_answers
              obj: <function TestCheckYourAnswers.test_get_check_your_answers at 0x1324525c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452f30>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_check_your_answers[authenticated_no_role_client-False]>, <Function test_get_check_your_answers[authenticated_grant_member_client-True]>, <Function test_get_check_your_answers[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCheckYourAnswers>
              name: test_get_other_users_check_your_answers_403s
              obj: <function TestCheckYourAnswers.test_get_other_users_check_your_answers_403s at 0x132452660>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452d50>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_other_users_check_your_answers_403s[authenticated_no_role_client]>, <Function test_get_other_users_check_your_answers_403s[authenticated_grant_member_client]>, <Function test_get_other_users_check_your_answers_403s[authenticated_grant_admin_client]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCheckYourAnswers>
              name: test_post_check_your_answers_complete_form
              obj: <function TestCheckYourAnswers.test_post_check_your_answers_complete_form at 0x132452700>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13239b070>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_check_your_answers_complete_form[authenticated_no_role_client-False]>, <Function test_post_check_your_answers_complete_form[authenticated_grant_member_client-True]>, <Function test_post_check_your_answers_complete_form[authenticated_grant_admin_client-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCheckYourAnswers>
              name: test_post_check_your_answers_complete_test_preview
              obj: <function TestCheckYourAnswers.test_post_check_your_answers_complete_test_preview at 0x1324527a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452d50>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_no_role_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_member_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: authenticated_grant_admin_client
                  argname: client_fixture
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: can_preview
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_post_check_your_answers_complete_test_preview[authenticated_no_role_client-False]>, <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_member_client-True]>, <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_admin_client-True]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/routes/test_runner.py::TestCheckYourAnswers' lenresult=12 outcome='passed'> [hook]
      genitems <Function test_get_check_your_answers[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_check_your_answers[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_check_your_answers[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_check_your_answers[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_check_your_answers[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_check_your_answers[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_other_users_check_your_answers_403s[authenticated_no_role_client]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_other_users_check_your_answers_403s[authenticated_no_role_client]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_other_users_check_your_answers_403s[authenticated_grant_member_client]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_other_users_check_your_answers_403s[authenticated_grant_member_client]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_other_users_check_your_answers_403s[authenticated_grant_admin_client]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_other_users_check_your_answers_403s[authenticated_grant_admin_client]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_check_your_answers_complete_form[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_check_your_answers_complete_form[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_check_your_answers_complete_form[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_check_your_answers_complete_form[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_check_your_answers_complete_form[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_check_your_answers_complete_form[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_check_your_answers_complete_test_preview[authenticated_no_role_client-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_check_your_answers_complete_test_preview[authenticated_no_role_client-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_member_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_member_client-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_admin_client-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_admin_client-True]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_runner.py::TestCheckYourAnswers' lenresult=12 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes/test_runner.py' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/routes' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_helpers.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_helpers.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_helpers.py>
        find_module called for: tests.integration.deliver_grant_funding.test_helpers [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/test_helpers.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/deliver_grant_funding/test_helpers.py') [assertion]
        early skip of rewriting module: app.deliver_grant_funding.helpers [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_helpers.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_helpers.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_helpers.py>
              name: Submission
              obj: <class 'app.common.data.models.Submission'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_helpers.py>
              name: SubmissionEvent
              obj: <class 'app.common.data.models.SubmissionEvent'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_helpers.py>
              name: SubmissionModeEnum
              obj: <enum 'SubmissionModeEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_helpers.py>
              name: start_testing_submission
              obj: <function start_testing_submission at 0x132452840>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_helpers.py>
              name: AnyStringMatching
              obj: <class 'tests.utils.AnyStringMatching'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_helpers.py>
              name: test_start_testing_submission
              obj: <function test_start_testing_submission at 0x132399c60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452f30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_start_testing_submission>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/deliver_grant_funding/test_helpers.py' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_start_testing_submission> [collection]
        pytest_itemcollected [hook]
            item: <Function test_start_testing_submission>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding/test_helpers.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/deliver_grant_funding' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package developers> [collection]
        pytest_collectstart [hook]
            collector: <Package developers>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package developers>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/developers/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/developers/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package developers>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/developers/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/developers/__init__.py
          finish pytest_collect_file --> [] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/developers' lenresult=0 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/developers' lenresult=0 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Dir extensions> [collection]
        pytest_collectstart [hook]
            collector: <Dir extensions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Dir extensions>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_auto_commit_after_request.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_auto_commit_after_request.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Dir extensions>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_auto_commit_after_request.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_auto_commit_after_request.py
            pytest_pycollect_makemodule [hook]
                parent: <Dir extensions>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_auto_commit_after_request.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_auto_commit_after_request.py
            finish pytest_pycollect_makemodule --> <Module test_auto_commit_after_request.py> [hook]
          finish pytest_collect_file --> [<Module test_auto_commit_after_request.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_flask_assets_vite.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_flask_assets_vite.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Dir extensions>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_flask_assets_vite.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_flask_assets_vite.py
            pytest_pycollect_makemodule [hook]
                parent: <Dir extensions>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_flask_assets_vite.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_flask_assets_vite.py
            finish pytest_pycollect_makemodule --> <Module test_flask_assets_vite.py> [hook]
          finish pytest_collect_file --> [<Module test_flask_assets_vite.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/extensions' lenresult=2 outcome='passed'> [hook]
      genitems <Module test_auto_commit_after_request.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_auto_commit_after_request.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_auto_commit_after_request.py>
        find_module called for: test_auto_commit_after_request [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_auto_commit_after_request.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_auto_commit_after_request.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: Flask
              obj: <class 'flask.app.Flask'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: Response
              obj: <class 'flask.wrappers.Response'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: SQLAlchemy
              obj: <class 'flask_sqlalchemy_lite._extension.SQLAlchemy'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: select
              obj: <function select at 0x107eea520>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: IntegrityError
              obj: <class 'sqlalchemy.exc.IntegrityError'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: DeclarativeBase
              obj: <class 'sqlalchemy.orm.decl_api.DeclarativeBase'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: Mapped
              obj: <class 'sqlalchemy.orm.base.Mapped'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: mapped_column
              obj: <function mapped_column at 0x1104d6840>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: sessionmaker
              obj: <class 'sqlalchemy.orm.session.sessionmaker'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: create_database
              obj: <function create_database at 0x117613a60>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: database_exists
              obj: <function database_exists at 0x1176139c0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: AutoCommitAfterRequestExtension
              obj: <class 'app.extensions.auto_commit_after_request.AutoCommitAfterRequestExtension'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: Base
              obj: <class 'test_auto_commit_after_request.Base'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: TableUnderTest
              obj: <class 'test_auto_commit_after_request.TableUnderTest'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: app
              obj: <pytest_fixture(<function app at 0x132452ac0>)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: db_session
              obj: <pytest_fixture(<function db_session at 0x132453d80>)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: db
              obj: <pytest_fixture(<function db at 0x132453ec0>)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: session_outside_connection
              obj: <pytest_fixture(<function session_outside_connection at 0x1324e0040>)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: test_db_session_is_committed
              obj: <function test_db_session_is_committed at 0x1324e0180>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452f30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_db_session_is_committed>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: test_db_session_is_rolled_back_and_doesnt_error_when_handled
              obj: <function test_db_session_is_rolled_back_and_doesnt_error_when_handled at 0x1324e0220>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452f30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_db_session_is_rolled_back_and_doesnt_error_when_handled>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_auto_commit_after_request.py>
              name: test_db_session_throws_appropriately_on_commit_if_not_handled
              obj: <function test_db_session_throws_appropriately_on_commit_if_not_handled at 0x1324e02c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e0370>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_db_session_throws_appropriately_on_commit_if_not_handled>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/extensions/test_auto_commit_after_request.py' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_db_session_is_committed> [collection]
        pytest_itemcollected [hook]
            item: <Function test_db_session_is_committed>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_db_session_is_rolled_back_and_doesnt_error_when_handled> [collection]
        pytest_itemcollected [hook]
            item: <Function test_db_session_is_rolled_back_and_doesnt_error_when_handled>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_db_session_throws_appropriately_on_commit_if_not_handled> [collection]
        pytest_itemcollected [hook]
            item: <Function test_db_session_throws_appropriately_on_commit_if_not_handled>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/extensions/test_auto_commit_after_request.py' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_flask_assets_vite.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_flask_assets_vite.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_flask_assets_vite.py>
        find_module called for: test_flask_assets_vite [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_flask_assets_vite.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/extensions/test_flask_assets_vite.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: patch
              obj: <function patch at 0x1069e1080>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: Flask
              obj: <class 'flask.app.Flask'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: Environment
              obj: <enum 'Environment'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: FlaskAssetsViteExtension
              obj: <class 'app.extensions.flask_assets_vite.FlaskAssetsViteExtension'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: db_session
              obj: <pytest_fixture(<function db_session at 0x1324e0720>)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: app
              obj: <pytest_fixture(<function app at 0x1324e0860>)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: get_template_processor
              obj: <function get_template_processor at 0x1324e09a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: test_assets_live_enabled
              obj: <function test_assets_live_enabled at 0x1324e0a40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e0cd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_assets_live_enabled>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: test_assets_static_manifest
              obj: <function test_assets_static_manifest at 0x1324e0ae0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e0e10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_assets_static_manifest>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: test_assets_no_manifest_production
              obj: <function test_assets_no_manifest_production at 0x1324e0b80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e0f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_assets_no_manifest_production>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_flask_assets_vite.py>
              name: test_assets_no_manifest_non_production
              obj: <function test_assets_no_manifest_non_production at 0x1324e0c20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1090>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_assets_no_manifest_non_production>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/extensions/test_flask_assets_vite.py' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_assets_live_enabled> [collection]
        pytest_itemcollected [hook]
            item: <Function test_assets_live_enabled>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_assets_static_manifest> [collection]
        pytest_itemcollected [hook]
            item: <Function test_assets_static_manifest>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_assets_no_manifest_production> [collection]
        pytest_itemcollected [hook]
            item: <Function test_assets_no_manifest_production>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_assets_no_manifest_non_production> [collection]
        pytest_itemcollected [hook]
            item: <Function test_assets_no_manifest_non_production>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/extensions/test_flask_assets_vite.py' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/extensions' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Dir healthcheck> [collection]
        pytest_collectstart [hook]
            collector: <Dir healthcheck>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Dir healthcheck>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/test_healthcheck.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/test_healthcheck.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Dir healthcheck>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/test_healthcheck.py
              path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/test_healthcheck.py
            pytest_pycollect_makemodule [hook]
                parent: <Dir healthcheck>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/test_healthcheck.py
                path: /Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/test_healthcheck.py
            finish pytest_pycollect_makemodule --> <Module test_healthcheck.py> [hook]
          finish pytest_collect_file --> [<Module test_healthcheck.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/healthcheck' lenresult=1 outcome='passed'> [hook]
      genitems <Module test_healthcheck.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_healthcheck.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_healthcheck.py>
        find_module called for: test_healthcheck [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/test_healthcheck.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/healthcheck/test_healthcheck.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_healthcheck.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_healthcheck.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_healthcheck.py>
              name: test_healthcheck
              obj: <function test_healthcheck at 0x132452480>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452f30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_healthcheck>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/healthcheck/test_healthcheck.py' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_healthcheck> [collection]
        pytest_itemcollected [hook]
            item: <Function test_healthcheck>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/healthcheck/test_healthcheck.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/healthcheck' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_app.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_app.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_app.py>
        find_module called for: tests.integration.test_app [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/test_app.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/test_app.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: os
              obj: <module 'os' (frozen)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: Generator
              obj: typing.Generator
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: patch
              obj: <function patch at 0x1069e1080>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: Flask
              obj: <class 'flask.app.Flask'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: url_for
              obj: <function url_for at 0x107802980>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: SQLAlchemy
              obj: <class 'flask_sqlalchemy_lite._extension.SQLAlchemy'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: PostgresContainer
              obj: <class 'testcontainers.postgres.PostgresContainer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: create_app
              obj: <function create_app at 0x116a85620>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: build_db_config
              obj: <function build_db_config at 0x1174553a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: app_with_basic_auth
              obj: <pytest_fixture(<function app_with_basic_auth at 0x1324e04a0>)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: TestBasicAuth
              obj: <class 'tests.integration.test_app.TestBasicAuth'>
          finish pytest_pycollect_makeitem --> <Class TestBasicAuth> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_app.py>
              name: TestAppErrorHandlers
              obj: <class 'tests.integration.test_app.TestAppErrorHandlers'>
          finish pytest_pycollect_makeitem --> <Class TestAppErrorHandlers> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/test_app.py' lenresult=2 outcome='passed'> [hook]
      genitems <Class TestBasicAuth> [collection]
        pytest_collectstart [hook]
            collector: <Class TestBasicAuth>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestBasicAuth>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBasicAuth>
              name: test_basic_auth_disabled
              obj: <function TestBasicAuth.test_basic_auth_disabled at 0x1324e1260>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132452f30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_basic_auth_disabled>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBasicAuth>
              name: test_basic_auth_enabled_requires_username_and_password
              obj: <function TestBasicAuth.test_basic_auth_enabled_requires_username_and_password at 0x1324e1300>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e0370>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_basic_auth_enabled_requires_username_and_password>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBasicAuth>
              name: test_basic_auth_enabled
              obj: <function TestBasicAuth.test_basic_auth_enabled at 0x1324e13a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e0f50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_basic_auth_enabled>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBasicAuth>
              name: test_basic_auth_enabled_allows_healthcheck
              obj: <function TestBasicAuth.test_basic_auth_enabled_allows_healthcheck at 0x1324e1440>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1130>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_basic_auth_enabled_allows_healthcheck>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/test_app.py::TestBasicAuth' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_basic_auth_disabled> [collection]
        pytest_itemcollected [hook]
            item: <Function test_basic_auth_disabled>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_basic_auth_enabled_requires_username_and_password> [collection]
        pytest_itemcollected [hook]
            item: <Function test_basic_auth_enabled_requires_username_and_password>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_basic_auth_enabled> [collection]
        pytest_itemcollected [hook]
            item: <Function test_basic_auth_enabled>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_basic_auth_enabled_allows_healthcheck> [collection]
        pytest_itemcollected [hook]
            item: <Function test_basic_auth_enabled_allows_healthcheck>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/test_app.py::TestBasicAuth' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestAppErrorHandlers> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAppErrorHandlers>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAppErrorHandlers>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAppErrorHandlers>
              name: test_app_404_on_unknown_url
              obj: <function TestAppErrorHandlers.test_app_404_on_unknown_url at 0x1324e14e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1810>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_app_404_on_unknown_url>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAppErrorHandlers>
              name: test_app_404_on_sqlalchemy_not_found
              obj: <function TestAppErrorHandlers.test_app_404_on_sqlalchemy_not_found at 0x1324e1580>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e19f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_app_404_on_sqlalchemy_not_found>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAppErrorHandlers>
              name: test_app_500_on_internal_server_error
              obj: <function TestAppErrorHandlers.test_app_500_on_internal_server_error at 0x1324e1620>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e19f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_app_500_on_internal_server_error>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/test_app.py::TestAppErrorHandlers' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_app_404_on_unknown_url> [collection]
        pytest_itemcollected [hook]
            item: <Function test_app_404_on_unknown_url>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_app_404_on_sqlalchemy_not_found> [collection]
        pytest_itemcollected [hook]
            item: <Function test_app_404_on_sqlalchemy_not_found>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_app_500_on_internal_server_error> [collection]
        pytest_itemcollected [hook]
            item: <Function test_app_500_on_internal_server_error>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/test_app.py::TestAppErrorHandlers' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/test_app.py' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_fixtures.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_fixtures.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_fixtures.py>
        find_module called for: tests.integration.test_fixtures [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/test_fixtures.py' [assertion]
        _read_pyc(/Users/sarahsloan1/dev/funding-service/tests/integration/test_fixtures.py): out of date [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/test_fixtures.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: datetime
              obj: <class 'datetime.datetime'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: timedelta
              obj: <class 'datetime.timedelta'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: uuid4
              obj: <function uuid4 at 0x1050f67a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: text
              obj: <function text at 0x107ee8ae0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: Collection
              obj: <class 'app.common.data.models.Collection'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: SubmissionHelper
              obj: <class 'app.common.helpers.collections.SubmissionHelper'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: setup_temp_tables
              obj: <pytest_fixture(<function setup_temp_tables at 0x1324e0ea0>)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: test_create_frozen_time
              obj: <function test_create_frozen_time at 0x1324e0e00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1b30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_create_frozen_time>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: test_update_frozen_time_no_tick
              obj: <function test_update_frozen_time_no_tick at 0x1324e0f40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1d10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_frozen_time_no_tick>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: test_update_frozen_time_with_tick
              obj: <function test_update_frozen_time_with_tick at 0x1324e1120>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e11d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_update_frozen_time_with_tick>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: test_request_fixture_invalid_time_raises_value_error
              obj: <function test_request_fixture_invalid_time_raises_value_error at 0x1324e1940>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1770>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_request_fixture_invalid_time_raises_value_error>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fixtures.py>
              name: test_collection_factory_completed_submissions
              obj: <function test_collection_factory_completed_submissions at 0x1324e16c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1770>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_collection_factory_completed_submissions>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/test_fixtures.py' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_create_frozen_time> [collection]
        pytest_itemcollected [hook]
            item: <Function test_create_frozen_time>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_frozen_time_no_tick> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_frozen_time_no_tick>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_update_frozen_time_with_tick> [collection]
        pytest_itemcollected [hook]
            item: <Function test_update_frozen_time_with_tick>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_request_fixture_invalid_time_raises_value_error> [collection]
        pytest_itemcollected [hook]
            item: <Function test_request_fixture_invalid_time_raises_value_error>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_collection_factory_completed_submissions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_collection_factory_completed_submissions>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/test_fixtures.py' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_logging.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_logging.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_logging.py>
        find_module called for: tests.integration.test_logging [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/integration/test_logging.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/integration/test_logging.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_logging.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_logging.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_logging.py>
              name: Any
              obj: typing.Any
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_logging.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_logging.py>
              name: TestLogging
              obj: <class 'tests.integration.test_logging.TestLogging'>
          finish pytest_pycollect_makeitem --> <Class TestLogging> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/test_logging.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestLogging> [collection]
        pytest_collectstart [hook]
            collector: <Class TestLogging>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestLogging>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestLogging>
              name: test_basic_log_message
              obj: <function TestLogging.test_basic_log_message at 0x1324e2340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1ef0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_basic_log_message>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestLogging>
              name: test_can_log_simple_interpolated_values
              obj: <function TestLogging.test_can_log_simple_interpolated_values at 0x1324e20c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1810>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
                  argname: simple
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1
                  argname: simple
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1.0
                  argname: simple
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: simple
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_can_log_simple_interpolated_values[hello]>, <Function test_can_log_simple_interpolated_values[1]>, <Function test_can_log_simple_interpolated_values[1.0]>, <Function test_can_log_simple_interpolated_values[True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestLogging>
              name: test_cannot_log_complex_data_types
              obj: <function TestLogging.test_cannot_log_complex_data_types at 0x1324e23e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1810>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [1, 2, 3]
                  argname: complex
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: (1, 2, 3)
                  argname: complex
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'a': 'b'}
                  argname: complex
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'a'}
                  argname: complex
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_cannot_log_complex_data_types[complex0]>, <Function test_cannot_log_complex_data_types[complex1]>, <Function test_cannot_log_complex_data_types[complex2]>, <Function test_cannot_log_complex_data_types[complex3]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/integration/test_logging.py::TestLogging' lenresult=9 outcome='passed'> [hook]
      genitems <Function test_basic_log_message> [collection]
        pytest_itemcollected [hook]
            item: <Function test_basic_log_message>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_can_log_simple_interpolated_values[hello]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_can_log_simple_interpolated_values[hello]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_can_log_simple_interpolated_values[1]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_can_log_simple_interpolated_values[1]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_can_log_simple_interpolated_values[1.0]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_can_log_simple_interpolated_values[1.0]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_can_log_simple_interpolated_values[True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_can_log_simple_interpolated_values[True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_cannot_log_complex_data_types[complex0]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_cannot_log_complex_data_types[complex0]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_cannot_log_complex_data_types[complex1]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_cannot_log_complex_data_types[complex1]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_cannot_log_complex_data_types[complex2]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_cannot_log_complex_data_types[complex2]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_cannot_log_complex_data_types[complex3]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_cannot_log_complex_data_types[complex3]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/test_logging.py::TestLogging' lenresult=9 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration/test_logging.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/integration' lenresult=8 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package unit> [collection]
        pytest_collectstart [hook]
            collector: <Package unit>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package unit>
        early skip of rewriting module: tests.unit [assertion]
        find_module called for: tests.unit.conftest [assertion]
        rewriting conftest file: '/Users/sarahsloan1/dev/funding-service/tests/unit/conftest.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/conftest.py') [assertion]
        loading conftestmodule <module 'tests.unit.conftest' from '/Users/sarahsloan1/dev/funding-service/tests/unit/conftest.py'> [pluginmanage]
          pytest_plugin_registered [hook]
              plugin: <module 'tests.unit.conftest' from '/Users/sarahsloan1/dev/funding-service/tests/unit/conftest.py'>
              plugin_name: /Users/sarahsloan1/dev/funding-service/tests/unit/conftest.py
              manager: <_pytest.config.PytestPluginManager object at 0x106759d10>
          finish pytest_plugin_registered --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package unit>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common
              parent: <Package unit>
          finish pytest_collect_directory --> <Package common> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/config
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/config
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/config
              parent: <Package unit>
          finish pytest_collect_directory --> <Package config> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/conftest.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/conftest.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package unit>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/conftest.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/conftest.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding
              parent: <Package unit>
          finish pytest_collect_directory --> <Package deliver_grant_funding> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/services
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/services
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/services
              parent: <Package unit>
          finish pytest_collect_directory --> <Package services> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_all_routes_access.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_all_routes_access.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package unit>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_all_routes_access.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_all_routes_access.py
            pytest_pycollect_makemodule [hook]
                parent: <Package unit>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_all_routes_access.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_all_routes_access.py
            finish pytest_pycollect_makemodule --> <Module test_all_routes_access.py> [hook]
          finish pytest_collect_file --> [<Module test_all_routes_access.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_jinja_templates.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_jinja_templates.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package unit>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_jinja_templates.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_jinja_templates.py
            pytest_pycollect_makemodule [hook]
                parent: <Package unit>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_jinja_templates.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/test_jinja_templates.py
            finish pytest_pycollect_makemodule --> <Module test_jinja_templates.py> [hook]
          finish pytest_collect_file --> [<Module test_jinja_templates.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit' lenresult=6 outcome='passed'> [hook]
      genitems <Package common> [collection]
        pytest_collectstart [hook]
            collector: <Package common>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package common>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package common>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth
              parent: <Package common>
          finish pytest_collect_directory --> <Package auth> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections
              parent: <Package common>
          finish pytest_collect_directory --> <Package collections> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data
              parent: <Package common>
          finish pytest_collect_directory --> <Dir data> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions
              parent: <Package common>
          finish pytest_collect_directory --> <Package expressions> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms
              parent: <Package common>
          finish pytest_collect_directory --> <Package forms> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_directory [hook]
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers
              parent: <Package common>
          finish pytest_collect_directory --> <Package helpers> [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_filters.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_filters.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package common>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_filters.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_filters.py
            pytest_pycollect_makemodule [hook]
                parent: <Package common>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_filters.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_filters.py
            finish pytest_pycollect_makemodule --> <Module test_filters.py> [hook]
          finish pytest_collect_file --> [<Module test_filters.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_markdown.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_markdown.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package common>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_markdown.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_markdown.py
            pytest_pycollect_makemodule [hook]
                parent: <Package common>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_markdown.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_markdown.py
            finish pytest_pycollect_makemodule --> <Module test_markdown.py> [hook]
          finish pytest_collect_file --> [<Module test_markdown.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_utils.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_utils.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package common>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_utils.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_utils.py
            pytest_pycollect_makemodule [hook]
                parent: <Package common>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_utils.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/test_utils.py
            finish pytest_pycollect_makemodule --> <Module test_utils.py> [hook]
          finish pytest_collect_file --> [<Module test_utils.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common' lenresult=9 outcome='passed'> [hook]
      genitems <Package auth> [collection]
        pytest_collectstart [hook]
            collector: <Package auth>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package auth>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package auth>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_authorisation_helper.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_authorisation_helper.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package auth>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_authorisation_helper.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_authorisation_helper.py
            pytest_pycollect_makemodule [hook]
                parent: <Package auth>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_authorisation_helper.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_authorisation_helper.py
            finish pytest_pycollect_makemodule --> <Module test_authorisation_helper.py> [hook]
          finish pytest_collect_file --> [<Module test_authorisation_helper.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_utils.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_utils.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package auth>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_utils.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_utils.py
            pytest_pycollect_makemodule [hook]
                parent: <Package auth>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_utils.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_utils.py
            finish pytest_pycollect_makemodule --> <Module test_utils.py> [hook]
          finish pytest_collect_file --> [<Module test_utils.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/auth' lenresult=2 outcome='passed'> [hook]
      genitems <Module test_authorisation_helper.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_authorisation_helper.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_authorisation_helper.py>
        early skip of rewriting module: tests.unit.common [assertion]
        early skip of rewriting module: tests.unit.common.auth [assertion]
        find_module called for: tests.unit.common.auth.test_authorisation_helper [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_authorisation_helper.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_authorisation_helper.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_authorisation_helper.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_authorisation_helper.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_authorisation_helper.py>
              name: datetime
              obj: <class 'datetime.datetime'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_authorisation_helper.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_authorisation_helper.py>
              name: AnonymousUserMixin
              obj: <class 'flask_login.mixins.AnonymousUserMixin'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_authorisation_helper.py>
              name: utc
              obj: UTC
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_authorisation_helper.py>
              name: AuthorisationHelper
              obj: <class 'app.common.auth.authorisation_helper.AuthorisationHelper'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_authorisation_helper.py>
              name: RoleEnum
              obj: <enum 'RoleEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_authorisation_helper.py>
              name: TestAuthorisationHelper
              obj: <class 'tests.unit.common.auth.test_authorisation_helper.TestAuthorisationHelper'>
          finish pytest_pycollect_makeitem --> <Class TestAuthorisationHelper> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/auth/test_authorisation_helper.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestAuthorisationHelper> [collection]
        pytest_collectstart [hook]
            collector: <Class TestAuthorisationHelper>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestAuthorisationHelper>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_has_logged_in
              obj: <function TestAuthorisationHelper.test_has_logged_in at 0x1324e2c00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e2b70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: John
                  argname: name
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2025-09-15 09:48:47.096062+00:00
                  argname: last_logged_in
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: John
                  argname: name
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: last_logged_in
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: name
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2025-09-15 09:48:47.096070+00:00
                  argname: last_logged_in
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: name
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: last_logged_in
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_has_logged_in[John-last_logged_in0-True]>, <Function test_has_logged_in[John-None-False]>, <Function test_has_logged_in[None-last_logged_in2-True]>, <Function test_has_logged_in[None-None-False]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_mhclg_user
              obj: <function TestAuthorisationHelper.test_is_mhclg_user at 0x1324e2ca0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e2b70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: person@gmail.com
                  argname: email
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: person@communities.gov.uk
                  argname: email
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: person@test.communities.gov.uk
                  argname: email
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_mhclg_user[person@gmail.com-False]>, <Function test_is_mhclg_user[person@communities.gov.uk-True]>, <Function test_is_mhclg_user[person@test.communities.gov.uk-True]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_platform_admin
              obj: <function TestAuthorisationHelper.test_is_platform_admin at 0x1324e2d40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e2b70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.ADMIN
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: has_grant_linked_to_role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.ADMIN
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: has_grant_linked_to_role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.MEMBER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: has_grant_linked_to_role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_platform_admin[admin-False-True]>, <Function test_is_platform_admin[admin-True-False]>, <Function test_is_platform_admin[member-True-False]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_platform_admin_works_for_anonymous_user
              obj: <function TestAuthorisationHelper.test_is_platform_admin_works_for_anonymous_user at 0x1324e2de0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e2a30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_platform_admin_works_for_anonymous_user>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_grant_admin_correct_grant
              obj: <function TestAuthorisationHelper.test_is_grant_admin_correct_grant at 0x1324e2e80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e37f0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.ADMIN
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.MEMBER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_grant_admin_correct_grant[admin-True]>, <Function test_is_grant_admin_correct_grant[member-False]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_grant_admin_incorrect_grant
              obj: <function TestAuthorisationHelper.test_is_grant_admin_incorrect_grant at 0x1324e2f20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e3b10>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.ADMIN
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.MEMBER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_grant_admin_incorrect_grant[admin]>, <Function test_is_grant_admin_incorrect_grant[member]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_grant_admin_for_grant_roles
              obj: <function TestAuthorisationHelper.test_is_grant_admin_for_grant_roles at 0x1324e2fc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e36b0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.ADMIN
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.MEMBER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_grant_admin_for_grant_roles[admin-True]>, <Function test_is_grant_admin_for_grant_roles[member-False]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_grant_admin_if_platform_admin
              obj: <function TestAuthorisationHelper.test_is_grant_admin_if_platform_admin at 0x1324e3060>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e3930>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_grant_admin_if_platform_admin>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_grant_member_true
              obj: <function TestAuthorisationHelper.test_is_grant_member_true at 0x1324e3100>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e3cf0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.ADMIN
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.MEMBER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_grant_member_true[admin]>, <Function test_is_grant_member_true[member]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_grant_member_false_member_of_different_grant
              obj: <function TestAuthorisationHelper.test_is_grant_member_false_member_of_different_grant at 0x1324e31a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e3cf0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.ADMIN
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.MEMBER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_grant_member_false_member_of_different_grant[admin]>, <Function test_is_grant_member_false_member_of_different_grant[member]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_grant_member_false_not_got_member_role
              obj: <function TestAuthorisationHelper.test_is_grant_member_false_not_got_member_role at 0x1324e3240>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e3cf0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_grant_member_false_not_got_member_role>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_is_grant_member_overriden_by_platform_admin
              obj: <function TestAuthorisationHelper.test_is_grant_member_overriden_by_platform_admin at 0x1324e32e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e3930>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_grant_member_overriden_by_platform_admin>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestAuthorisationHelper>
              name: test_has_grant_role
              obj: <function TestAuthorisationHelper.test_has_grant_role at 0x1324e3380>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132788230>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.ADMIN
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RoleEnum.MEMBER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: S151_OFFICER
                  argname: role
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: RaisesExc(ValueError)
                  argname: expected
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_has_grant_role[admin-True]>, <Function test_has_grant_role[member-True]>, <Function test_has_grant_role[S151_OFFICER-expected2]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/auth/test_authorisation_helper.py::TestAuthorisationHelper' lenresult=27 outcome='passed'> [hook]
      genitems <Function test_has_logged_in[John-last_logged_in0-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_has_logged_in[John-last_logged_in0-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_has_logged_in[John-None-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_has_logged_in[John-None-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_has_logged_in[None-last_logged_in2-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_has_logged_in[None-last_logged_in2-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_has_logged_in[None-None-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_has_logged_in[None-None-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_mhclg_user[person@gmail.com-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_mhclg_user[person@gmail.com-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_mhclg_user[person@communities.gov.uk-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_mhclg_user[person@communities.gov.uk-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_mhclg_user[person@test.communities.gov.uk-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_mhclg_user[person@test.communities.gov.uk-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_platform_admin[admin-False-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_platform_admin[admin-False-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_platform_admin[admin-True-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_platform_admin[admin-True-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_platform_admin[member-True-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_platform_admin[member-True-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_platform_admin_works_for_anonymous_user> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_platform_admin_works_for_anonymous_user>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_admin_correct_grant[admin-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_admin_correct_grant[admin-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_admin_correct_grant[member-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_admin_correct_grant[member-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_admin_incorrect_grant[admin]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_admin_incorrect_grant[admin]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_admin_incorrect_grant[member]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_admin_incorrect_grant[member]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_admin_for_grant_roles[admin-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_admin_for_grant_roles[admin-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_admin_for_grant_roles[member-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_admin_for_grant_roles[member-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_admin_if_platform_admin> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_admin_if_platform_admin>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_member_true[admin]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_member_true[admin]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_member_true[member]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_member_true[member]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_member_false_member_of_different_grant[admin]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_member_false_member_of_different_grant[admin]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_member_false_member_of_different_grant[member]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_member_false_member_of_different_grant[member]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_member_false_not_got_member_role> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_member_false_not_got_member_role>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_grant_member_overriden_by_platform_admin> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_grant_member_overriden_by_platform_admin>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_has_grant_role[admin-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_has_grant_role[admin-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_has_grant_role[member-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_has_grant_role[member-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_has_grant_role[S151_OFFICER-expected2]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_has_grant_role[S151_OFFICER-expected2]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/auth/test_authorisation_helper.py::TestAuthorisationHelper' lenresult=27 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/auth/test_authorisation_helper.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_utils.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_utils.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_utils.py>
        find_module called for: tests.unit.common.auth.test_utils [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_utils.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/auth/test_utils.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: sanitise_redirect_url
              obj: <function sanitise_redirect_url at 0x116708ea0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: TestSanitiseRedirectURL
              obj: <class 'tests.unit.common.auth.test_utils.TestSanitiseRedirectURL'>
          finish pytest_pycollect_makeitem --> <Class TestSanitiseRedirectURL> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/auth/test_utils.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestSanitiseRedirectURL> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSanitiseRedirectURL>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSanitiseRedirectURL>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSanitiseRedirectURL>
              name: test_redirect_sanitisation
              obj: <function TestSanitiseRedirectURL.test_redirect_sanitisation at 0x1324e2b60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e3d90>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /
                  argname: expected_url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /blah/blah
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /blah/blah
                  argname: expected_url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: http://funding.communities.gov.localhost:8080/blah
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /blah
                  argname: expected_url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: mailto://funding.communities.gov.localhost:8080/blah
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /
                  argname: expected_url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: http://bad.domain.localhost:8080/blah
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /
                  argname: expected_url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: //blah
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /
                  argname: expected_url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: ///blah
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /blah
                  argname: expected_url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /blah?query=param
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: /blah?query=param
                  argname: expected_url
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_redirect_sanitisation[/-/]>, <Function test_redirect_sanitisation[/blah/blah-/blah/blah]>, <Function test_redirect_sanitisation[http://funding.communities.gov.localhost:8080/blah-/blah]>, <Function test_redirect_sanitisation[mailto://funding.communities.gov.localhost:8080/blah-/]>, <Function test_redirect_sanitisation[http://bad.domain.localhost:8080/blah-/]>, <Function test_redirect_sanitisation[//blah-/]>, <Function test_redirect_sanitisation[///blah-/blah]>, <Function test_redirect_sanitisation[/blah?query=param-/blah?query=param]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/auth/test_utils.py::TestSanitiseRedirectURL' lenresult=8 outcome='passed'> [hook]
      genitems <Function test_redirect_sanitisation[/-/]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_redirect_sanitisation[/-/]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_redirect_sanitisation[/blah/blah-/blah/blah]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_redirect_sanitisation[/blah/blah-/blah/blah]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_redirect_sanitisation[http://funding.communities.gov.localhost:8080/blah-/blah]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_redirect_sanitisation[http://funding.communities.gov.localhost:8080/blah-/blah]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_redirect_sanitisation[mailto://funding.communities.gov.localhost:8080/blah-/]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_redirect_sanitisation[mailto://funding.communities.gov.localhost:8080/blah-/]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_redirect_sanitisation[http://bad.domain.localhost:8080/blah-/]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_redirect_sanitisation[http://bad.domain.localhost:8080/blah-/]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_redirect_sanitisation[//blah-/]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_redirect_sanitisation[//blah-/]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_redirect_sanitisation[///blah-/blah]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_redirect_sanitisation[///blah-/blah]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_redirect_sanitisation[/blah?query=param-/blah?query=param]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_redirect_sanitisation[/blah?query=param-/blah?query=param]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/auth/test_utils.py::TestSanitiseRedirectURL' lenresult=8 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/auth/test_utils.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/auth' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package collections> [collection]
        pytest_collectstart [hook]
            collector: <Package collections>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package collections>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package collections>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_forms.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_forms.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package collections>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_forms.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_forms.py
            pytest_pycollect_makemodule [hook]
                parent: <Package collections>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_forms.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_forms.py
            finish pytest_pycollect_makemodule --> <Module test_forms.py> [hook]
          finish pytest_collect_file --> [<Module test_forms.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_runner.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_runner.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package collections>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_runner.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_runner.py
            pytest_pycollect_makemodule [hook]
                parent: <Package collections>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_runner.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_runner.py
            finish pytest_pycollect_makemodule --> <Module test_runner.py> [hook]
          finish pytest_collect_file --> [<Module test_runner.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_types.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_types.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package collections>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_types.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_types.py
            pytest_pycollect_makemodule [hook]
                parent: <Package collections>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_types.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_types.py
            finish pytest_pycollect_makemodule --> <Module test_types.py> [hook]
          finish pytest_collect_file --> [<Module test_types.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections' lenresult=3 outcome='passed'> [hook]
      genitems <Module test_forms.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_forms.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_forms.py>
        early skip of rewriting module: tests.unit.common.collections [assertion]
        find_module called for: tests.unit.common.collections.test_forms [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_forms.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_forms.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: os
              obj: <module 'os' (frozen)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: uuid
              obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: Generator
              obj: typing.Generator
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: patch
              obj: <function patch at 0x1069e1080>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: Flask
              obj: <class 'flask.app.Flask'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: GovCharacterCount
              obj: <class 'govuk_frontend_wtf.wtforms_widgets.GovCharacterCount'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: GovDateInput
              obj: <class 'govuk_frontend_wtf.wtforms_widgets.GovDateInput'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: GovRadioInput
              obj: <class 'govuk_frontend_wtf.wtforms_widgets.GovRadioInput'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: GovTextArea
              obj: <class 'govuk_frontend_wtf.wtforms_widgets.GovTextArea'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: GovTextInput
              obj: <class 'govuk_frontend_wtf.wtforms_widgets.GovTextInput'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: MultiDict
              obj: <class 'werkzeug.datastructures.structures.MultiDict'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: DateField
              obj: <class 'wtforms.fields.datetime.DateField'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: RadioField
              obj: <class 'wtforms.fields.choices.RadioField'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: SelectMultipleField
              obj: <class 'wtforms.fields.choices.SelectMultipleField'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: IntegerField
              obj: <class 'wtforms.fields.numeric.IntegerField'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: EmailField
              obj: <class 'wtforms.fields.simple.EmailField'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: StringField
              obj: <class 'wtforms.fields.simple.StringField'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: DataRequired
              obj: <class 'wtforms.validators.DataRequired'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: Email
              obj: <class 'wtforms.validators.Email'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: InputRequired
              obj: <class 'wtforms.validators.InputRequired'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: create_app
              obj: <function create_app at 0x116a85620>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: build_question_form
              obj: <function build_question_form at 0x117b584a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: Question
              obj: <class 'app.common.data.models.Question'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: QuestionDataType
              obj: <enum 'QuestionDataType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: QuestionPresentationOptions
              obj: <class 'app.common.data.types.QuestionPresentationOptions'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: ExpressionContext
              obj: <class 'app.common.expressions.ExpressionContext'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: MHCLGCheckboxesInput
              obj: <class 'app.common.forms.fields.MHCLGCheckboxesInput'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: MHCLGRadioInput
              obj: <class 'app.common.forms.fields.MHCLGRadioInput'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: URLWithoutProtocol
              obj: <class 'app.common.forms.validators.URLWithoutProtocol'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: FundingServiceTestClient
              obj: <class 'tests.conftest.FundingServiceTestClient'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: build_db_config
              obj: <function build_db_config at 0x1174553a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: EC
              obj: <class 'app.common.expressions.ExpressionContext'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: TestBuildQuestionForm
              obj: <class 'tests.unit.common.collections.test_forms.TestBuildQuestionForm'>
          finish pytest_pycollect_makeitem --> <Class TestBuildQuestionForm> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections/test_forms.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestBuildQuestionForm> [collection]
        pytest_collectstart [hook]
            collector: <Class TestBuildQuestionForm>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestBuildQuestionForm>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildQuestionForm>
              name: test_question_attached_by_id
              obj: <function TestBuildQuestionForm.test_question_attached_by_id at 0x1324e37e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1bd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_attached_by_id>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildQuestionForm>
              name: test_multiple_questions_attached_by_id
              obj: <function TestBuildQuestionForm.test_multiple_questions_attached_by_id at 0x1324e2a20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e3b10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_multiple_questions_attached_by_id>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildQuestionForm>
              name: TestBuildFormContext
              obj: <class 'tests.unit.common.collections.test_forms.TestBuildQuestionForm.TestBuildFormContext'>
          finish pytest_pycollect_makeitem --> <Class TestBuildFormContext> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildQuestionForm>
              name: test_expected_fields_exist
              obj: <function TestBuildQuestionForm.test_expected_fields_exist at 0x132788900>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327887d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_expected_fields_exist>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildQuestionForm>
              name: test_the_next_test_exhausts_QuestionDataType
              obj: <function TestBuildQuestionForm.test_the_next_test_exhausts_QuestionDataType at 0x132788b80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327885f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_the_next_test_exhausts_QuestionDataType>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildQuestionForm>
              name: QPO
              obj: <class 'app.common.data.types.QuestionPresentationOptions'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildQuestionForm>
              name: test_expected_field_types
              obj: <function TestBuildQuestionForm.test_expected_field_types at 0x132788c20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132788eb0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Single line of text
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=None prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.simple.StringField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'govuk_frontend_wtf.wtforms_widgets.GovTextInput'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [<class 'wtforms.validators.DataRequired'>]
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Multiple lines of text
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=None prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.simple.StringField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'govuk_frontend_wtf.wtforms_widgets.GovTextArea'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [<class 'wtforms.validators.DataRequired'>]
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Multiple lines of text
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=500 prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.simple.StringField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'govuk_frontend_wtf.wtforms_widgets.GovCharacterCount'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [<class 'wtforms.validators.DataRequired'>]
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Whole number
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=None prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.numeric.IntegerField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'govuk_frontend_wtf.wtforms_widgets.GovTextInput'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [<class 'wtforms.validators.InputRequired'>]
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Yes or no
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=None prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.choices.RadioField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'govuk_frontend_wtf.wtforms_widgets.GovRadioInput'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [<class 'wtforms.validators.InputRequired'>]
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Select one from a list (radios)
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=None prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.choices.RadioField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.forms.fields.MHCLGRadioInput'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: []
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Email address
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=None prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.simple.EmailField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'govuk_frontend_wtf.wtforms_widgets.GovTextInput'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [<class 'wtforms.validators.DataRequired'>, <class 'wtforms.validators.Email'>]
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Website address (URL)
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=None prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.simple.StringField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'govuk_frontend_wtf.wtforms_widgets.GovTextInput'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [<class 'wtforms.validators.DataRequired'>, <class 'app.common.forms.validators.URLWithoutProtocol'>]
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Select one or more from a list (checkboxes)
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=None prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.choices.SelectMultipleField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.forms.fields.MHCLGCheckboxesInput'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [<class 'wtforms.validators.DataRequired'>]
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: A date
                  argname: data_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: last_data_source_item_is_distinct_from_others=None rows=None word_limit=None prefix=None suffix=None width=None show_questions_on_the_same_page=None
                  argname: presentation_options
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'wtforms.fields.datetime.DateField'>
                  argname: expected_field_type
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'govuk_frontend_wtf.wtforms_widgets.GovDateInput'>
                  argname: expected_widget
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: [<class 'wtforms.validators.DataRequired'>]
                  argname: expected_validators
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_expected_field_types[Single line of text-presentation_options0-StringField-GovTextInput-expected_validators0]>, <Function test_expected_field_types[Multiple lines of text-presentation_options1-StringField-GovTextArea-expected_validators1]>, <Function test_expected_field_types[Multiple lines of text-presentation_options2-StringField-GovCharacterCount-expected_validators2]>, <Function test_expected_field_types[Whole number-presentation_options3-IntegerField-GovTextInput-expected_validators3]>, <Function test_expected_field_types[Yes or no-presentation_options4-RadioField-GovRadioInput-expected_validators4]>, <Function test_expected_field_types[Select one from a list (radios)-presentation_options5-RadioField-MHCLGRadioInput-expected_validators5]>, <Function test_expected_field_types[Email address-presentation_options6-EmailField-GovTextInput-expected_validators6]>, <Function test_expected_field_types[Website address (URL)-presentation_options7-StringField-GovTextInput-expected_validators7]>, <Function test_expected_field_types[Select one or more from a list (checkboxes)-presentation_options8-SelectMultipleField-MHCLGCheckboxesInput-expected_validators8]>, <Function test_expected_field_types[A date-presentation_options9-DateField-GovDateInput-expected_validators9]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildQuestionForm>
              name: test_break_if_new_question_types_added
              obj: <function TestBuildQuestionForm.test_break_if_new_question_types_added at 0x132788cc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132789090>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_break_if_new_question_types_added>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections/test_forms.py::TestBuildQuestionForm' lenresult=16 outcome='passed'> [hook]
      genitems <Function test_question_attached_by_id> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_attached_by_id>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_multiple_questions_attached_by_id> [collection]
        pytest_itemcollected [hook]
            item: <Function test_multiple_questions_attached_by_id>
        finish pytest_itemcollected --> [] [hook]
      genitems <Class TestBuildFormContext> [collection]
        pytest_collectstart [hook]
            collector: <Class TestBuildFormContext>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestBuildFormContext>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildFormContext>
              name: app
              obj: <pytest_fixture(<function TestBuildQuestionForm.TestBuildFormContext.app at 0x1327889a0>)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildFormContext>
              name: test_build_form_context
              obj: <function TestBuildQuestionForm.TestBuildFormContext.test_build_form_context at 0x132788ae0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132788190>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_build_form_context>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections/test_forms.py::TestBuildQuestionForm::TestBuildFormContext' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_build_form_context> [collection]
        pytest_itemcollected [hook]
            item: <Function test_build_form_context>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections/test_forms.py::TestBuildQuestionForm::TestBuildFormContext' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Function test_expected_fields_exist> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_fields_exist>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_the_next_test_exhausts_QuestionDataType> [collection]
        pytest_itemcollected [hook]
            item: <Function test_the_next_test_exhausts_QuestionDataType>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[Single line of text-presentation_options0-StringField-GovTextInput-expected_validators0]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[Single line of text-presentation_options0-StringField-GovTextInput-expected_validators0]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[Multiple lines of text-presentation_options1-StringField-GovTextArea-expected_validators1]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[Multiple lines of text-presentation_options1-StringField-GovTextArea-expected_validators1]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[Multiple lines of text-presentation_options2-StringField-GovCharacterCount-expected_validators2]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[Multiple lines of text-presentation_options2-StringField-GovCharacterCount-expected_validators2]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[Whole number-presentation_options3-IntegerField-GovTextInput-expected_validators3]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[Whole number-presentation_options3-IntegerField-GovTextInput-expected_validators3]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[Yes or no-presentation_options4-RadioField-GovRadioInput-expected_validators4]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[Yes or no-presentation_options4-RadioField-GovRadioInput-expected_validators4]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[Select one from a list (radios)-presentation_options5-RadioField-MHCLGRadioInput-expected_validators5]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[Select one from a list (radios)-presentation_options5-RadioField-MHCLGRadioInput-expected_validators5]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[Email address-presentation_options6-EmailField-GovTextInput-expected_validators6]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[Email address-presentation_options6-EmailField-GovTextInput-expected_validators6]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[Website address (URL)-presentation_options7-StringField-GovTextInput-expected_validators7]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[Website address (URL)-presentation_options7-StringField-GovTextInput-expected_validators7]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[Select one or more from a list (checkboxes)-presentation_options8-SelectMultipleField-MHCLGCheckboxesInput-expected_validators8]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[Select one or more from a list (checkboxes)-presentation_options8-SelectMultipleField-MHCLGCheckboxesInput-expected_validators8]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_expected_field_types[A date-presentation_options9-DateField-GovDateInput-expected_validators9]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_expected_field_types[A date-presentation_options9-DateField-GovDateInput-expected_validators9]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_break_if_new_question_types_added> [collection]
        pytest_itemcollected [hook]
            item: <Function test_break_if_new_question_types_added>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections/test_forms.py::TestBuildQuestionForm' lenresult=16 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections/test_forms.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_runner.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_runner.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_runner.py>
        find_module called for: tests.unit.common.collections.test_runner [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_runner.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_runner.py') [assertion]
        early skip of rewriting module: app.common.collections.runner [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: Mock
              obj: <class 'unittest.mock.Mock'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: FormRunner
              obj: <class 'app.common.collections.runner.FormRunner'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: TextSingleLineAnswer
              obj: <class 'app.common.collections.types.TextSingleLineAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: Expression
              obj: <class 'app.common.data.models.Expression'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: FormRunnerState
              obj: <enum 'FormRunnerState'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: QuestionDataType
              obj: <enum 'QuestionDataType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: QuestionPresentationOptions
              obj: <class 'app.common.data.types.QuestionPresentationOptions'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: GreaterThan
              obj: <class 'app.common.expressions.managed.GreaterThan'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: SubmissionHelper
              obj: <class 'app.common.helpers.collections.SubmissionHelper'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_runner.py>
              name: TestFormRunner
              obj: <class 'tests.unit.common.collections.test_runner.TestFormRunner'>
          finish pytest_pycollect_makeitem --> <Class TestFormRunner> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections/test_runner.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestFormRunner> [collection]
        pytest_collectstart [hook]
            collector: <Class TestFormRunner>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestFormRunner>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_form_runner_loads_and_sets_context
              obj: <function TestFormRunner.test_form_runner_loads_and_sets_context at 0x132789120>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132788870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_runner_loads_and_sets_context>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_form_runner_loads_and_sets_context_for_same_page_group
              obj: <function TestFormRunner.test_form_runner_loads_and_sets_context_for_same_page_group at 0x132789260>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327887d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_runner_loads_and_sets_context_for_same_page_group>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_form_runner_correctly_configures_dynamic_question_form
              obj: <function TestFormRunner.test_form_runner_correctly_configures_dynamic_question_form at 0x13278a020>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327885f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_runner_correctly_configures_dynamic_question_form>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_form_runner_only_configures_visible_questions_for_same_page
              obj: <function TestFormRunner.test_form_runner_only_configures_visible_questions_for_same_page at 0x13278a0c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132788230>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_runner_only_configures_visible_questions_for_same_page>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_form_runner_correctly_configured_dynamic_question_form_for_same_page
              obj: <function TestFormRunner.test_form_runner_correctly_configured_dynamic_question_form_for_same_page at 0x13278a160>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278a530>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_form_runner_correctly_configured_dynamic_question_form_for_same_page>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_calls_mapped_urls_with_the_right_information
              obj: <function TestFormRunner.test_calls_mapped_urls_with_the_right_information at 0x13278a200>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278a710>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_calls_mapped_urls_with_the_right_information>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_next_url
              obj: <function TestFormRunner.test_next_url at 0x13278a2a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278a850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_next_url>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question
              obj: <function TestFormRunner.test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question at 0x13278a340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278a8f0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: question
                  argname: source
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: check-your-answers
                  argname: source
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[question]>, <Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[check-your-answers]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_back_url
              obj: <function TestFormRunner.test_back_url at 0x13278a3e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278aad0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_back_url>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: test_next_back_url_for_group
              obj: <function TestFormRunner.test_next_back_url_for_group at 0x13278a480>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278ad50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_next_back_url_for_group>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormRunner>
              name: TestUrlConfig
              obj: <class 'tests.unit.common.collections.test_runner.TestFormRunner.TestUrlConfig'>
          finish pytest_pycollect_makeitem --> <Class TestUrlConfig> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections/test_runner.py::TestFormRunner' lenresult=12 outcome='passed'> [hook]
      genitems <Function test_form_runner_loads_and_sets_context> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_runner_loads_and_sets_context>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_form_runner_loads_and_sets_context_for_same_page_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_runner_loads_and_sets_context_for_same_page_group>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_form_runner_correctly_configures_dynamic_question_form> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_runner_correctly_configures_dynamic_question_form>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_form_runner_only_configures_visible_questions_for_same_page> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_runner_only_configures_visible_questions_for_same_page>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_form_runner_correctly_configured_dynamic_question_form_for_same_page> [collection]
        pytest_itemcollected [hook]
            item: <Function test_form_runner_correctly_configured_dynamic_question_form_for_same_page>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_calls_mapped_urls_with_the_right_information> [collection]
        pytest_itemcollected [hook]
            item: <Function test_calls_mapped_urls_with_the_right_information>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_next_url> [collection]
        pytest_itemcollected [hook]
            item: <Function test_next_url>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[question]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[question]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[check-your-answers]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[check-your-answers]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_back_url> [collection]
        pytest_itemcollected [hook]
            item: <Function test_back_url>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_next_back_url_for_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_next_back_url_for_group>
        finish pytest_itemcollected --> [] [hook]
      genitems <Class TestUrlConfig> [collection]
        pytest_collectstart [hook]
            collector: <Class TestUrlConfig>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestUrlConfig>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestUrlConfig>
              name: test_runners_url_map_resolves
              obj: <function TestFormRunner.TestUrlConfig.test_runners_url_map_resolves at 0x13278a5c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327887d0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.runner.DGFFormRunner'>
                  argname: runner_class
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.runner.AGFFormRunner'>
                  argname: runner_class
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_runners_url_map_resolves[DGFFormRunner]>, <Function test_runners_url_map_resolves[AGFFormRunner]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections/test_runner.py::TestFormRunner::TestUrlConfig' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_runners_url_map_resolves[DGFFormRunner]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_runners_url_map_resolves[DGFFormRunner]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_runners_url_map_resolves[AGFFormRunner]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_runners_url_map_resolves[AGFFormRunner]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections/test_runner.py::TestFormRunner::TestUrlConfig' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections/test_runner.py::TestFormRunner' lenresult=12 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections/test_runner.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_types.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_types.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_types.py>
        find_module called for: tests.unit.common.collections.test_types [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_types.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/collections/test_types.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: datetime
              obj: <module 'datetime' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/datetime.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: itertools
              obj: <module 'itertools' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: DateAnswer
              obj: <class 'app.common.collections.types.DateAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: EmailAnswer
              obj: <class 'app.common.collections.types.EmailAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: IntegerAnswer
              obj: <class 'app.common.collections.types.IntegerAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: SingleChoiceFromListAnswer
              obj: <class 'app.common.collections.types.SingleChoiceFromListAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: SubmissionAnswerBaseModel
              obj: <class 'app.common.collections.types.SubmissionAnswerBaseModel'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: SubmissionAnswerRootModel
              obj: <class 'app.common.collections.types.SubmissionAnswerRootModel'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: TextMultiLineAnswer
              obj: <class 'app.common.collections.types.TextMultiLineAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: TextSingleLineAnswer
              obj: <class 'app.common.collections.types.TextSingleLineAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: UrlAnswer
              obj: <class 'app.common.collections.types.UrlAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: YesNoAnswer
              obj: <class 'app.common.collections.types.YesNoAnswer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: test_all_answer_types_tested
              obj: <function test_all_answer_types_tested at 0x13278a8e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1324e1bd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_all_answer_types_tested>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: TestSubmissionAnswerRootModels
              obj: <class 'tests.unit.common.collections.test_types.TestSubmissionAnswerRootModels'>
          finish pytest_pycollect_makeitem --> <Class TestSubmissionAnswerRootModels> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_types.py>
              name: TestSubmissionAnswerBaseModels
              obj: <class 'tests.unit.common.collections.test_types.TestSubmissionAnswerBaseModels'>
          finish pytest_pycollect_makeitem --> <Class TestSubmissionAnswerBaseModels> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections/test_types.py' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_all_answer_types_tested> [collection]
        pytest_itemcollected [hook]
            item: <Function test_all_answer_types_tested>
        finish pytest_itemcollected --> [] [hook]
      genitems <Class TestSubmissionAnswerRootModels> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSubmissionAnswerRootModels>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSubmissionAnswerRootModels>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionAnswerRootModels>
              name: test_get_value_for_submission
              obj: <function TestSubmissionAnswerRootModels.test_get_value_for_submission at 0x13278af20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278a670>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.TextSingleLineAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.TextMultiLineAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
there
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
there
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.EmailAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: name@example.com
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: name@example.com
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.UrlAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://www.gov.uk
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://www.gov.uk
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.YesNoAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Yes
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_value_for_submission[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_submission[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_submission[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_submission[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_submission[YesNoAnswer-True-Yes]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionAnswerRootModels>
              name: test_get_value_for_form
              obj: <function TestSubmissionAnswerRootModels.test_get_value_for_form at 0x13278afc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278a670>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.TextSingleLineAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.TextMultiLineAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
there
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
there
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.EmailAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: name@example.com
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: name@example.com
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.UrlAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://www.gov.uk
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://www.gov.uk
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.YesNoAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Yes
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_value_for_form[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_form[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_form[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_form[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_form[YesNoAnswer-True-Yes]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionAnswerRootModels>
              name: test_get_value_for_expression
              obj: <function TestSubmissionAnswerRootModels.test_get_value_for_expression at 0x13278b060>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327887d0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.TextSingleLineAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.TextMultiLineAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
there
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
there
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.EmailAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: name@example.com
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: name@example.com
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.UrlAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://www.gov.uk
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://www.gov.uk
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.YesNoAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Yes
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_value_for_expression[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_expression[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_expression[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_expression[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_expression[YesNoAnswer-True-Yes]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionAnswerRootModels>
              name: test_get_value_for_text_export
              obj: <function TestSubmissionAnswerRootModels.test_get_value_for_text_export at 0x13278b100>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132788ff0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.TextSingleLineAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.TextMultiLineAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
there
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello
there
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.EmailAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: name@example.com
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: name@example.com
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.UrlAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://www.gov.uk
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://www.gov.uk
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.YesNoAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Yes
                  argname: expected_text_export
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_value_for_text_export[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_text_export[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_text_export[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_text_export[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_text_export[YesNoAnswer-True-Yes]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionAnswerRootModels>
              name: pytestmark
              obj: [Mark(name='parametrize', args=('model, data, expected_text_export', ((<class 'app.common.collections.types.TextSingleLineAnswer'>, 'hello', 'hello'), (<class 'app.common.collections.types.TextMultiLineAnswer'>, 'hello\nthere', 'hello\nthere'), (<class 'app.common.collections.types.EmailAnswer'>, 'name@example.com', 'name@example.com'), (<class 'app.common.collections.types.UrlAnswer'>, 'https://www.gov.uk', 'https://www.gov.uk'), (<class 'app.common.collections.types.YesNoAnswer'>, True, 'Yes'))), kwargs={})]
          finish pytest_pycollect_makeitem --> None [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections/test_types.py::TestSubmissionAnswerRootModels' lenresult=20 outcome='passed'> [hook]
      genitems <Function test_get_value_for_submission[TextSingleLineAnswer-hello-hello]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[TextSingleLineAnswer-hello-hello]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_submission[TextMultiLineAnswer-hello\nthere-hello\nthere]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[TextMultiLineAnswer-hello\nthere-hello\nthere]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_submission[EmailAnswer-name@example.com-name@example.com]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[EmailAnswer-name@example.com-name@example.com]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_submission[UrlAnswer-https://www.gov.uk-https://www.gov.uk]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_submission[YesNoAnswer-True-Yes]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[YesNoAnswer-True-Yes]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_form[TextSingleLineAnswer-hello-hello]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_form[TextSingleLineAnswer-hello-hello]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_form[TextMultiLineAnswer-hello\nthere-hello\nthere]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_form[TextMultiLineAnswer-hello\nthere-hello\nthere]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_form[EmailAnswer-name@example.com-name@example.com]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_form[EmailAnswer-name@example.com-name@example.com]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_form[UrlAnswer-https://www.gov.uk-https://www.gov.uk]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_form[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_form[YesNoAnswer-True-Yes]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_form[YesNoAnswer-True-Yes]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_expression[TextSingleLineAnswer-hello-hello]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_expression[TextSingleLineAnswer-hello-hello]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_expression[TextMultiLineAnswer-hello\nthere-hello\nthere]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_expression[TextMultiLineAnswer-hello\nthere-hello\nthere]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_expression[EmailAnswer-name@example.com-name@example.com]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_expression[EmailAnswer-name@example.com-name@example.com]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_expression[UrlAnswer-https://www.gov.uk-https://www.gov.uk]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_expression[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_expression[YesNoAnswer-True-Yes]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_expression[YesNoAnswer-True-Yes]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[TextSingleLineAnswer-hello-hello]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[TextSingleLineAnswer-hello-hello]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[TextMultiLineAnswer-hello\nthere-hello\nthere]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[TextMultiLineAnswer-hello\nthere-hello\nthere]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[EmailAnswer-name@example.com-name@example.com]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[EmailAnswer-name@example.com-name@example.com]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[UrlAnswer-https://www.gov.uk-https://www.gov.uk]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[YesNoAnswer-True-Yes]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[YesNoAnswer-True-Yes]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections/test_types.py::TestSubmissionAnswerRootModels' lenresult=20 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestSubmissionAnswerBaseModels> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSubmissionAnswerBaseModels>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSubmissionAnswerBaseModels>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionAnswerBaseModels>
              name: test_get_value_for_submission
              obj: <function TestSubmissionAnswerBaseModels.test_get_value_for_submission at 0x13278ae80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278bcf0>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.IntegerAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 50}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 50}
                  argname: submission_data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.IntegerAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 50, 'prefix': '£'}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 50, 'prefix': '£'}
                  argname: submission_data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.IntegerAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 50, 'suffix': 'lbs'}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 50, 'suffix': 'lbs'}
                  argname: submission_data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.SingleChoiceFromListAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'key': 'key', 'label': 'label'}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'key': 'key', 'label': 'label'}
                  argname: submission_data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.DateAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'answer': datetime.date(2023, 10, 5)}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'answer': '2023-10-05'}
                  argname: submission_data
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_value_for_submission[IntegerAnswer-data0-submission_data0]>, <Function test_get_value_for_submission[IntegerAnswer-data1-submission_data1]>, <Function test_get_value_for_submission[IntegerAnswer-data2-submission_data2]>, <Function test_get_value_for_submission[SingleChoiceFromListAnswer-data3-submission_data3]>, <Function test_get_value_for_submission[DateAnswer-data4-submission_data4]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionAnswerBaseModels>
              name: test_get_value_for_form
              obj: <function TestSubmissionAnswerBaseModels.test_get_value_for_form at 0x13278b1a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278bc50>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.IntegerAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 50}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 50
                  argname: form_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.SingleChoiceFromListAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'key': 'key', 'label': 'label'}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: key
                  argname: form_value
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_value_for_form[IntegerAnswer-data0-50]>, <Function test_get_value_for_form[SingleChoiceFromListAnswer-data1-key]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionAnswerBaseModels>
              name: test_get_value_for_expression
              obj: <function TestSubmissionAnswerBaseModels.test_get_value_for_expression at 0x13278b240>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278bf70>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.IntegerAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 50}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 50
                  argname: expression_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.SingleChoiceFromListAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'key': 'key', 'label': 'label'}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: key
                  argname: expression_value
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_value_for_expression[IntegerAnswer-data0-50]>, <Function test_get_value_for_expression[SingleChoiceFromListAnswer-data1-key]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionAnswerBaseModels>
              name: test_get_value_for_text_export
              obj: <function TestSubmissionAnswerBaseModels.test_get_value_for_text_export at 0x13278b2e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278a670>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.IntegerAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 50}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 50
                  argname: text_export_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.IntegerAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 1000000, 'prefix': '£'}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: £1,000,000
                  argname: text_export_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.IntegerAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'value': 1000000, 'suffix': 'lbs'}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1,000,000lbs
                  argname: text_export_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.SingleChoiceFromListAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'key': 'key', 'label': 'label'}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: label
                  argname: text_export_value
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <class 'app.common.collections.types.DateAnswer'>
                  argname: model
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: {'answer': datetime.date(2023, 10, 5)}
                  argname: data
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2023-10-05
                  argname: text_export_value
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_value_for_text_export[IntegerAnswer-data0-50]>, <Function test_get_value_for_text_export[IntegerAnswer-data1-\xa31,000,000]>, <Function test_get_value_for_text_export[IntegerAnswer-data2-1,000,000lbs]>, <Function test_get_value_for_text_export[SingleChoiceFromListAnswer-data3-label]>, <Function test_get_value_for_text_export[DateAnswer-data4-2023-10-05]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/collections/test_types.py::TestSubmissionAnswerBaseModels' lenresult=14 outcome='passed'> [hook]
      genitems <Function test_get_value_for_submission[IntegerAnswer-data0-submission_data0]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[IntegerAnswer-data0-submission_data0]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_submission[IntegerAnswer-data1-submission_data1]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[IntegerAnswer-data1-submission_data1]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_submission[IntegerAnswer-data2-submission_data2]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[IntegerAnswer-data2-submission_data2]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_submission[SingleChoiceFromListAnswer-data3-submission_data3]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[SingleChoiceFromListAnswer-data3-submission_data3]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_submission[DateAnswer-data4-submission_data4]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_submission[DateAnswer-data4-submission_data4]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_form[IntegerAnswer-data0-50]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_form[IntegerAnswer-data0-50]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_form[SingleChoiceFromListAnswer-data1-key]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_form[SingleChoiceFromListAnswer-data1-key]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_expression[IntegerAnswer-data0-50]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_expression[IntegerAnswer-data0-50]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_expression[SingleChoiceFromListAnswer-data1-key]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_expression[SingleChoiceFromListAnswer-data1-key]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[IntegerAnswer-data0-50]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[IntegerAnswer-data0-50]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[IntegerAnswer-data1-\xa31,000,000]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[IntegerAnswer-data1-\xa31,000,000]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[IntegerAnswer-data2-1,000,000lbs]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[IntegerAnswer-data2-1,000,000lbs]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[SingleChoiceFromListAnswer-data3-label]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[SingleChoiceFromListAnswer-data3-label]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_value_for_text_export[DateAnswer-data4-2023-10-05]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_value_for_text_export[DateAnswer-data4-2023-10-05]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections/test_types.py::TestSubmissionAnswerBaseModels' lenresult=14 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections/test_types.py' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/collections' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Dir data> [collection]
        pytest_collectstart [hook]
            collector: <Dir data>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Dir data>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data/test_models.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data/test_models.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Dir data>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data/test_models.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data/test_models.py
            pytest_pycollect_makemodule [hook]
                parent: <Dir data>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data/test_models.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/data/test_models.py
            finish pytest_pycollect_makemodule --> <Module test_models.py> [hook]
          finish pytest_collect_file --> [<Module test_models.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/data' lenresult=1 outcome='passed'> [hook]
      genitems <Module test_models.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_models.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_models.py>
        find_module called for: test_models [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/data/test_models.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/data/test_models.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: get_ordered_nested_components
              obj: <function get_ordered_nested_components at 0x114f69440>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_models.py>
              name: TestNestedComponents
              obj: <class 'test_models.TestNestedComponents'>
          finish pytest_pycollect_makeitem --> <Class TestNestedComponents> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/data/test_models.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestNestedComponents> [collection]
        pytest_collectstart [hook]
            collector: <Class TestNestedComponents>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestNestedComponents>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestNestedComponents>
              name: test_get_components_empty
              obj: <function TestNestedComponents.test_get_components_empty at 0x13278b880>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278b930>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_components_empty>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestNestedComponents>
              name: test_get_components_flat
              obj: <function TestNestedComponents.test_get_components_flat at 0x13278b9c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132758370>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_components_flat>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestNestedComponents>
              name: test_get_components_nested
              obj: <function TestNestedComponents.test_get_components_nested at 0x132758040>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327584b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_components_nested>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestNestedComponents>
              name: test_get_components_filters_nested
              obj: <function TestNestedComponents.test_get_components_filters_nested at 0x1327580e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327585f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_components_filters_nested>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestNestedComponents>
              name: test_get_components_nested_orders
              obj: <function TestNestedComponents.test_get_components_nested_orders at 0x132758180>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132758730>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_components_nested_orders>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestNestedComponents>
              name: test_get_components_nested_depth_5
              obj: <function TestNestedComponents.test_get_components_nested_depth_5 at 0x132758220>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132758870>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_get_components_nested_depth_5>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/data/test_models.py::TestNestedComponents' lenresult=6 outcome='passed'> [hook]
      genitems <Function test_get_components_empty> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_components_empty>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_components_flat> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_components_flat>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_components_nested> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_components_nested>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_components_filters_nested> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_components_filters_nested>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_components_nested_orders> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_components_nested_orders>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_get_components_nested_depth_5> [collection]
        pytest_itemcollected [hook]
            item: <Function test_get_components_nested_depth_5>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/data/test_models.py::TestNestedComponents' lenresult=6 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/data/test_models.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/data' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package expressions> [collection]
        pytest_collectstart [hook]
            collector: <Package expressions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package expressions>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package expressions>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_expressions.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_expressions.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package expressions>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_expressions.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_expressions.py
            pytest_pycollect_makemodule [hook]
                parent: <Package expressions>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_expressions.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_expressions.py
            finish pytest_pycollect_makemodule --> <Module test_expressions.py> [hook]
          finish pytest_collect_file --> [<Module test_expressions.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_forms.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_forms.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package expressions>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_forms.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_forms.py
            pytest_pycollect_makemodule [hook]
                parent: <Package expressions>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_forms.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_forms.py
            finish pytest_pycollect_makemodule --> <Module test_forms.py> [hook]
          finish pytest_collect_file --> [<Module test_forms.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/expressions' lenresult=2 outcome='passed'> [hook]
      genitems <Module test_expressions.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_expressions.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_expressions.py>
        early skip of rewriting module: tests.unit.common.expressions [assertion]
        find_module called for: tests.unit.common.expressions.test_expressions [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_expressions.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_expressions.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: Mock
              obj: <class 'unittest.mock.Mock'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: immutabledict
              obj: <class 'immutabledict.immutabledict'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: Expression
              obj: <class 'app.common.data.models.Expression'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: DisallowedExpression
              obj: <class 'app.common.expressions.DisallowedExpression'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: ExpressionContext
              obj: <class 'app.common.expressions.ExpressionContext'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: InvalidEvaluationResult
              obj: <class 'app.common.expressions.InvalidEvaluationResult'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: UndefinedVariableInExpression
              obj: <class 'app.common.expressions.UndefinedVariableInExpression'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: _evaluate_expression_with_context
              obj: <function _evaluate_expression_with_context at 0x114fd2c00>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: evaluate
              obj: <function evaluate at 0x114fe9a80>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: TestInternalEvaluateExpressionWithContext
              obj: <class 'tests.unit.common.expressions.test_expressions.TestInternalEvaluateExpressionWithContext'>
          finish pytest_pycollect_makeitem --> <Class TestInternalEvaluateExpressionWithContext> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_expressions.py>
              name: TestEvaluate
              obj: <class 'tests.unit.common.expressions.test_expressions.TestEvaluate'>
          finish pytest_pycollect_makeitem --> <Class TestEvaluate> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/expressions/test_expressions.py' lenresult=2 outcome='passed'> [hook]
      genitems <Class TestInternalEvaluateExpressionWithContext> [collection]
        pytest_collectstart [hook]
            collector: <Class TestInternalEvaluateExpressionWithContext>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestInternalEvaluateExpressionWithContext>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInternalEvaluateExpressionWithContext>
              name: test_allowed_expressions
              obj: <function TestInternalEvaluateExpressionWithContext.test_allowed_expressions at 0x1330958a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x132758370>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1330674d0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132716710>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132716990>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132477e10>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x133090180>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 0
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x115af2f90>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 2
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1324ffac0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 5
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1324ffbd0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x133053050>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x133052f50>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1330435c0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x133041f40>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1327df230>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: True
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x133098d70>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: False
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x13225b5f0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: 1
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x13243fe90>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: potato
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_allowed_expressions[expression0-False]>, <Function test_allowed_expressions[expression1-1]>, <Function test_allowed_expressions[expression2-True]>, <Function test_allowed_expressions[expression3-2]>, <Function test_allowed_expressions[expression4-0]>, <Function test_allowed_expressions[expression5-2]>, <Function test_allowed_expressions[expression6-5]>, <Function test_allowed_expressions[expression7-True]>, <Function test_allowed_expressions[expression8-False]>, <Function test_allowed_expressions[expression9-True]>, <Function test_allowed_expressions[expression10-False]>, <Function test_allowed_expressions[expression11-False]>, <Function test_allowed_expressions[expression12-True]>, <Function test_allowed_expressions[expression13-False]>, <Function test_allowed_expressions[expression14-1]>, <Function test_allowed_expressions[expression15-potato]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInternalEvaluateExpressionWithContext>
              name: test_disallowed_expressions
              obj: <function TestInternalEvaluateExpressionWithContext.test_disallowed_expressions at 0x133095d00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278bb10>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x13243f950>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x13224d020>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x13224d0d0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x133095950>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1330959f0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x13303e2a0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1323965d0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132394550>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1322a6dd0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1322a6eb0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132722e10>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132722ed0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132722f90>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132723050>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132723110>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1327231d0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132723290>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132723350>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132723410>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1327234d0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132723590>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132723650>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x132723710>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <app.common.data.models.Expression object at 0x1327237d0>
                  argname: expression
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_disallowed_expressions[expression0]>, <Function test_disallowed_expressions[expression1]>, <Function test_disallowed_expressions[expression2]>, <Function test_disallowed_expressions[expression3]>, <Function test_disallowed_expressions[expression4]>, <Function test_disallowed_expressions[expression5]>, <Function test_disallowed_expressions[expression6]>, <Function test_disallowed_expressions[expression7]>, <Function test_disallowed_expressions[expression8]>, <Function test_disallowed_expressions[expression9]>, <Function test_disallowed_expressions[expression10]>, <Function test_disallowed_expressions[expression11]>, <Function test_disallowed_expressions[expression12]>, <Function test_disallowed_expressions[expression13]>, <Function test_disallowed_expressions[expression14]>, <Function test_disallowed_expressions[expression15]>, <Function test_disallowed_expressions[expression16]>, <Function test_disallowed_expressions[expression17]>, <Function test_disallowed_expressions[expression18]>, <Function test_disallowed_expressions[expression19]>, <Function test_disallowed_expressions[expression20]>, <Function test_disallowed_expressions[expression21]>, <Function test_disallowed_expressions[expression22]>, <Function test_disallowed_expressions[expression23]>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestInternalEvaluateExpressionWithContext>
              name: test_unknown_variable
              obj: <function TestInternalEvaluateExpressionWithContext.test_unknown_variable at 0x133095da0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327582d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_unknown_variable>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/expressions/test_expressions.py::TestInternalEvaluateExpressionWithContext' lenresult=41 outcome='passed'> [hook]
      genitems <Function test_allowed_expressions[expression0-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression0-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression1-1]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression1-1]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression2-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression2-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression3-2]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression3-2]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression4-0]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression4-0]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression5-2]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression5-2]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression6-5]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression6-5]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression7-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression7-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression8-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression8-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression9-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression9-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression10-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression10-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression11-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression11-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression12-True]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression12-True]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression13-False]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression13-False]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression14-1]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression14-1]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_allowed_expressions[expression15-potato]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_allowed_expressions[expression15-potato]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression0]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression0]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression1]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression1]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression2]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression2]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression3]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression3]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression4]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression4]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression5]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression5]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression6]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression6]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression7]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression7]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression8]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression8]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression9]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression9]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression10]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression10]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression11]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression11]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression12]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression12]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression13]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression13]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression14]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression14]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression15]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression15]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression16]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression16]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression17]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression17]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression18]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression18]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression19]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression19]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression20]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression20]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression21]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression21]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression22]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression22]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_disallowed_expressions[expression23]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_disallowed_expressions[expression23]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_unknown_variable> [collection]
        pytest_itemcollected [hook]
            item: <Function test_unknown_variable>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/expressions/test_expressions.py::TestInternalEvaluateExpressionWithContext' lenresult=41 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestEvaluate> [collection]
        pytest_collectstart [hook]
            collector: <Class TestEvaluate>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestEvaluate>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEvaluate>
              name: test_ok_with_boolean_result
              obj: <function TestEvaluate.test_ok_with_boolean_result at 0x133095ee0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097e30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_ok_with_boolean_result>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEvaluate>
              name: test_additional_context
              obj: <function TestEvaluate.test_additional_context at 0x133095f80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097f70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_additional_context>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestEvaluate>
              name: test_raise_on_non_boolean_result
              obj: <function TestEvaluate.test_raise_on_non_boolean_result at 0x133096020>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330c40f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_raise_on_non_boolean_result>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/expressions/test_expressions.py::TestEvaluate' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_ok_with_boolean_result> [collection]
        pytest_itemcollected [hook]
            item: <Function test_ok_with_boolean_result>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_additional_context> [collection]
        pytest_itemcollected [hook]
            item: <Function test_additional_context>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_raise_on_non_boolean_result> [collection]
        pytest_itemcollected [hook]
            item: <Function test_raise_on_non_boolean_result>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/expressions/test_expressions.py::TestEvaluate' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/expressions/test_expressions.py' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_forms.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_forms.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_forms.py>
        find_module called for: tests.unit.common.expressions.test_forms [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_forms.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/expressions/test_forms.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: MultiDict
              obj: <class 'werkzeug.datastructures.structures.MultiDict'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: ExpressionType
              obj: <enum 'ExpressionType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: ManagedExpressionsEnum
              obj: <enum 'ManagedExpressionsEnum'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: QuestionDataType
              obj: <enum 'QuestionDataType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: build_managed_expression_form
              obj: <function build_managed_expression_form at 0x133074860>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: Between
              obj: <class 'app.common.expressions.managed.Between'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: TestBuildManagedExpressionForm
              obj: <class 'tests.unit.common.expressions.test_forms.TestBuildManagedExpressionForm'>
          finish pytest_pycollect_makeitem --> <Class TestBuildManagedExpressionForm> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/expressions/test_forms.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestBuildManagedExpressionForm> [collection]
        pytest_collectstart [hook]
            collector: <Class TestBuildManagedExpressionForm>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestBuildManagedExpressionForm>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildManagedExpressionForm>
              name: test_integer_data_type
              obj: <function TestBuildManagedExpressionForm.test_integer_data_type at 0x133095e40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133096210>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_integer_data_type>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildManagedExpressionForm>
              name: test_recognises_invalid_data_for_a_managed_expression
              obj: <function TestBuildManagedExpressionForm.test_recognises_invalid_data_for_a_managed_expression at 0x133096160>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330963f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_recognises_invalid_data_for_a_managed_expression>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestBuildManagedExpressionForm>
              name: test_can_build_a_managed_expression_from_valid_data
              obj: <function TestBuildManagedExpressionForm.test_can_build_a_managed_expression_from_valid_data at 0x1330962a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133096490>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_can_build_a_managed_expression_from_valid_data>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/expressions/test_forms.py::TestBuildManagedExpressionForm' lenresult=3 outcome='passed'> [hook]
      genitems <Function test_integer_data_type> [collection]
        pytest_itemcollected [hook]
            item: <Function test_integer_data_type>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_recognises_invalid_data_for_a_managed_expression> [collection]
        pytest_itemcollected [hook]
            item: <Function test_recognises_invalid_data_for_a_managed_expression>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_can_build_a_managed_expression_from_valid_data> [collection]
        pytest_itemcollected [hook]
            item: <Function test_can_build_a_managed_expression_from_valid_data>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/expressions/test_forms.py::TestBuildManagedExpressionForm' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/expressions/test_forms.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/expressions' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package forms> [collection]
        pytest_collectstart [hook]
            collector: <Package forms>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package forms>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package forms>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_fields.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_fields.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package forms>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_fields.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_fields.py
            pytest_pycollect_makemodule [hook]
                parent: <Package forms>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_fields.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_fields.py
            finish pytest_pycollect_makemodule --> <Module test_fields.py> [hook]
          finish pytest_collect_file --> [<Module test_fields.py>] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_validators.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_validators.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package forms>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_validators.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_validators.py
            pytest_pycollect_makemodule [hook]
                parent: <Package forms>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_validators.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_validators.py
            finish pytest_pycollect_makemodule --> <Module test_validators.py> [hook]
          finish pytest_collect_file --> [<Module test_validators.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/forms' lenresult=2 outcome='passed'> [hook]
      genitems <Module test_fields.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_fields.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_fields.py>
        early skip of rewriting module: tests.unit.common.forms [assertion]
        find_module called for: tests.unit.common.forms.test_fields [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_fields.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_fields.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: BeautifulSoup
              obj: <class 'bs4.BeautifulSoup'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: FlaskForm
              obj: <class 'flask_wtf.form.FlaskForm'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: RadioField
              obj: <class 'wtforms.fields.choices.RadioField'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: SelectMultipleField
              obj: <class 'wtforms.fields.choices.SelectMultipleField'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: DataRequired
              obj: <class 'wtforms.validators.DataRequired'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: MHCLGCheckboxesInput
              obj: <class 'app.common.forms.fields.MHCLGCheckboxesInput'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: MHCLGRadioInput
              obj: <class 'app.common.forms.fields.MHCLGRadioInput'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: TestMHCLGRadioInput
              obj: <class 'tests.unit.common.forms.test_fields.TestMHCLGRadioInput'>
          finish pytest_pycollect_makeitem --> <Class TestMHCLGRadioInput> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_fields.py>
              name: TestMHCLGCheckboxesInput
              obj: <class 'tests.unit.common.forms.test_fields.TestMHCLGCheckboxesInput'>
          finish pytest_pycollect_makeitem --> <Class TestMHCLGCheckboxesInput> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/forms/test_fields.py' lenresult=2 outcome='passed'> [hook]
      genitems <Class TestMHCLGRadioInput> [collection]
        pytest_collectstart [hook]
            collector: <Class TestMHCLGRadioInput>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestMHCLGRadioInput>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMHCLGRadioInput>
              name: test_standard_radios_are_not_divided
              obj: <function TestMHCLGRadioInput.test_standard_radios_are_not_divided at 0x133096480>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133096710>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_standard_radios_are_not_divided>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMHCLGRadioInput>
              name: test_divided_radios
              obj: <function TestMHCLGRadioInput.test_divided_radios at 0x133096340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133096b70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_divided_radios>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/forms/test_fields.py::TestMHCLGRadioInput' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_standard_radios_are_not_divided> [collection]
        pytest_itemcollected [hook]
            item: <Function test_standard_radios_are_not_divided>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_divided_radios> [collection]
        pytest_itemcollected [hook]
            item: <Function test_divided_radios>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/forms/test_fields.py::TestMHCLGRadioInput' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestMHCLGCheckboxesInput> [collection]
        pytest_collectstart [hook]
            collector: <Class TestMHCLGCheckboxesInput>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestMHCLGCheckboxesInput>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMHCLGCheckboxesInput>
              name: test_standard_checkboxes_are_not_divided
              obj: <function TestMHCLGCheckboxesInput.test_standard_checkboxes_are_not_divided at 0x1330960c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327582d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_standard_checkboxes_are_not_divided>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestMHCLGCheckboxesInput>
              name: test_divided_checkboxes
              obj: <function TestMHCLGCheckboxesInput.test_divided_checkboxes at 0x1330965c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133096210>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_divided_checkboxes>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/forms/test_fields.py::TestMHCLGCheckboxesInput' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_standard_checkboxes_are_not_divided> [collection]
        pytest_itemcollected [hook]
            item: <Function test_standard_checkboxes_are_not_divided>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_divided_checkboxes> [collection]
        pytest_itemcollected [hook]
            item: <Function test_divided_checkboxes>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/forms/test_fields.py::TestMHCLGCheckboxesInput' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/forms/test_fields.py' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_validators.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_validators.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_validators.py>
        find_module called for: tests.unit.common.forms.test_validators [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_validators.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/forms/test_validators.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: Mock
              obj: <class 'unittest.mock.Mock'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: patch
              obj: <function patch at 0x1069e1080>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: ValidationError
              obj: <class 'wtforms.validators.ValidationError'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: CommunitiesEmail
              obj: <class 'app.common.forms.validators.CommunitiesEmail'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: FinalOptionExclusive
              obj: <class 'app.common.forms.validators.FinalOptionExclusive'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: URLWithoutProtocol
              obj: <class 'app.common.forms.validators.URLWithoutProtocol'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: WordRange
              obj: <class 'app.common.forms.validators.WordRange'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: TestWordRange
              obj: <class 'tests.unit.common.forms.test_validators.TestWordRange'>
          finish pytest_pycollect_makeitem --> <Class TestWordRange> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: TestCommunitiesEmailValidator
              obj: <class 'tests.unit.common.forms.test_validators.TestCommunitiesEmailValidator'>
          finish pytest_pycollect_makeitem --> <Class TestCommunitiesEmailValidator> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: TestURLWithoutProtocol
              obj: <class 'tests.unit.common.forms.test_validators.TestURLWithoutProtocol'>
          finish pytest_pycollect_makeitem --> <Class TestURLWithoutProtocol> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_validators.py>
              name: TestFinalOptionExclusive
              obj: <class 'tests.unit.common.forms.test_validators.TestFinalOptionExclusive'>
          finish pytest_pycollect_makeitem --> <Class TestFinalOptionExclusive> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/forms/test_validators.py' lenresult=4 outcome='passed'> [hook]
      genitems <Class TestWordRange> [collection]
        pytest_collectstart [hook]
            collector: <Class TestWordRange>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestWordRange>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: _get_mocks
              obj: <function TestWordRange._get_mocks at 0x133096a20>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_max_words_valid_within_limit
              obj: <function TestWordRange.test_max_words_valid_within_limit at 0x1330963e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327582d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_max_words_valid_within_limit>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_max_words_invalid_exceeds_limit
              obj: <function TestWordRange.test_max_words_invalid_exceeds_limit at 0x133096d40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278be30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_max_words_invalid_exceeds_limit>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_min_words_valid_above_minimum
              obj: <function TestWordRange.test_min_words_valid_above_minimum at 0x133096c00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278bc50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_min_words_valid_above_minimum>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_min_words_invalid_below_minimum
              obj: <function TestWordRange.test_min_words_invalid_below_minimum at 0x133096e80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133096710>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_min_words_invalid_below_minimum>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_meets_exact_range
              obj: <function TestWordRange.test_meets_exact_range at 0x133096f20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097ed0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_meets_exact_range>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_outside_exact_range
              obj: <function TestWordRange.test_outside_exact_range at 0x133096fc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097f70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_outside_exact_range>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_valid_within_range
              obj: <function TestWordRange.test_valid_within_range at 0x133097060>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097cf0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_valid_within_range>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_invalid_outside_range
              obj: <function TestWordRange.test_invalid_outside_range at 0x133097100>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc0f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_invalid_outside_range>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_both_min_words_or_max_words_absent
              obj: <function TestWordRange.test_both_min_words_or_max_words_absent at 0x1330971a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc230>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_both_min_words_or_max_words_absent>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_min_words_greater_than_max_words
              obj: <function TestWordRange.test_min_words_greater_than_max_words at 0x133097240>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc370>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_min_words_greater_than_max_words>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestWordRange>
              name: test_field_display_name
              obj: <function TestWordRange.test_field_display_name at 0x1330972e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc4b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_field_display_name>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/forms/test_validators.py::TestWordRange' lenresult=11 outcome='passed'> [hook]
      genitems <Function test_max_words_valid_within_limit> [collection]
        pytest_itemcollected [hook]
            item: <Function test_max_words_valid_within_limit>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_max_words_invalid_exceeds_limit> [collection]
        pytest_itemcollected [hook]
            item: <Function test_max_words_invalid_exceeds_limit>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_min_words_valid_above_minimum> [collection]
        pytest_itemcollected [hook]
            item: <Function test_min_words_valid_above_minimum>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_min_words_invalid_below_minimum> [collection]
        pytest_itemcollected [hook]
            item: <Function test_min_words_invalid_below_minimum>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_meets_exact_range> [collection]
        pytest_itemcollected [hook]
            item: <Function test_meets_exact_range>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_outside_exact_range> [collection]
        pytest_itemcollected [hook]
            item: <Function test_outside_exact_range>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_valid_within_range> [collection]
        pytest_itemcollected [hook]
            item: <Function test_valid_within_range>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_invalid_outside_range> [collection]
        pytest_itemcollected [hook]
            item: <Function test_invalid_outside_range>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_both_min_words_or_max_words_absent> [collection]
        pytest_itemcollected [hook]
            item: <Function test_both_min_words_or_max_words_absent>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_min_words_greater_than_max_words> [collection]
        pytest_itemcollected [hook]
            item: <Function test_min_words_greater_than_max_words>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_field_display_name> [collection]
        pytest_itemcollected [hook]
            item: <Function test_field_display_name>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/forms/test_validators.py::TestWordRange' lenresult=11 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestCommunitiesEmailValidator> [collection]
        pytest_collectstart [hook]
            collector: <Class TestCommunitiesEmailValidator>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestCommunitiesEmailValidator>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCommunitiesEmailValidator>
              name: setup_method
              obj: <function TestCommunitiesEmailValidator.setup_method at 0x133097420>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCommunitiesEmailValidator>
              name: _call_validator
              obj: <function TestCommunitiesEmailValidator._call_validator at 0x1330974c0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCommunitiesEmailValidator>
              name: test_valid_email_with_allowed_domain
              obj: <function TestCommunitiesEmailValidator.test_valid_email_with_allowed_domain at 0x133097560>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x13278bc50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_valid_email_with_allowed_domain>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCommunitiesEmailValidator>
              name: test_valid_email_with_disallowed_domain
              obj: <function TestCommunitiesEmailValidator.test_valid_email_with_disallowed_domain at 0x133097600>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097e30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_valid_email_with_disallowed_domain>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCommunitiesEmailValidator>
              name: test_invalid_email_format
              obj: <function TestCommunitiesEmailValidator.test_invalid_email_format at 0x1330976a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097f70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_invalid_email_format>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCommunitiesEmailValidator>
              name: test_case_insensitive_domain_match
              obj: <function TestCommunitiesEmailValidator.test_case_insensitive_domain_match at 0x133097740>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133096990>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_case_insensitive_domain_match>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestCommunitiesEmailValidator>
              name: test_missing_internal_domains_config
              obj: <function TestCommunitiesEmailValidator.test_missing_internal_domains_config at 0x1330977e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc190>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_missing_internal_domains_config>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/forms/test_validators.py::TestCommunitiesEmailValidator' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_valid_email_with_allowed_domain> [collection]
        pytest_itemcollected [hook]
            item: <Function test_valid_email_with_allowed_domain>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_valid_email_with_disallowed_domain> [collection]
        pytest_itemcollected [hook]
            item: <Function test_valid_email_with_disallowed_domain>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_invalid_email_format> [collection]
        pytest_itemcollected [hook]
            item: <Function test_invalid_email_format>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_case_insensitive_domain_match> [collection]
        pytest_itemcollected [hook]
            item: <Function test_case_insensitive_domain_match>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_missing_internal_domains_config> [collection]
        pytest_itemcollected [hook]
            item: <Function test_missing_internal_domains_config>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/forms/test_validators.py::TestCommunitiesEmailValidator' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestURLWithoutProtocol> [collection]
        pytest_collectstart [hook]
            collector: <Class TestURLWithoutProtocol>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestURLWithoutProtocol>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestURLWithoutProtocol>
              name: test_urls
              obj: <function TestURLWithoutProtocol.test_urls at 0x133097380>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc410>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: www.google.com
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: http://www.google.com
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://www.google.com
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://gov.uk
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://gov.uk/blog/foo
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://gov.uk/blog/foo?hmmm
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: https://gov.uk/blog/foo?hmmm=something
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: blah
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: http://
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: blah-foo
                  argname: url
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_urls[www.google.com]>, <Function test_urls[http://www.google.com]>, <Function test_urls[https://www.google.com]>, <Function test_urls[https://gov.uk]>, <Function test_urls[https://gov.uk/blog/foo]>, <Function test_urls[https://gov.uk/blog/foo?hmmm]>, <Function test_urls[https://gov.uk/blog/foo?hmmm=something]>, <Function test_urls[blah]>, <Function test_urls[http://]>, <Function test_urls[blah-foo]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/forms/test_validators.py::TestURLWithoutProtocol' lenresult=10 outcome='passed'> [hook]
      genitems <Function test_urls[www.google.com]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[www.google.com]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_urls[http://www.google.com]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[http://www.google.com]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_urls[https://www.google.com]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[https://www.google.com]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_urls[https://gov.uk]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[https://gov.uk]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_urls[https://gov.uk/blog/foo]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[https://gov.uk/blog/foo]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_urls[https://gov.uk/blog/foo?hmmm]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[https://gov.uk/blog/foo?hmmm]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_urls[https://gov.uk/blog/foo?hmmm=something]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[https://gov.uk/blog/foo?hmmm=something]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_urls[blah]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[blah]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_urls[http://]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[http://]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_urls[blah-foo]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_urls[blah-foo]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/forms/test_validators.py::TestURLWithoutProtocol' lenresult=10 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestFinalOptionExclusive> [collection]
        pytest_collectstart [hook]
            collector: <Class TestFinalOptionExclusive>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestFinalOptionExclusive>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFinalOptionExclusive>
              name: _get_mocks
              obj: <function TestFinalOptionExclusive._get_mocks at 0x133097880>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFinalOptionExclusive>
              name: test_valid_when_only_final_option_selected
              obj: <function TestFinalOptionExclusive.test_valid_when_only_final_option_selected at 0x133097920>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x10444f9d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_valid_when_only_final_option_selected>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFinalOptionExclusive>
              name: test_valid_when_non_final_options_selected
              obj: <function TestFinalOptionExclusive.test_valid_when_non_final_options_selected at 0x1330979c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc4b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_valid_when_non_final_options_selected>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFinalOptionExclusive>
              name: test_invalid_when_final_option_and_others_selected
              obj: <function TestFinalOptionExclusive.test_invalid_when_final_option_and_others_selected at 0x133097a60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc0f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_invalid_when_final_option_and_others_selected>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFinalOptionExclusive>
              name: test_custom_message_used_if_provided
              obj: <function TestFinalOptionExclusive.test_custom_message_used_if_provided at 0x133097b00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc730>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_custom_message_used_if_provided>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFinalOptionExclusive>
              name: test_no_validation_error_when_field_is_empty
              obj: <function TestFinalOptionExclusive.test_no_validation_error_when_field_is_empty at 0x133097d80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cc910>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_no_validation_error_when_field_is_empty>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/forms/test_validators.py::TestFinalOptionExclusive' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_valid_when_only_final_option_selected> [collection]
        pytest_itemcollected [hook]
            item: <Function test_valid_when_only_final_option_selected>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_valid_when_non_final_options_selected> [collection]
        pytest_itemcollected [hook]
            item: <Function test_valid_when_non_final_options_selected>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_invalid_when_final_option_and_others_selected> [collection]
        pytest_itemcollected [hook]
            item: <Function test_invalid_when_final_option_and_others_selected>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_custom_message_used_if_provided> [collection]
        pytest_itemcollected [hook]
            item: <Function test_custom_message_used_if_provided>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_no_validation_error_when_field_is_empty> [collection]
        pytest_itemcollected [hook]
            item: <Function test_no_validation_error_when_field_is_empty>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/forms/test_validators.py::TestFinalOptionExclusive' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/forms/test_validators.py' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/forms' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package helpers> [collection]
        pytest_collectstart [hook]
            collector: <Package helpers>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package helpers>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package helpers>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/test_collections.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/test_collections.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package helpers>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/test_collections.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/test_collections.py
            pytest_pycollect_makemodule [hook]
                parent: <Package helpers>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/test_collections.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/test_collections.py
            finish pytest_pycollect_makemodule --> <Module test_collections.py> [hook]
          finish pytest_collect_file --> [<Module test_collections.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers' lenresult=1 outcome='passed'> [hook]
      genitems <Module test_collections.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_collections.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_collections.py>
        early skip of rewriting module: tests.unit.common.helpers [assertion]
        find_module called for: tests.unit.common.helpers.test_collections [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/test_collections.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/helpers/test_collections.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: uuid
              obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: ExpressionType
              obj: <enum 'ExpressionType'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: SubmissionEventKey
              obj: <enum 'SubmissionEventKey'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: SubmissionHelper
              obj: <class 'app.common.helpers.collections.SubmissionHelper'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: AnyStringMatching
              obj: <class 'tests.utils.AnyStringMatching'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_collections.py>
              name: TestSubmissionHelper
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper'>
          finish pytest_pycollect_makeitem --> <Class TestSubmissionHelper> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py' lenresult=1 outcome='passed'> [hook]
      genitems <Class TestSubmissionHelper> [collection]
        pytest_collectstart [hook]
            collector: <Class TestSubmissionHelper>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestSubmissionHelper>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetOrderedVisibleForms
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestGetOrderedVisibleForms'>
          finish pytest_pycollect_makeitem --> <Class TestGetOrderedVisibleForms> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetOrderedVisibleQuestions
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestGetOrderedVisibleQuestions'>
          finish pytest_pycollect_makeitem --> <Class TestGetOrderedVisibleQuestions> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetForm
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestGetForm'>
          finish pytest_pycollect_makeitem --> <Class TestGetForm> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetQuestion
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestGetQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestGetQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetFirstQuestionForForm
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestGetFirstQuestionForForm'>
          finish pytest_pycollect_makeitem --> <Class TestGetFirstQuestionForForm> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetLastQuestionForForm
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestGetLastQuestionForForm'>
          finish pytest_pycollect_makeitem --> <Class TestGetLastQuestionForForm> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetFormForQuestion
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestGetFormForQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestGetFormForQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetNextQuestion
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestGetNextQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestGetNextQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestGetPreviousQuestion
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestGetPreviousQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestGetPreviousQuestion> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestStatuses
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestStatuses'>
          finish pytest_pycollect_makeitem --> <Class TestStatuses> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestSubmissionHelper>
              name: TestVisibleQuestion
              obj: <class 'tests.unit.common.helpers.test_collections.TestSubmissionHelper.TestVisibleQuestion'>
          finish pytest_pycollect_makeitem --> <Class TestVisibleQuestion> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper' lenresult=11 outcome='passed'> [hook]
      genitems <Class TestGetOrderedVisibleForms> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetOrderedVisibleForms>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetOrderedVisibleForms>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetOrderedVisibleForms>
              name: test_ordering
              obj: <function TestSubmissionHelper.TestGetOrderedVisibleForms.test_ordering at 0x1330cc180>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330ce850>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_ordering>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetOrderedVisibleForms' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_ordering> [collection]
        pytest_itemcollected [hook]
            item: <Function test_ordering>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetOrderedVisibleForms' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetOrderedVisibleQuestions> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetOrderedVisibleQuestions>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetOrderedVisibleQuestions>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetOrderedVisibleQuestions>
              name: test_ordering
              obj: <function TestSubmissionHelper.TestGetOrderedVisibleQuestions.test_ordering at 0x1330cd760>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330ceb70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_ordering>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetOrderedVisibleQuestions>
              name: test_visible_questions_filtered
              obj: <function TestSubmissionHelper.TestGetOrderedVisibleQuestions.test_visible_questions_filtered at 0x1330cd800>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330ced50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_visible_questions_filtered>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetOrderedVisibleQuestions>
              name: test_visible_questions_filtered_in_group
              obj: <function TestSubmissionHelper.TestGetOrderedVisibleQuestions.test_visible_questions_filtered_in_group at 0x1330cd8a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cee90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_visible_questions_filtered_in_group>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetOrderedVisibleQuestions>
              name: test_visible_questions_filtered_for_group_parent
              obj: <function TestSubmissionHelper.TestGetOrderedVisibleQuestions.test_visible_questions_filtered_for_group_parent at 0x1330cd940>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cefd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_visible_questions_filtered_for_group_parent>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetOrderedVisibleQuestions' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_ordering> [collection]
        pytest_itemcollected [hook]
            item: <Function test_ordering>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_visible_questions_filtered> [collection]
        pytest_itemcollected [hook]
            item: <Function test_visible_questions_filtered>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_visible_questions_filtered_in_group> [collection]
        pytest_itemcollected [hook]
            item: <Function test_visible_questions_filtered_in_group>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_visible_questions_filtered_for_group_parent> [collection]
        pytest_itemcollected [hook]
            item: <Function test_visible_questions_filtered_for_group_parent>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetOrderedVisibleQuestions' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetForm> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetForm>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetForm>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetForm>
              name: test_exists
              obj: <function TestSubmissionHelper.TestGetForm.test_exists at 0x1330cd9e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf2f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_exists>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetForm>
              name: test_does_not_exist
              obj: <function TestSubmissionHelper.TestGetForm.test_does_not_exist at 0x1330cda80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133096990>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_does_not_exist>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetForm' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_exists> [collection]
        pytest_itemcollected [hook]
            item: <Function test_exists>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_does_not_exist> [collection]
        pytest_itemcollected [hook]
            item: <Function test_does_not_exist>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetForm' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetQuestion>
              name: test_exists
              obj: <function TestSubmissionHelper.TestGetQuestion.test_exists at 0x1330cdb20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327582d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_exists>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetQuestion>
              name: test_does_not_exist
              obj: <function TestSubmissionHelper.TestGetQuestion.test_does_not_exist at 0x1330cdbc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x10444f9d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_does_not_exist>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetQuestion' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_exists> [collection]
        pytest_itemcollected [hook]
            item: <Function test_exists>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_does_not_exist> [collection]
        pytest_itemcollected [hook]
            item: <Function test_does_not_exist>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetQuestion' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetFirstQuestionForForm> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetFirstQuestionForForm>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetFirstQuestionForForm>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetFirstQuestionForForm>
              name: test_at_least_one_question_in_form
              obj: <function TestSubmissionHelper.TestGetFirstQuestionForForm.test_at_least_one_question_in_form at 0x1330cdc60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cead0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_at_least_one_question_in_form>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetFirstQuestionForForm>
              name: test_no_visible_questions_in_form
              obj: <function TestSubmissionHelper.TestGetFirstQuestionForForm.test_no_visible_questions_in_form at 0x1330cdd00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cecb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_no_visible_questions_in_form>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetFirstQuestionForForm' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_at_least_one_question_in_form> [collection]
        pytest_itemcollected [hook]
            item: <Function test_at_least_one_question_in_form>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_no_visible_questions_in_form> [collection]
        pytest_itemcollected [hook]
            item: <Function test_no_visible_questions_in_form>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetFirstQuestionForForm' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetLastQuestionForForm> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetLastQuestionForForm>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetLastQuestionForForm>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetLastQuestionForForm>
              name: test_at_least_one_question_in_form
              obj: <function TestSubmissionHelper.TestGetLastQuestionForForm.test_at_least_one_question_in_form at 0x1330cdda0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cedf0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_at_least_one_question_in_form>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetLastQuestionForForm>
              name: test_no_visible_questions_in_form
              obj: <function TestSubmissionHelper.TestGetLastQuestionForForm.test_no_visible_questions_in_form at 0x1330cde40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cef30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_no_visible_questions_in_form>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetLastQuestionForForm' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_at_least_one_question_in_form> [collection]
        pytest_itemcollected [hook]
            item: <Function test_at_least_one_question_in_form>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_no_visible_questions_in_form> [collection]
        pytest_itemcollected [hook]
            item: <Function test_no_visible_questions_in_form>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetLastQuestionForForm' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetFormForQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetFormForQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetFormForQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetFormForQuestion>
              name: test_question_exists_in_collection_forms
              obj: <function TestSubmissionHelper.TestGetFormForQuestion.test_question_exists_in_collection_forms at 0x1330cdee0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097f70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_exists_in_collection_forms>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetFormForQuestion>
              name: test_question_does_not_exist_in_collection_forms
              obj: <function TestSubmissionHelper.TestGetFormForQuestion.test_question_does_not_exist_in_collection_forms at 0x1330cdf80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133096990>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_question_does_not_exist_in_collection_forms>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetFormForQuestion' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_question_exists_in_collection_forms> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_exists_in_collection_forms>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_question_does_not_exist_in_collection_forms> [collection]
        pytest_itemcollected [hook]
            item: <Function test_question_does_not_exist_in_collection_forms>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetFormForQuestion' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetNextQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetNextQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetNextQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetNextQuestion>
              name: test_current_question_exists_and_is_not_last_question
              obj: <function TestSubmissionHelper.TestGetNextQuestion.test_current_question_exists_and_is_not_last_question at 0x1330ce020>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330ceb70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_current_question_exists_and_is_not_last_question>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetNextQuestion>
              name: test_current_question_exists_but_is_last_question
              obj: <function TestSubmissionHelper.TestGetNextQuestion.test_current_question_exists_but_is_last_question at 0x1330ce0c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cecb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_current_question_exists_but_is_last_question>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetNextQuestion>
              name: test_current_question_does_not_exist
              obj: <function TestSubmissionHelper.TestGetNextQuestion.test_current_question_does_not_exist at 0x1330ce160>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330ced50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_current_question_does_not_exist>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetNextQuestion>
              name: test_next_question_ignores_not_visible_questions
              obj: <function TestSubmissionHelper.TestGetNextQuestion.test_next_question_ignores_not_visible_questions at 0x1330ce200>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cef30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_next_question_ignores_not_visible_questions>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetNextQuestion' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_current_question_exists_and_is_not_last_question> [collection]
        pytest_itemcollected [hook]
            item: <Function test_current_question_exists_and_is_not_last_question>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_current_question_exists_but_is_last_question> [collection]
        pytest_itemcollected [hook]
            item: <Function test_current_question_exists_but_is_last_question>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_current_question_does_not_exist> [collection]
        pytest_itemcollected [hook]
            item: <Function test_current_question_does_not_exist>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_next_question_ignores_not_visible_questions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_next_question_ignores_not_visible_questions>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetNextQuestion' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestGetPreviousQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGetPreviousQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGetPreviousQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetPreviousQuestion>
              name: test_current_question_exists_and_is_not_first_question
              obj: <function TestSubmissionHelper.TestGetPreviousQuestion.test_current_question_exists_and_is_not_first_question at 0x1330ce2a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf390>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_current_question_exists_and_is_not_first_question>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetPreviousQuestion>
              name: test_current_question_exists_but_is_first_question
              obj: <function TestSubmissionHelper.TestGetPreviousQuestion.test_current_question_exists_but_is_first_question at 0x1330ce340>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf430>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_current_question_exists_but_is_first_question>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetPreviousQuestion>
              name: test_current_question_does_not_exist
              obj: <function TestSubmissionHelper.TestGetPreviousQuestion.test_current_question_does_not_exist at 0x1330ce3e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf4d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_current_question_does_not_exist>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGetPreviousQuestion>
              name: test_previous_question_ignores_not_visible_questions
              obj: <function TestSubmissionHelper.TestGetPreviousQuestion.test_previous_question_ignores_not_visible_questions at 0x1330ce480>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097cf0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_previous_question_ignores_not_visible_questions>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetPreviousQuestion' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_current_question_exists_and_is_not_first_question> [collection]
        pytest_itemcollected [hook]
            item: <Function test_current_question_exists_and_is_not_first_question>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_current_question_exists_but_is_first_question> [collection]
        pytest_itemcollected [hook]
            item: <Function test_current_question_exists_but_is_first_question>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_current_question_does_not_exist> [collection]
        pytest_itemcollected [hook]
            item: <Function test_current_question_does_not_exist>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_previous_question_ignores_not_visible_questions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_previous_question_ignores_not_visible_questions>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestGetPreviousQuestion' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestStatuses> [collection]
        pytest_collectstart [hook]
            collector: <Class TestStatuses>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestStatuses>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestStatuses>
              name: test_all_forms_are_completed
              obj: <function TestSubmissionHelper.TestStatuses.test_all_forms_are_completed at 0x1330ce520>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cecb0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_all_forms_are_completed>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestStatuses' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_all_forms_are_completed> [collection]
        pytest_itemcollected [hook]
            item: <Function test_all_forms_are_completed>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestStatuses' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestVisibleQuestion> [collection]
        pytest_collectstart [hook]
            collector: <Class TestVisibleQuestion>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestVisibleQuestion>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestVisibleQuestion>
              name: test_is_question_always_visible_with_no_conditions
              obj: <function TestSubmissionHelper.TestVisibleQuestion.test_is_question_always_visible_with_no_conditions at 0x1330ce5c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf070>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_question_always_visible_with_no_conditions>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestVisibleQuestion>
              name: test_is_component_visible_not_visible_with_failing_condition
              obj: <function TestSubmissionHelper.TestVisibleQuestion.test_is_component_visible_not_visible_with_failing_condition at 0x1330ce660>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cea30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_component_visible_not_visible_with_failing_condition>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestVisibleQuestion>
              name: test_is_component_visible_visible_with_passing_condition
              obj: <function TestSubmissionHelper.TestVisibleQuestion.test_is_component_visible_visible_with_passing_condition at 0x1330ce700>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330ced50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_component_visible_visible_with_passing_condition>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestVisibleQuestion>
              name: test_is_component_visible_not_visible_with_nested_conditions
              obj: <function TestSubmissionHelper.TestVisibleQuestion.test_is_component_visible_not_visible_with_nested_conditions at 0x1330ce7a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cef30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_is_component_visible_not_visible_with_nested_conditions>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestVisibleQuestion' lenresult=4 outcome='passed'> [hook]
      genitems <Function test_is_question_always_visible_with_no_conditions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_question_always_visible_with_no_conditions>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_component_visible_not_visible_with_failing_condition> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_component_visible_not_visible_with_failing_condition>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_component_visible_visible_with_passing_condition> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_component_visible_visible_with_passing_condition>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_is_component_visible_not_visible_with_nested_conditions> [collection]
        pytest_itemcollected [hook]
            item: <Function test_is_component_visible_not_visible_with_nested_conditions>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper::TestVisibleQuestion' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py::TestSubmissionHelper' lenresult=11 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers/test_collections.py' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/helpers' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_filters.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_filters.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_filters.py>
        find_module called for: tests.unit.common.test_filters [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/test_filters.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/test_filters.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: datetime
              obj: <module 'datetime' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/datetime.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: format_date
              obj: <function format_date at 0x1158362a0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: format_date_range
              obj: <function format_date_range at 0x115a90cc0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: format_datetime
              obj: <function format_datetime at 0x115a90c20>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: format_datetime_range
              obj: <function format_datetime_range at 0x115a90d60>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: TestFormatDate
              obj: <class 'tests.unit.common.test_filters.TestFormatDate'>
          finish pytest_pycollect_makeitem --> <Class TestFormatDate> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: TestFormatDatetime
              obj: <class 'tests.unit.common.test_filters.TestFormatDatetime'>
          finish pytest_pycollect_makeitem --> <Class TestFormatDatetime> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: TestFormatDateRange
              obj: <class 'tests.unit.common.test_filters.TestFormatDateRange'>
          finish pytest_pycollect_makeitem --> <Class TestFormatDateRange> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_filters.py>
              name: TestFormatDatetimeRange
              obj: <class 'tests.unit.common.test_filters.TestFormatDatetimeRange'>
          finish pytest_pycollect_makeitem --> <Class TestFormatDatetimeRange> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_filters.py' lenresult=4 outcome='passed'> [hook]
      genitems <Class TestFormatDate> [collection]
        pytest_collectstart [hook]
            collector: <Class TestFormatDate>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestFormatDate>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDate>
              name: test_date
              obj: <function TestFormatDate.test_date at 0x1330ceb60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf2f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_date>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDate>
              name: test_datetime
              obj: <function TestFormatDate.test_datetime at 0x1330ceac0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf390>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_datetime>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_filters.py::TestFormatDate' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_date> [collection]
        pytest_itemcollected [hook]
            item: <Function test_date>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_datetime> [collection]
        pytest_itemcollected [hook]
            item: <Function test_datetime>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_filters.py::TestFormatDate' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestFormatDatetime> [collection]
        pytest_collectstart [hook]
            collector: <Class TestFormatDatetime>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestFormatDatetime>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDatetime>
              name: test_datetime_am
              obj: <function TestFormatDatetime.test_datetime_am at 0x1330cede0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf250>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_datetime_am>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDatetime>
              name: test_datetime_pm
              obj: <function TestFormatDatetime.test_datetime_pm at 0x1330cf060>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf570>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_datetime_pm>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDatetime>
              name: test_datetime_minutes
              obj: <function TestFormatDatetime.test_datetime_minutes at 0x1330cea20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf6b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_datetime_minutes>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDatetime>
              name: test_datetime_noon
              obj: <function TestFormatDatetime.test_datetime_noon at 0x1330ced40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf750>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_datetime_noon>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDatetime>
              name: test_datetime_midnight
              obj: <function TestFormatDatetime.test_datetime_midnight at 0x1330ceca0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf930>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_datetime_midnight>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_filters.py::TestFormatDatetime' lenresult=5 outcome='passed'> [hook]
      genitems <Function test_datetime_am> [collection]
        pytest_itemcollected [hook]
            item: <Function test_datetime_am>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_datetime_pm> [collection]
        pytest_itemcollected [hook]
            item: <Function test_datetime_pm>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_datetime_minutes> [collection]
        pytest_itemcollected [hook]
            item: <Function test_datetime_minutes>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_datetime_noon> [collection]
        pytest_itemcollected [hook]
            item: <Function test_datetime_noon>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_datetime_midnight> [collection]
        pytest_itemcollected [hook]
            item: <Function test_datetime_midnight>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_filters.py::TestFormatDatetime' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestFormatDateRange> [collection]
        pytest_collectstart [hook]
            collector: <Class TestFormatDateRange>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestFormatDateRange>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDateRange>
              name: test_dates
              obj: <function TestFormatDateRange.test_dates at 0x1330cf100>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097e30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_dates>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_filters.py::TestFormatDateRange' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_dates> [collection]
        pytest_itemcollected [hook]
            item: <Function test_dates>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_filters.py::TestFormatDateRange' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestFormatDatetimeRange> [collection]
        pytest_collectstart [hook]
            collector: <Class TestFormatDatetimeRange>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestFormatDatetimeRange>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDatetimeRange>
              name: test_datetimes
              obj: <function TestFormatDatetimeRange.test_datetimes at 0x1330cef20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097e30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_datetimes>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFormatDatetimeRange>
              name: test_datetimes_minutes
              obj: <function TestFormatDatetimeRange.test_datetimes_minutes at 0x1330ce840>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cf2f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_datetimes_minutes>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_filters.py::TestFormatDatetimeRange' lenresult=2 outcome='passed'> [hook]
      genitems <Function test_datetimes> [collection]
        pytest_itemcollected [hook]
            item: <Function test_datetimes>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_datetimes_minutes> [collection]
        pytest_itemcollected [hook]
            item: <Function test_datetimes_minutes>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_filters.py::TestFormatDatetimeRange' lenresult=2 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_filters.py' lenresult=4 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_markdown.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_markdown.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_markdown.py>
        find_module called for: tests.unit.common.test_markdown [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/test_markdown.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/test_markdown.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: Flask
              obj: <class 'flask.app.Flask'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: render_template_string
              obj: <function render_template_string at 0x107964860>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: Markup
              obj: <class 'markupsafe.Markup'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: FlaskGOVUKMarkdown
              obj: <class 'app.common.markdown.FlaskGOVUKMarkdown'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: _GOVUKRenderer
              obj: <class 'app.common.markdown._GOVUKRenderer'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: convert_text_to_govuk_markup
              obj: <function convert_text_to_govuk_markup at 0x1160f9b20>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: TestGOVUKRenderer
              obj: <class 'tests.unit.common.test_markdown.TestGOVUKRenderer'>
          finish pytest_pycollect_makeitem --> <Class TestGOVUKRenderer> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: TestConvertTextToGovukMarkup
              obj: <class 'tests.unit.common.test_markdown.TestConvertTextToGovukMarkup'>
          finish pytest_pycollect_makeitem --> <Class TestConvertTextToGovukMarkup> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_markdown.py>
              name: TestFlaskGOVUKMarkdown
              obj: <class 'tests.unit.common.test_markdown.TestFlaskGOVUKMarkdown'>
          finish pytest_pycollect_makeitem --> <Class TestFlaskGOVUKMarkdown> [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_markdown.py' lenresult=3 outcome='passed'> [hook]
      genitems <Class TestGOVUKRenderer> [collection]
        pytest_collectstart [hook]
            collector: <Class TestGOVUKRenderer>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestGOVUKRenderer>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: setup_method
              obj: <function TestGOVUKRenderer.setup_method at 0x1321d8540>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_link
              obj: <function TestGOVUKRenderer.test_link at 0x1321d85e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330ce990>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_link>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_link_without_title
              obj: <function TestGOVUKRenderer.test_link_without_title at 0x1321d8680>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097e30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_link_without_title>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_image_with_alt_text
              obj: <function TestGOVUKRenderer.test_image_with_alt_text at 0x1321d8720>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d80f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_image_with_alt_text>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_image_without_alt_text
              obj: <function TestGOVUKRenderer.test_image_without_alt_text at 0x1321d87c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9810>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_image_without_alt_text>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_emphasis_strips_formatting
              obj: <function TestGOVUKRenderer.test_emphasis_strips_formatting at 0x1321d8860>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d99f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_emphasis_strips_formatting>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_strong_strips_formatting
              obj: <function TestGOVUKRenderer.test_strong_strips_formatting at 0x1321d8900>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9b30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_strong_strips_formatting>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_codespan_strips_formatting
              obj: <function TestGOVUKRenderer.test_codespan_strips_formatting at 0x1321d89a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9c70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_codespan_strips_formatting>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_linebreak
              obj: <function TestGOVUKRenderer.test_linebreak at 0x1321d8a40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9db0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_linebreak>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_inline_html_escapes
              obj: <function TestGOVUKRenderer.test_inline_html_escapes at 0x1321d8ae0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9ef0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_inline_html_escapes>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_paragraph
              obj: <function TestGOVUKRenderer.test_paragraph at 0x1321d8b80>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321da030>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_paragraph>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_heading_level_2
              obj: <function TestGOVUKRenderer.test_heading_level_2 at 0x1321d8c20>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321da170>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_heading_level_2>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_heading_other_levels
              obj: <function TestGOVUKRenderer.test_heading_other_levels at 0x1321d8cc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321da2b0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_heading_other_levels>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_blank_line
              obj: <function TestGOVUKRenderer.test_blank_line at 0x1321d8d60>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321da3f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_blank_line>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_thematic_break
              obj: <function TestGOVUKRenderer.test_thematic_break at 0x1321d8e00>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321da530>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_thematic_break>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_block_text
              obj: <function TestGOVUKRenderer.test_block_text at 0x1321d8ea0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321da670>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_block_text>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_block_code
              obj: <function TestGOVUKRenderer.test_block_code at 0x1321d8f40>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330cee90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_block_code>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_block_quote
              obj: <function TestGOVUKRenderer.test_block_quote at 0x1321d8fe0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097e30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_block_quote>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_block_html_escapes
              obj: <function TestGOVUKRenderer.test_block_html_escapes at 0x1321d9080>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d8230>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_block_html_escapes>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_block_error_escapes
              obj: <function TestGOVUKRenderer.test_block_error_escapes at 0x1321d9120>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d80f0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_block_error_escapes>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_unordered_list
              obj: <function TestGOVUKRenderer.test_unordered_list at 0x1321d91c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9a90>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_unordered_list>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_ordered_list
              obj: <function TestGOVUKRenderer.test_ordered_list at 0x1321d9260>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9b30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_ordered_list>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestGOVUKRenderer>
              name: test_list_item
              obj: <function TestGOVUKRenderer.test_list_item at 0x1321d9300>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9c70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_list_item>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_markdown.py::TestGOVUKRenderer' lenresult=22 outcome='passed'> [hook]
      genitems <Function test_link> [collection]
        pytest_itemcollected [hook]
            item: <Function test_link>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_link_without_title> [collection]
        pytest_itemcollected [hook]
            item: <Function test_link_without_title>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_image_with_alt_text> [collection]
        pytest_itemcollected [hook]
            item: <Function test_image_with_alt_text>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_image_without_alt_text> [collection]
        pytest_itemcollected [hook]
            item: <Function test_image_without_alt_text>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_emphasis_strips_formatting> [collection]
        pytest_itemcollected [hook]
            item: <Function test_emphasis_strips_formatting>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_strong_strips_formatting> [collection]
        pytest_itemcollected [hook]
            item: <Function test_strong_strips_formatting>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_codespan_strips_formatting> [collection]
        pytest_itemcollected [hook]
            item: <Function test_codespan_strips_formatting>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_linebreak> [collection]
        pytest_itemcollected [hook]
            item: <Function test_linebreak>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_inline_html_escapes> [collection]
        pytest_itemcollected [hook]
            item: <Function test_inline_html_escapes>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_paragraph> [collection]
        pytest_itemcollected [hook]
            item: <Function test_paragraph>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_heading_level_2> [collection]
        pytest_itemcollected [hook]
            item: <Function test_heading_level_2>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_heading_other_levels> [collection]
        pytest_itemcollected [hook]
            item: <Function test_heading_other_levels>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_blank_line> [collection]
        pytest_itemcollected [hook]
            item: <Function test_blank_line>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_thematic_break> [collection]
        pytest_itemcollected [hook]
            item: <Function test_thematic_break>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_block_text> [collection]
        pytest_itemcollected [hook]
            item: <Function test_block_text>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_block_code> [collection]
        pytest_itemcollected [hook]
            item: <Function test_block_code>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_block_quote> [collection]
        pytest_itemcollected [hook]
            item: <Function test_block_quote>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_block_html_escapes> [collection]
        pytest_itemcollected [hook]
            item: <Function test_block_html_escapes>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_block_error_escapes> [collection]
        pytest_itemcollected [hook]
            item: <Function test_block_error_escapes>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_unordered_list> [collection]
        pytest_itemcollected [hook]
            item: <Function test_unordered_list>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_ordered_list> [collection]
        pytest_itemcollected [hook]
            item: <Function test_ordered_list>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_list_item> [collection]
        pytest_itemcollected [hook]
            item: <Function test_list_item>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_markdown.py::TestGOVUKRenderer' lenresult=22 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestConvertTextToGovukMarkup> [collection]
        pytest_collectstart [hook]
            collector: <Class TestConvertTextToGovukMarkup>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestConvertTextToGovukMarkup>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestConvertTextToGovukMarkup>
              name: test_handles_empty_string
              obj: <function TestConvertTextToGovukMarkup.test_handles_empty_string at 0x1321d84a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x133097e30>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_handles_empty_string>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestConvertTextToGovukMarkup>
              name: test_escapes_html_in_markdown
              obj: <function TestConvertTextToGovukMarkup.test_escapes_html_in_markdown at 0x1321d93a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1327582d0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_escapes_html_in_markdown>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestConvertTextToGovukMarkup>
              name: test_h2_headings
              obj: <function TestConvertTextToGovukMarkup.test_h2_headings at 0x1321d9440>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d8410>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_h2_headings>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestConvertTextToGovukMarkup>
              name: test_bullet_lists
              obj: <function TestConvertTextToGovukMarkup.test_bullet_lists at 0x1321d94e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9810>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_bullet_lists>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestConvertTextToGovukMarkup>
              name: test_numbered_lists
              obj: <function TestConvertTextToGovukMarkup.test_numbered_lists at 0x1321d9580>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9bd0>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_numbered_lists>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestConvertTextToGovukMarkup>
              name: test_paragraphs
              obj: <function TestConvertTextToGovukMarkup.test_paragraphs at 0x1321d9620>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9d10>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_paragraphs>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestConvertTextToGovukMarkup>
              name: test_links
              obj: <function TestConvertTextToGovukMarkup.test_links at 0x1321d96c0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9c70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_links>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Class TestConvertTextToGovukMarkup>
              name: test_strips_formatting
              obj: <function TestConvertTextToGovukMarkup.test_strips_formatting at 0x1321d9760>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9e50>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: **bold**
                  argname: markdown_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <p class='govuk-body'>bold</p>

                  argname: expected_output
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: *italic*
                  argname: markdown_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <p class='govuk-body'>italic</p>

                  argname: expected_output
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: `code`
                  argname: markdown_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <p class='govuk-body'>code</p>

                  argname: expected_output
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: ![alt](image.jpg)
                  argname: markdown_input
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: <p class='govuk-body'>alt</p>

                  argname: expected_output
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_strips_formatting[**bold**-<p class='govuk-body'>bold</p>\n]>, <Function test_strips_formatting[*italic*-<p class='govuk-body'>italic</p>\n]>, <Function test_strips_formatting[`code`-<p class='govuk-body'>code</p>\n]>, <Function test_strips_formatting[![alt](image.jpg)-<p class='govuk-body'>alt</p>\n]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_markdown.py::TestConvertTextToGovukMarkup' lenresult=11 outcome='passed'> [hook]
      genitems <Function test_handles_empty_string> [collection]
        pytest_itemcollected [hook]
            item: <Function test_handles_empty_string>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_escapes_html_in_markdown> [collection]
        pytest_itemcollected [hook]
            item: <Function test_escapes_html_in_markdown>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_h2_headings> [collection]
        pytest_itemcollected [hook]
            item: <Function test_h2_headings>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_bullet_lists> [collection]
        pytest_itemcollected [hook]
            item: <Function test_bullet_lists>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_numbered_lists> [collection]
        pytest_itemcollected [hook]
            item: <Function test_numbered_lists>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_paragraphs> [collection]
        pytest_itemcollected [hook]
            item: <Function test_paragraphs>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_links> [collection]
        pytest_itemcollected [hook]
            item: <Function test_links>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_strips_formatting[**bold**-<p class='govuk-body'>bold</p>\n]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_strips_formatting[**bold**-<p class='govuk-body'>bold</p>\n]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_strips_formatting[*italic*-<p class='govuk-body'>italic</p>\n]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_strips_formatting[*italic*-<p class='govuk-body'>italic</p>\n]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_strips_formatting[`code`-<p class='govuk-body'>code</p>\n]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_strips_formatting[`code`-<p class='govuk-body'>code</p>\n]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_strips_formatting[![alt](image.jpg)-<p class='govuk-body'>alt</p>\n]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_strips_formatting[![alt](image.jpg)-<p class='govuk-body'>alt</p>\n]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_markdown.py::TestConvertTextToGovukMarkup' lenresult=11 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Class TestFlaskGOVUKMarkdown> [collection]
        pytest_collectstart [hook]
            collector: <Class TestFlaskGOVUKMarkdown>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestFlaskGOVUKMarkdown>
          pytest_pycollect_makeitem [hook]
              collector: <Class TestFlaskGOVUKMarkdown>
              name: test_jinja_filter_integration
              obj: <function TestFlaskGOVUKMarkdown.test_jinja_filter_integration at 0x1321d98a0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1330ce990>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_jinja_filter_integration>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_markdown.py::TestFlaskGOVUKMarkdown' lenresult=1 outcome='passed'> [hook]
      genitems <Function test_jinja_filter_integration> [collection]
        pytest_itemcollected [hook]
            item: <Function test_jinja_filter_integration>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_markdown.py::TestFlaskGOVUKMarkdown' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_markdown.py' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Module test_utils.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_utils.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_utils.py>
        find_module called for: tests.unit.common.test_utils [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/common/test_utils.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/common/test_utils.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: slugify
              obj: <function slugify at 0x114f68720>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_utils.py>
              name: test_slugify
              obj: <function test_slugify at 0x1321d80e0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9810>
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Hello World
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello-world
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Hello, World!
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: hello-world
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:   Leading and trailing
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: leading-and-trailing
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Multiple   Spaces
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: multiple-spaces
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Special #$@! Characters
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: special-characters
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Special #$@! Characters $%^$%^      Again
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: special-characters-again
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: unicode: ångström
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: unicode-ngstrm
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: MiXeD CaSe
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: mixed-case
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Numbers 123 and text
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: numbers-123-and-text
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Already-slugified-text
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: already-slugified-text
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: Under_score and-dash
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: underscore-and-dash
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: None
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val:
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: -
                  argname: test_string
              finish pytest_make_parametrize_id --> None [hook]
              pytest_make_parametrize_id [hook]
                  config: <_pytest.config.Config object at 0x106844910>
                  val: -
                  argname: expected_result
              finish pytest_make_parametrize_id --> None [hook]
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_slugify[Hello World-hello-world]>, <Function test_slugify[Hello, World!-hello-world]>, <Function test_slugify[  Leading and trailing  -leading-and-trailing]>, <Function test_slugify[Multiple   Spaces-multiple-spaces]>, <Function test_slugify[Special #$@! Characters-special-characters]>, <Function test_slugify[Special #$@! Characters $%^$%^      Again    -special-characters-again]>, <Function test_slugify[unicode: \xe5ngstr\xf6m-unicode-ngstrm]>, <Function test_slugify[MiXeD CaSe-mixed-case]>, <Function test_slugify[Numbers 123 and text-numbers-123-and-text]>, <Function test_slugify[-]>, <Function test_slugify[    -]>, <Function test_slugify[Already-slugified-text-already-slugified-text]>, <Function test_slugify[Under_score and-dash-underscore-and-dash]>, <Function test_slugify[None-]>, <Function test_slugify[---]>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/common/test_utils.py' lenresult=15 outcome='passed'> [hook]
      genitems <Function test_slugify[Hello World-hello-world]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[Hello World-hello-world]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[Hello, World!-hello-world]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[Hello, World!-hello-world]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[  Leading and trailing  -leading-and-trailing]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[  Leading and trailing  -leading-and-trailing]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[Multiple   Spaces-multiple-spaces]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[Multiple   Spaces-multiple-spaces]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[Special #$@! Characters-special-characters]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[Special #$@! Characters-special-characters]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[Special #$@! Characters $%^$%^      Again    -special-characters-again]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[Special #$@! Characters $%^$%^      Again    -special-characters-again]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[unicode: \xe5ngstr\xf6m-unicode-ngstrm]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[unicode: \xe5ngstr\xf6m-unicode-ngstrm]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[MiXeD CaSe-mixed-case]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[MiXeD CaSe-mixed-case]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[Numbers 123 and text-numbers-123-and-text]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[Numbers 123 and text-numbers-123-and-text]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[-]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[-]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[    -]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[    -]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[Already-slugified-text-already-slugified-text]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[Already-slugified-text-already-slugified-text]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[Under_score and-dash-underscore-and-dash]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[Under_score and-dash-underscore-and-dash]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[None-]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[None-]>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_slugify[---]> [collection]
        pytest_itemcollected [hook]
            item: <Function test_slugify[---]>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common/test_utils.py' lenresult=15 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/common' lenresult=9 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package config> [collection]
        pytest_collectstart [hook]
            collector: <Package config>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package config>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package config>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/test_config.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/test_config.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package config>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/test_config.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/test_config.py
            pytest_pycollect_makemodule [hook]
                parent: <Package config>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/test_config.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/config/test_config.py
            finish pytest_pycollect_makemodule --> <Module test_config.py> [hook]
          finish pytest_collect_file --> [<Module test_config.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/config' lenresult=1 outcome='passed'> [hook]
      genitems <Module test_config.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_config.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_config.py>
        early skip of rewriting module: tests.unit.config [assertion]
        find_module called for: tests.unit.config.test_config [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/config/test_config.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/config/test_config.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: get_type_hints
              obj: <function get_type_hints at 0x1046db7e0>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: DevConfig
              obj: <class 'app.config.DevConfig'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: LocalConfig
              obj: <class 'app.config.LocalConfig'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: ProdConfig
              obj: <class 'app.config.ProdConfig'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: TestConfig
              obj: <class 'app.config.TestConfig'>
          finish pytest_pycollect_makeitem --> <Class TestConfig> [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: _SharedConfig
              obj: <class 'app.config._SharedConfig'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: test_config_subclasses_do_not_have_conflicting_types
              obj: <function test_config_subclasses_do_not_have_conflicting_types at 0x1321da520>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9c70>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_config_subclasses_do_not_have_conflicting_types>] [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_config.py>
              name: test_config_subclasses_do_not_define_new_variables
              obj: <function test_config_subclasses_do_not_define_new_variables at 0x1321d9bc0>
            pytest_generate_tests [hook]
                metafunc: <_pytest.python.Metafunc object at 0x1321d9e50>
            finish pytest_generate_tests --> [] [hook]
          finish pytest_pycollect_makeitem --> [<Function test_config_subclasses_do_not_define_new_variables>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/config/test_config.py' lenresult=3 outcome='passed'> [hook]
      genitems <Class TestConfig> [collection]
        pytest_collectstart [hook]
            collector: <Class TestConfig>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Class TestConfig>
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/config/test_config.py::TestConfig' lenresult=0 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/config/test_config.py::TestConfig' lenresult=0 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Function test_config_subclasses_do_not_have_conflicting_types> [collection]
        pytest_itemcollected [hook]
            item: <Function test_config_subclasses_do_not_have_conflicting_types>
        finish pytest_itemcollected --> [] [hook]
      genitems <Function test_config_subclasses_do_not_define_new_variables> [collection]
        pytest_itemcollected [hook]
            item: <Function test_config_subclasses_do_not_define_new_variables>
        finish pytest_itemcollected --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/config/test_config.py' lenresult=3 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
        pytest_collectreport [hook]
            report: <CollectReport 'tests/unit/config' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
      genitems <Package deliver_grant_funding> [collection]
        pytest_collectstart [hook]
            collector: <Package deliver_grant_funding>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Package deliver_grant_funding>
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/__init__.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package deliver_grant_funding>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/__init__.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/__init__.py
          finish pytest_collect_file --> [] [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/__pycache__
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/__pycache__
          finish pytest_ignore_collect --> True [hook]
          pytest_ignore_collect [hook]
              config: <_pytest.config.Config object at 0x106844910>
              collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/test_forms.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/test_forms.py
          finish pytest_ignore_collect --> None [hook]
          pytest_collect_file [hook]
              parent: <Package deliver_grant_funding>
              file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/test_forms.py
              path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/test_forms.py
            pytest_pycollect_makemodule [hook]
                parent: <Package deliver_grant_funding>
                module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/test_forms.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/test_forms.py
            finish pytest_pycollect_makemodule --> <Module test_forms.py> [hook]
          finish pytest_collect_file --> [<Module test_forms.py>] [hook]
        finish pytest_make_collect_report --> <CollectReport 'tests/unit/deliver_grant_funding' lenresult=1 outcome='passed'> [hook]
      genitems <Module test_forms.py> [collection]
        pytest_collectstart [hook]
            collector: <Module test_forms.py>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Module test_forms.py>
        early skip of rewriting module: tests.unit.deliver_grant_funding [assertion]
        find_module called for: tests.unit.deliver_grant_funding.test_forms [assertion]
        matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/test_forms.py' [assertion]
        rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/deliver_grant_funding/test_forms.py') [assertion]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: @py_builtins
              obj: <module 'builtins' (built-in)>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: @pytest_ar
              obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: mock
              obj: <module 'unittest.mock' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/unittest/mock.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: patch
              obj: <function patch at 0x1069e1080>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: pytest
              obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
          finish pytest_pycollect_makeitem --> None [hook]
          pytest_pycollect_makeitem [hook]
              collector: <Module test_forms.py>
              name: Flask
              obj: <class 'flask.app.Flask'>
          finish pytest_pycollect_makeitem --> None [hook]
          finish pytest_make_collect_report --> <CollectReport 'tests/unit/deliver_grant_funding/test_forms.py' lenresult=0 outcome='failed'> [hook]
          pytest_exception_interact [hook]
              node: <Module test_forms.py>
              call: <CallInfo when='collect' excinfo=<ExceptionInfo RuntimeError('Working outside of request context.\n\nThis typically means that you attempted to use functionality that needed\nan active HTTP request. Consult the documentation on testing for\ninformation about how to avoid this problem.') tblen=13>>
              report: <CollectReport 'tests/unit/deliver_grant_funding/test_forms.py' lenresult=0 outcome='failed'>
          finish pytest_exception_interact --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport 'tests/unit/deliver_grant_funding/test_forms.py' lenresult=0 outcome='failed'>
          finish pytest_collectreport --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport 'tests/unit/deliver_grant_funding' lenresult=1 outcome='passed'>
          finish pytest_collectreport --> [] [hook]
        genitems <Package services> [collection]
          pytest_collectstart [hook]
              collector: <Package services>
          finish pytest_collectstart --> [] [hook]
          pytest_make_collect_report [hook]
              collector: <Package services>
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x106844910>
                collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/__init__.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Package services>
                file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/__init__.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/__init__.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x106844910>
                collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/__pycache__
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/__pycache__
            finish pytest_ignore_collect --> True [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x106844910>
                collection_path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/test_notify.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/test_notify.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Package services>
                file_path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/test_notify.py
                path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/test_notify.py
              pytest_pycollect_makemodule [hook]
                  parent: <Package services>
                  module_path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/test_notify.py
                  path: /Users/sarahsloan1/dev/funding-service/tests/unit/services/test_notify.py
              finish pytest_pycollect_makemodule --> <Module test_notify.py> [hook]
            finish pytest_collect_file --> [<Module test_notify.py>] [hook]
          finish pytest_make_collect_report --> <CollectReport 'tests/unit/services' lenresult=1 outcome='passed'> [hook]
        genitems <Module test_notify.py> [collection]
          pytest_collectstart [hook]
              collector: <Module test_notify.py>
          finish pytest_collectstart --> [] [hook]
          pytest_make_collect_report [hook]
              collector: <Module test_notify.py>
          early skip of rewriting module: tests.unit.services [assertion]
          find_module called for: tests.unit.services.test_notify [assertion]
          matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/services/test_notify.py' [assertion]
          rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/services/test_notify.py') [assertion]
          early skip of rewriting module: responses [assertion]
          early skip of rewriting module: yaml [assertion]
          early skip of rewriting module: yaml.error [assertion]
          early skip of rewriting module: yaml.tokens [assertion]
          early skip of rewriting module: yaml.events [assertion]
          early skip of rewriting module: yaml.nodes [assertion]
          early skip of rewriting module: yaml.loader [assertion]
          early skip of rewriting module: yaml.reader [assertion]
          early skip of rewriting module: yaml.scanner [assertion]
          early skip of rewriting module: yaml.parser [assertion]
          early skip of rewriting module: yaml.composer [assertion]
          early skip of rewriting module: yaml.constructor [assertion]
          early skip of rewriting module: yaml.resolver [assertion]
          early skip of rewriting module: yaml.dumper [assertion]
          early skip of rewriting module: yaml.emitter [assertion]
          early skip of rewriting module: yaml.serializer [assertion]
          early skip of rewriting module: yaml.representer [assertion]
          early skip of rewriting module: yaml.cyaml [assertion]
          early skip of rewriting module: yaml._yaml [assertion]
          early skip of rewriting module: responses.matchers [assertion]
          early skip of rewriting module: responses.registries [assertion]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_notify.py>
                name: @py_builtins
                obj: <module 'builtins' (built-in)>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_notify.py>
                name: @pytest_ar
                obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_notify.py>
                name: datetime
                obj: <module 'datetime' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/datetime.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_notify.py>
                name: uuid
                obj: <module 'uuid' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/uuid.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_notify.py>
                name: responses
                obj: <module 'responses' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/responses/__init__.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_notify.py>
                name: matchers
                obj: <module 'responses.matchers' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/responses/matchers.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_notify.py>
                name: notification_service
                obj: <app.services.notify.NotificationService object at 0x1165cb4d0>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_notify.py>
                name: Notification
                obj: <class 'app.services.notify.Notification'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_notify.py>
                name: TestNotificationService
                obj: <class 'tests.unit.services.test_notify.TestNotificationService'>
            finish pytest_pycollect_makeitem --> <Class TestNotificationService> [hook]
          finish pytest_make_collect_report --> <CollectReport 'tests/unit/services/test_notify.py' lenresult=1 outcome='passed'> [hook]
        genitems <Class TestNotificationService> [collection]
          pytest_collectstart [hook]
              collector: <Class TestNotificationService>
          finish pytest_collectstart --> [] [hook]
          pytest_make_collect_report [hook]
              collector: <Class TestNotificationService>
            pytest_pycollect_makeitem [hook]
                collector: <Class TestNotificationService>
                name: test_send_magic_link
                obj: <function TestNotificationService.test_send_magic_link at 0x13261dbc0>
              pytest_generate_tests [hook]
                  metafunc: <_pytest.python.Metafunc object at 0x1321dbbb0>
              finish pytest_generate_tests --> [] [hook]
            finish pytest_pycollect_makeitem --> [<Function test_send_magic_link>] [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Class TestNotificationService>
                name: test_send_collection_submission
                obj: <function TestNotificationService.test_send_collection_submission at 0x13261dda0>
              pytest_generate_tests [hook]
                  metafunc: <_pytest.python.Metafunc object at 0x13261e170>
              finish pytest_generate_tests --> [] [hook]
            finish pytest_pycollect_makeitem --> [<Function test_send_collection_submission>] [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Class TestNotificationService>
                name: test_send_member_confirmation
                obj: <function TestNotificationService.test_send_member_confirmation at 0x13261df80>
              pytest_generate_tests [hook]
                  metafunc: <_pytest.python.Metafunc object at 0x13261e2b0>
              finish pytest_generate_tests --> [] [hook]
            finish pytest_pycollect_makeitem --> [<Function test_send_member_confirmation>] [hook]
          finish pytest_make_collect_report --> <CollectReport 'tests/unit/services/test_notify.py::TestNotificationService' lenresult=3 outcome='passed'> [hook]
        genitems <Function test_send_magic_link> [collection]
          pytest_itemcollected [hook]
              item: <Function test_send_magic_link>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_send_collection_submission> [collection]
          pytest_itemcollected [hook]
              item: <Function test_send_collection_submission>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_send_member_confirmation> [collection]
          pytest_itemcollected [hook]
              item: <Function test_send_member_confirmation>
          finish pytest_itemcollected --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport 'tests/unit/services/test_notify.py::TestNotificationService' lenresult=3 outcome='passed'>
          finish pytest_collectreport --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport 'tests/unit/services/test_notify.py' lenresult=1 outcome='passed'>
          finish pytest_collectreport --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport 'tests/unit/services' lenresult=1 outcome='passed'>
          finish pytest_collectreport --> [] [hook]
        genitems <Module test_all_routes_access.py> [collection]
          pytest_collectstart [hook]
              collector: <Module test_all_routes_access.py>
          finish pytest_collectstart --> [] [hook]
          pytest_make_collect_report [hook]
              collector: <Module test_all_routes_access.py>
          find_module called for: tests.unit.test_all_routes_access [assertion]
          matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/test_all_routes_access.py' [assertion]
          rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/test_all_routes_access.py') [assertion]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: @py_builtins
                obj: <module 'builtins' (built-in)>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: @pytest_ar
                obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: inspect
                obj: <module 'inspect' from '/Users/sarahsloan1/.local/share/uv/python/cpython-3.13.7-macos-aarch64-none/lib/python3.13/inspect.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: pytest
                obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: _get_decorators
                obj: <function _get_decorators at 0x13261e0c0>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: all_auth_annotations
                obj: ['@login_required', '@is_mhclg_user', '@has_grant_role(RoleEnum.MEMBER)', '@has_grant_role(RoleEnum.ADMIN)', '@is_platform_admin']
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: routes_with_expected_platform_admin_only_access
                obj: ['developers.access.grants_list', 'developers.deliver.grant_developers', 'deliver_grant_funding.grant_setup_intro', 'deliver_grant_funding.grant_setup_ggis', 'deliver_grant_funding.grant_setup_ggis_required_info', 'deliver_grant_funding.grant_setup_name', 'deliver_grant_funding.grant_setup_description', 'deliver_grant_funding.grant_setup_contact', 'deliver_grant_funding.grant_setup_check_your_answers', 'deliver_grant_funding.add_user_to_grant', 'deliver_grant_funding.grant_change_ggis']
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: routes_with_expected_grant_admin_only_access
                obj: ['deliver_grant_funding.grant_change_name', 'deliver_grant_funding.grant_change_description', 'deliver_grant_funding.grant_change_contact', 'deliver_grant_funding.set_up_report', 'deliver_grant_funding.change_report_name', 'deliver_grant_funding.add_task', 'deliver_grant_funding.change_form_name', 'deliver_grant_funding.change_group_name', 'deliver_grant_funding.change_group_display_options', 'deliver_grant_funding.move_task', 'deliver_grant_funding.move_component', 'deliver_grant_funding.choose_question_type', 'deliver_grant_funding.add_question', 'deliver_grant_funding.add_question_group_name', 'deliver_grant_funding.add_question_group_display_options', 'deliver_grant_funding.edit_question', 'deliver_grant_funding.manage_guidance', 'deliver_grant_funding.add_question_condition_select_question', 'deliver_grant_funding.add_question_condition', 'deliver_grant_funding.edit_question_condition', 'deliver_grant_funding.add_question_validation', 'deliver_grant_funding.edit_question_validation']
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: routes_with_expected_member_only_access
                obj: ['deliver_grant_funding.list_users_for_grant', 'deliver_grant_funding.grant_details', 'deliver_grant_funding.list_reports', 'deliver_grant_funding.list_report_tasks', 'deliver_grant_funding.list_task_questions', 'deliver_grant_funding.list_group_questions', 'deliver_grant_funding.ask_a_question', 'deliver_grant_funding.submission_tasklist', 'deliver_grant_funding.check_your_answers', 'deliver_grant_funding.list_submissions', 'deliver_grant_funding.view_submission', 'deliver_grant_funding.export_report_submissions']
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: routes_with_expected_access_grant_funding_logged_in_access
                obj: ['developers.access.start_submission_redirect', 'developers.access.submission_tasklist', 'developers.access.ask_a_question', 'developers.access.check_your_answers', 'developers.access.collection_confirmation']
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: routes_with_expected_is_mhclg_user_access
                obj: ['deliver_grant_funding.list_grants']
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: routes_with_no_expected_access_restrictions
                obj: ['developers.access.grant_details', 'auth.request_a_link_to_sign_in', 'auth.check_email', 'auth.claim_magic_link', 'auth.sso_sign_in', 'auth.sso_get_token', 'auth.sign_out', 'deliver_grant_funding.return_from_test_submission', 'static', 'healthcheck.healthcheck', 'index', 'common_api.markdown_to_html']
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: test_accessibility_for_user_role_to_each_endpoint
                obj: <function test_accessibility_for_user_role_to_each_endpoint at 0x13261e340>
              pytest_generate_tests [hook]
                  metafunc: <_pytest.python.Metafunc object at 0x1321dbbb0>
              finish pytest_generate_tests --> [] [hook]
            finish pytest_pycollect_makeitem --> [<Function test_accessibility_for_user_role_to_each_endpoint>] [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_all_routes_access.py>
                name: test_routes_list_is_valid
                obj: <function test_routes_list_is_valid at 0x13261e3e0>
              pytest_generate_tests [hook]
                  metafunc: <_pytest.python.Metafunc object at 0x1321dbbb0>
              finish pytest_generate_tests --> [] [hook]
            finish pytest_pycollect_makeitem --> [<Function test_routes_list_is_valid>] [hook]
          finish pytest_make_collect_report --> <CollectReport 'tests/unit/test_all_routes_access.py' lenresult=2 outcome='passed'> [hook]
        genitems <Function test_accessibility_for_user_role_to_each_endpoint> [collection]
          pytest_itemcollected [hook]
              item: <Function test_accessibility_for_user_role_to_each_endpoint>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_routes_list_is_valid> [collection]
          pytest_itemcollected [hook]
              item: <Function test_routes_list_is_valid>
          finish pytest_itemcollected --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport 'tests/unit/test_all_routes_access.py' lenresult=2 outcome='passed'>
          finish pytest_collectreport --> [] [hook]
        genitems <Module test_jinja_templates.py> [collection]
          pytest_collectstart [hook]
              collector: <Module test_jinja_templates.py>
          finish pytest_collectstart --> [] [hook]
          pytest_make_collect_report [hook]
              collector: <Module test_jinja_templates.py>
          find_module called for: tests.unit.test_jinja_templates [assertion]
          matched test file '/Users/sarahsloan1/dev/funding-service/tests/unit/test_jinja_templates.py' [assertion]
          rewriting PosixPath('/Users/sarahsloan1/dev/funding-service/tests/unit/test_jinja_templates.py') [assertion]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: @py_builtins
                obj: <module 'builtins' (built-in)>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: @pytest_ar
                obj: <module '_pytest.assertion.rewrite' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/_pytest/assertion/rewrite.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: chain
                obj: <class 'itertools.chain'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: Path
                obj: <class 'pathlib._local.Path'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: pytest
                obj: <module 'pytest' from '/Users/sarahsloan1/dev/funding-service/.venv/lib/python3.13/site-packages/pytest/__init__.py'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: Call
                obj: <class 'jinja2.nodes.Call'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: FromImport
                obj: <class 'jinja2.nodes.FromImport'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: Name
                obj: <class 'jinja2.nodes.Name'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: UnusedJinjaImports
                obj: <class 'tests.unit.test_jinja_templates.UnusedJinjaImports'>
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: root_dir
                obj: /Users/sarahsloan1/dev/funding-service
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: files
                obj: [PosixPath('/Users/sarahsloan1/dev/funding-service/app/access_grant_funding/templates/access_grant_funding/base.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/check_email.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/claim_magic_link.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/mhclg-user-not-authorised.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_magic_link.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/auth/sign_in_sso.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/base.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/403.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/404.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/errors/500.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/fields/accessible-autocomplete.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/govuk/tabs/macro.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/collections.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/macros/status.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/date.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/email.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/integer.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/multiple_choice_from_list.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/root.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/single_choice_from_list.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/url.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/answers/yes_no.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-header.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/mhclg-test-banner.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/common/templates/common/partials/navigation.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/base.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/ask_a_question.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/base.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/check_your_answers.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_submit_confirmation.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/collection_tasklist.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grant_details.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/access/grants_list.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/access_grant_funding_base.html'), PosixPath('/Users/sarahsloan1/dev/funding-service/app/developers/templates/developers/deliver/grant_developers.html')]
            finish pytest_pycollect_makeitem --> None [hook]
            pytest_pycollect_makeitem [hook]
                collector: <Module test_jinja_templates.py>
                name: test_for_unused_jinja_imports
                obj: <function test_for_unused_jinja_imports at 0x13261ea20>
              pytest_generate_tests [hook]
                  metafunc: <_pytest.python.Metafunc object at 0x133097e30>
              finish pytest_generate_tests --> [] [hook]
            finish pytest_pycollect_makeitem --> [<Function test_for_unused_jinja_imports[app/access_grant_funding/templates/access_grant_funding/base.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/check_email.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/claim_magic_link.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/mhclg-user-not-authorised.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_magic_link.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_sso.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/base.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/errors/403.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/errors/404.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/errors/500.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/fields/accessible-autocomplete.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/govuk/tabs/macro.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/macros/collections.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/macros/status.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/date.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/email.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/integer.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/multiple_choice_from_list.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/root.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/single_choice_from_list.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/url.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/yes_no.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-header.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-test-banner.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/navigation.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/base.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/ask_a_question.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/base.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/check_your_answers.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_submit_confirmation.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_tasklist.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grant_details.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grants_list.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/access_grant_funding_base.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/grant_developers.html]>] [hook]
          finish pytest_make_collect_report --> <CollectReport 'tests/unit/test_jinja_templates.py' lenresult=77 outcome='passed'> [hook]
        genitems <Function test_for_unused_jinja_imports[app/access_grant_funding/templates/access_grant_funding/base.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/access_grant_funding/templates/access_grant_funding/base.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/auth/check_email.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/auth/check_email.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/auth/claim_magic_link.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/auth/claim_magic_link.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/auth/mhclg-user-not-authorised.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/auth/mhclg-user-not-authorised.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_magic_link.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_magic_link.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_sso.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_sso.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/base.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/base.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/errors/403.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/errors/403.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/errors/404.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/errors/404.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/errors/500.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/errors/500.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/fields/accessible-autocomplete.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/fields/accessible-autocomplete.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/govuk/tabs/macro.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/govuk/tabs/macro.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/macros/collections.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/macros/collections.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/macros/status.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/macros/status.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/date.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/date.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/email.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/email.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/integer.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/integer.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/multiple_choice_from_list.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/multiple_choice_from_list.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/root.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/root.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/single_choice_from_list.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/single_choice_from_list.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/url.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/url.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/yes_no.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/yes_no.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-header.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-header.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-test-banner.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-test-banner.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/common/templates/common/partials/navigation.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/common/templates/common/partials/navigation.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/base.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/base.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/ask_a_question.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/ask_a_question.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/base.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/base.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/check_your_answers.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/check_your_answers.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_submit_confirmation.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_submit_confirmation.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_tasklist.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_tasklist.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grant_details.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grant_details.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grants_list.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grants_list.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/access_grant_funding_base.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/access_grant_funding_base.html]>
          finish pytest_itemcollected --> [] [hook]
        genitems <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/grant_developers.html]> [collection]
          pytest_itemcollected [hook]
              item: <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/grant_developers.html]>
          finish pytest_itemcollected --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport 'tests/unit/test_jinja_templates.py' lenresult=77 outcome='passed'>
          finish pytest_collectreport --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport 'tests/unit' lenresult=6 outcome='passed'>
          finish pytest_collectreport --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport 'tests' lenresult=3 outcome='passed'>
          finish pytest_collectreport --> [] [hook]
          pytest_collectreport [hook]
              report: <CollectReport '.' lenresult=5 outcome='passed'>
          finish pytest_collectreport --> [] [hook]
          pytest_collection_modifyitems [hook]
              session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=2 testscollected=0>
              config: <_pytest.config.Config object at 0x106844910>
              items: [<Function test_create_and_preview_report[chromium]>, <Function test_create_view_edit_grant_success[chromium]>, <Function test_magic_link_redirect_journey[chromium]>, <Function test_stub_sso_journey[chromium]>, <Function test_real_sso_journey[chromium]>, <Function test_start_chrome[chromium]>, <Function test_get>, <Function test_post_invalid_email>, <Function test_post_mhclg_email_redirects_to_sso>, <Function test_post_valid_non_mhclg_email>, <Function test_post_valid_email_with_redirect[/blah/blah-/blah/blah]>, <Function test_post_valid_email_with_redirect[https://bad.place/blah-/]>, <Function test_get>, <Function test_get>, <Function test_redirect_on_unknown_magic_link>, <Function test_redirect_on_used_magic_link>, <Function test_redirect_on_expired_magic_link>, <Function test_post_claims_link_and_creates_user_and_redirects[/blah/blah-/blah/blah]>, <Function test_post_claims_link_and_creates_user_and_redirects[https://bad.place/blah-/]>, <Function test_get>, <Function test_get>, <Function test_get_without_fsd_admin_role_and_with_no_assigned_roles>, <Function test_login_with_grant_member_role>, <Function test_get_without_any_roles_should_403>, <Function test_get_valid_token_with_redirect>, <Function test_platform_admin_first_login>, <Function test_platform_admin_with_fsd_admin_role_removed>, <Function test_platform_admin_with_grant_member_role_fsd_admin_role_removed>, <Function test_platform_admin_remove_all_other_roles>, <Function test_platform_admin_signin_claims_pending_invitations>, <Function test_grant_member_with_valid_invites_first_login>, <Function test_invalid_grant_team_member_invitations_403>, <Function test_magic_link_get>, <Function test_sso_get>, <Function test_validation_attached_to_field_and_runs__text[This is an answer\non multiple lines-None-Multiple lines of text]>, <Function test_validation_attached_to_field_and_runs__text[Test string-None-Multiple lines of text]>, <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Multiple lines of text]>, <Function test_validation_attached_to_field_and_runs__text[Test string-None-Single line of text]>, <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Single line of text]>, <Function test_validation_attached_to_field_and_runs__integer[-50-The answer must be greater than or equal to 0]>, <Function test_validation_attached_to_field_and_runs__integer[1000-The answer must be less than 100]>, <Function test_validation_attached_to_field_and_runs__integer[50-None]>, <Function test_validation_attached_to_field_and_runs__integer[0-None]>, <Function test_validation_attached_to_field_and_runs__integer[None-Not a valid integer value.]>, <Function test_validation_attached_to_field_and_runs__integer[abcd-Not a valid integer value.]>, <Function test_validation_attached_to_field_and_runs__integer[-Enter the test_integer]>, <Function test_special_radio_field_enhancement_to_autocomplete>, <Function test_validation_attached_to_multiple_fields>, <Function test_email_strips_empty_chars[  email@email.com  -True-email@email.com]>, <Function test_email_strips_empty_chars[  not-an-email  -False-not-an-email]>, <Function test_url_strips_empty_chars[  www.google.com  -True-www.google.com]>, <Function test_url_strips_empty_chars[  not-a-url  -False-not-a-url]>, <Function test_member_role_not_platform>, <Function test_unique_constraint_with_nulls>, <Function test_cannot_add_two_of_the_same_kind_of_validation_to_a_question>, <Function test_get_collection>, <Function test_get_collection_version>, <Function test_get_collection_version_latest_by_default>, <Function test_get_collection_with_grant_id>, <Function test_get_collection_with_type>, <Function test_create_collection>, <Function test_create_collection_name_is_unique_per_grant>, <Function test_get_submission>, <Function test_get_submission_with_full_schema>, <Function test_get_form>, <Function test_get_form_with_all_questions>, <Function test_get_form_with_grant>, <Function test_create_form>, <Function test_form_name_unique_in_collection>, <Function test_move_form_up_down>, <Function test_get_question>, <Function test_get_group>, <Function test_create_group>, <Function test_create_group_presentation_options>, <Function test_create_nested_components>, <Function test_update_group>, <Function test_update_group_unique_overlap>, <Function test_update_group_with_question_dependencies_cant_enable_same_page>, <Function test_update_group_with_question_dependencies_can_disable_same_page>, <Function test_update_group_with_guidance_fields>, <Function test_simple_types[Single line of text]>, <Function test_simple_types[Email address]>, <Function test_simple_types[Website address (URL)]>, <Function test_integer>, <Function test_text_multi_line>, <Function test_yes_no>, <Function test_radios>, <Function test_checkboxes>, <Function test_date>, <Function test_break_if_new_question_types_added>, <Function test_question_requires_data_type>, <Function test_question_associated_with_group>, <Function test_simple_types[Single line of text]>, <Function test_simple_types[Email address]>, <Function test_simple_types[Website address (URL)]>, <Function test_integer>, <Function test_text_multi_line>, <Function test_yes_no>, <Function test_radios>, <Function test_update_radios_question_options_errors_on_referenced_data_items>, <Function test_update_checkboxes_question_options_errors_on_referenced_data_items>, <Function test_checkboxes>, <Function test_date>, <Function test_break_if_new_question_types_added>, <Function test_update_question_with_guidance_fields>, <Function test_update_question_guidance_optional_parameters>, <Function test_update_question_clear_guidance_fields>, <Function test_move_question_up_down>, <Function test_move_question_with_dependencies>, <Function test_move_group_with_dependencies>, <Function test_move_group_with_child_dependencies>, <Function test_move_question_with_group_dependencies>, <Function test_move_group_with_group_dependencies>, <Function test_raise_if_question_has_any_dependencies>, <Function test_raise_if_group_has_any_dependencies>, <Function test_raise_if_group_questions_depend_on_each_other>, <Function test_raise_if_radios_data_source_item_reference_dependency>, <Function test_raise_if_checkboxes_data_source_item_reference_dependency>, <Function test_update_submission_data>, <Function test_add_submission_event>, <Function test_clear_events_from_submission>, <Function test_get_collection_with_full_schema>, <Function test_with_nested_group_order>, <Function test_add_question_condition>, <Function test_add_condition_raises_if_same_page>, <Function test_add_radios_question_condition>, <Function test_add_checkboxes_question_condition>, <Function test_add_question_condition_blocks_on_order>, <Function test_add_question_validation>, <Function test_update_expression>, <Function test_update_anyof_expression>, <Function test_update_specifically_expression>, <Function test_update_expression_errors_on_validation_overlap>, <Function test_remove_expression>, <Function test_get_expression>, <Function test_get_expression_missing>, <Function test_get_expression_by_id>, <Function test_get_expression_by_id_missing>, <Function test_get_referenced_data_source_items_by_anyof_managed_expression>, <Function test_get_referenced_data_source_items_by_specifically_managed_expression>, <Function test_delete>, <Function test_delete_cascades_downstream>, <Function test_can_delete_with_test_submissions>, <Function test_cannot_delete_if_live_submissions>, <Function test_delete>, <Function test_form_reordering>, <Function test_delete>, <Function test_form_reordering>, <Function test_delete_group>, <Function test_nested_question_in_group>, <Function test_delete_test_collection_submissions_created_by_user>, <Function test_get_grant>, <Function test_get_all_grants_platform_admin>, <Function test_get_all_grants_member>, <Function test_get_all_grants_by_user>, <Function test_create_grant>, <Function test_create_duplicate_grant>, <Function test_update_grant_success>, <Function test_update_grant_duplicate_name>, <Function test_updated_grant_nothing_provided>, <Function test_grant_name_exists_true>, <Function test_grant_name_exists_false>, <Function test_grant_name_exists_case_insensitive>, <Function test_grant_name_exists_exclude_current_grant>, <Function test_create_magic_link_existing_user>, <Function test_create_magic_link_new_user>, <Function test_create_magic_link_check_expiry_time>, <Function test_create_magic_link_expires_other_magic_links_for_the_user>, <Function test_get_magic_link_by_id>, <Function test_get_magic_link_by_code>, <Function test_claim_magic_link_success>, <Function test_claim_magic_link_fail_no_user>, <Function test_get_user_by_id>, <Function test_get_existing_user>, <Function test_get_user_where_none_exists>, <Function test_get_existing_user>, <Function test_get_user_where_none_exists>, <Function test_set_user_last_logged_in_at_utc>, <Function test_create_new_user>, <Function test_get_existing_user_with_update>, <Function test_create_new_user>, <Function test_get_existing_user_with_update>, <Function test_add_user_role[False-False-admin]>, <Function test_add_user_role[True-False-member]>, <Function test_multiple_roles_treated_as_distinct_and_dont_overwrite>, <Function test_add_existing_user_role>, <Function test_upsert_existing_user_role>, <Function test_add_invalid_user_role[False-False-member-A 'member' role must be linked to an organisation or grant.]>, <Function test_set_platform_admin_role_for_user>, <Function test_set_platform_admin_role_already_exists>, <Function test_set_platform_admin_multiple_roles_already_exists>, <Function test_set_grant_team_role_for_user>, <Function test_set_grant_team_role_already_exists>, <Function test_remove_platform_admin_role_from_user>, <Function test_remove_platform_admin_role_when_only_other_roles_exist>, <Function test_remove_grant_team_role_from_user>, <Function test_remove_grant_team_role_from_user_with_multiple_roles>, <Function test_remove_all_roles_from_user>, <Function test_create_invitation>, <Function test_create_invitation_expires_existing_invitations>, <Function test_create_invitation_expires_existing_invitations_when_org_grant_null>, <Function test_get_invitation>, <Function test_claim_invitation>, <Function test_get_usable_invitations_by_email>, <Function test_create_user_and_claim_invitations>, <Function test_grant_member_add_role_or_create_invitation_adds_role>, <Function test_grant_member_add_role_or_create_invitation_creates_invitation>, <Function test_upsert_platform_admin_user_and_set_platform_admin_role_claims_invitations>, <Function test_test_submission_property_only_includes_test_submissions>, <Function test_question_property_selects_expressions>, <Function test_question_gets_a_valid_expression_that_belongs_to_it>, <Function test_question_does_not_get_a_valid_expression_that_does_not_belong_to_it>, <Function test_data_source_items>, <Function test_data_source_items_last_item_is_distinct>, <Function test_questions_property_filters_nested_questions>, <Function test_questions_property_filters_nested_questions>, <Function test_same_page_property[True]>, <Function test_same_page_property[False]>, <Function test_layering>, <Function test_iteration>, <Function test_get>, <Function test_length>, <Function test_contains>, <Function test_keys>, <Function test_values>, <Function test_items>, <Function test_greater_than>, <Function test_managed_expression_with_required_function_allowed_imported[question_value0-True]>, <Function test_managed_expression_with_required_function_allowed_imported[question_value1-False]>, <Function test_managed_expression_with_required_function_allowed_builtin[309-True]>, <Function test_managed_expression_with_required_function_allowed_builtin[0-False]>, <Function test_managed_expression_with_required_function_allowed_custom[100-True]>, <Function test_managed_expression_with_required_function_allowed_custom[5-False]>, <Function test_managed_expression_with_required_function_builtin_not_present_builtin>, <Function test_managed_expression_with_required_function_not_present_custom>, <Function test_gets_referenced_question>, <Function test_evaluate[1000-False-999-False]>, <Function test_evaluate[1000-False-1000-False]>, <Function test_evaluate[1000-True-1000-True]>, <Function test_evaluate[1000-False-1001-True]>, <Function test_evaluate[1000-False-999-True]>, <Function test_evaluate[1000-False-1000-False]>, <Function test_evaluate[1000-True-1000-True]>, <Function test_evaluate[1000-False-1001-False]>, <Function test_evaluate[0-False-1000-False-0-False]>, <Function test_evaluate[0-True-1000-False-0-True]>, <Function test_evaluate[0-False-1000-False-1-True]>, <Function test_evaluate[0-False-1000-False-999-True]>, <Function test_evaluate[0-False-1000-False-1000-False]>, <Function test_evaluate[0-True-1000-True-1000-True]>, <Function test_evaluate[items0-red-True]>, <Function test_evaluate[items1-blue-True]>, <Function test_evaluate[items2-Blue-False]>, <Function test_evaluate[items3-green-False]>, <Function test_evaluate[True-True]>, <Function test_evaluate[False-False]>, <Function test_evaluate[True-False]>, <Function test_evaluate[False-True]>, <Function test_evaluate[item0-answers0-True]>, <Function test_evaluate[item1-answers1-True]>, <Function test_evaluate[item2-answers2-False]>, <Function test_evaluate[item3-answers3-False]>, <Function test_evaluate[False-answer0-True]>, <Function test_evaluate[False-answer1-False]>, <Function test_evaluate[True-answer2-True]>, <Function test_evaluate[False-answer3-False]>, <Function test_evaluate[False-answer0-False]>, <Function test_evaluate[False-answer1-False]>, <Function test_evaluate[True-answer2-True]>, <Function test_evaluate[False-answer3-True]>, <Function test_evaluate[False-False-answer0-False]>, <Function test_evaluate[False-False-answer1-False]>, <Function test_evaluate[True-False-answer2-True]>, <Function test_evaluate[True-True-answer3-True]>, <Function test_evaluate[False-False-answer4-True]>, <Function test_evaluate[True-False-answer5-True]>, <Function test_evaluate[False-False-answer6-False]>, <Function test_evaluate[False-False-answer7-False]>, <Function test_evaluate[True-True-answer8-True]>, <Function test_evaluate[False-True-answer9-True]>, <Function test_evaluate[False-False-answer10-True]>, <Function test_evaluate[False-True-answer11-True]>, <Function test_get_registered_data_types>, <Function test_get_supported_form_questions_filters_question_types>, <Function test_get_supported_form_questions_filters_out_the_current_question>, <Function test_new_managed_expressions_added>, <Function test_submit_valid_data>, <Function test_get_data_maps_type>, <Function test_can_get_falsey_answers>, <Function test_cannot_submit_answer_on_submitted_submission>, <Function test_no_submission_data>, <Function test_with_submission_data>, <Function test_no_submission_data>, <Function test_with_submission_data>, <Function test_form_status_based_on_questions>, <Function test_form_status_with_no_questions>, <Function test_submission_status_based_on_forms>, <Function test_toggle_form_status>, <Function test_toggle_form_status_doesnt_change_status_if_already_completed>, <Function test_submit_submission_rejected_if_not_complete>, <Function test_init_collection_helper>, <Function test_generate_csv_content_check_correct_rows_for_multiple_simple_submissions_every_question_type>, <Function test_generate_csv_content_skipped_questions>, <Function test_generate_csv_content_skipped_questions_previously_answered>, <Function test_all_question_types_appear_correctly_in_csv_row>, <Function test_all_question_types_appear_correctly_in_json_export>, <Function test_multiple_submission_export_non_conditional[1]>, <Function test_multiple_submission_export_non_conditional[2]>, <Function test_multiple_submission_export_non_conditional[3]>, <Function test_multiple_submission_export_non_conditional[5]>, <Function test_multiple_submission_export_non_conditional[12]>, <Function test_multiple_submission_export_non_conditional[60]>, <Function test_multiple_submission_export_non_conditional[100]>, <Function test_multiple_submission_export_non_conditional[500]>, <Function test_multiple_submission_export_conditional[1]>, <Function test_multiple_submission_export_conditional[2]>, <Function test_multiple_submission_export_conditional[3]>, <Function test_multiple_submission_export_conditional[5]>, <Function test_multiple_submission_export_conditional[12]>, <Function test_multiple_submission_export_conditional[60]>, <Function test_multiple_submission_export_conditional[100]>, <Function test_multiple_submission_export_conditional[500]>, <Function test_post_unauthorised_if_not_mhclg_email_address>, <Function test_post_success_with_mhclg_user>, <Function test_number_to_ordinal[1-first]>, <Function test_number_to_ordinal[2-second]>, <Function test_number_to_ordinal[3-third]>, <Function test_number_to_ordinal[10-tenth]>, <Function test_number_to_ordinal[11-eleventh]>, <Function test_number_to_ordinal[12-twelfth]>, <Function test_number_to_ordinal[13-thirteenth]>, <Function test_number_to_ordinal[14-fourteenth]>, <Function test_number_to_ordinal[21-twenty-first]>, <Function test_as_platform_admin>, <Function test_as_grant_admin>, <Function test_as_grant_member>, <Function test_grant_change_ggis_get>, <Function test_grant_change_ggis_post>, <Function test_grant_change_name_get>, <Function test_grant_change_name_post>, <Function test_grant_change_name_post_with_errors>, <Function test_grant_change_description_get>, <Function test_grant_change_description_post>, <Function test_grant_change_contact_get>, <Function test_grant_change_contact_post>, <Function test_grant_setup_intro_get>, <Function test_grant_setup_intro_post>, <Function test_grant_setup_ggis_get_with_session>, <Function test_grant_setup_ggis_get_without_session_redirects>, <Function test_grant_setup_ggis_post_with_ggis>, <Function test_grant_setup_ggis_post_no_ggis_redirects_to_required_info>, <Function test_grant_setup_ggis_required_info_get>, <Function test_grant_setup_name_get_with_session>, <Function test_grant_setup_name_post>, <Function test_grant_setup_description_get_with_session>, <Function test_grant_setup_description_post_too_long>, <Function test_grant_setup_description_post_valid>, <Function test_grant_setup_contact_get_with_session>, <Function test_grant_setup_contact_post_valid>, <Function test_grant_check_your_answers_post_creates_grant>, <Function test_list_users_for_grant_with_platform_admin_and_no_member>, <Function test_list_users_for_grant_with_platform_admin_check_add_member_button>, <Function test_list_users_for_grant_with_member_no_add_member_button>, <Function test_list_users_for_grant_with_not_logged_in_members>, <Function test_list_users_for_grant_with_member>, <Function test_add_user_to_grant_with_platform_admin_add_another_platform_admin>, <Function test_add_user_to_grant_with_platform_admin_add_member>, <Function test_add_user_to_grant_with_platform_admin_add_same_member_again>, <Function test_add_user_to_grant_creates_invitation_for_new_user>, <Function test_add_user_to_grant_adds_existing_user_no_invitation>, <Function test_list_grants_as_admin>, <Function test_list_grants_as_member_with_single_grant>, <Function test_list_grants_as_member_with_multiple_grants>, <Function test_list_grant_requires_mhclg_user>, <Function test_404>, <Function test_grant_member_get_no_reports[authenticated_grant_member_client-False]>, <Function test_grant_member_get_no_reports[authenticated_grant_admin_client-True]>, <Function test_grant_member_get_with_reports[authenticated_grant_member_client-False]>, <Function test_grant_member_get_with_reports[authenticated_grant_admin_client-True]>, <Function test_grant_member_get_with_reports[authenticated_platform_admin_client-True]>, <Function test_get_hides_delete_link_with_submissions>, <Function test_get_with_delete_parameter_no_submissions>, <Function test_post_delete[authenticated_grant_member_client-False]>, <Function test_post_delete[authenticated_grant_admin_client-True]>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post[authenticated_grant_member_client-False]>, <Function test_post[authenticated_grant_admin_client-True]>, <Function test_post_duplicate_report_name>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_delete_parameter_with_live_submissions>, <Function test_post_update_name[authenticated_grant_member_client-False]>, <Function test_post_update_name[authenticated_grant_admin_client-True]>, <Function test_post_update_name_duplicate>, <Function test_update_name_when_delete_banner_showing_does_not_delete>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post[authenticated_grant_member_client-False]>, <Function test_post[authenticated_grant_admin_client-True]>, <Function test_post_duplicate_form_name>, <Function test_404>, <Function test_get_no_tasks[authenticated_grant_member_client-False]>, <Function test_get_no_tasks[authenticated_grant_admin_client-True]>, <Function test_get_with_tasks[authenticated_grant_member_client-False]>, <Function test_get_with_tasks[authenticated_grant_admin_client-True]>, <Function test_post_list_report_tasks_preview[authenticated_no_role_client-False]>, <Function test_post_list_report_tasks_preview[authenticated_grant_member_client-True]>, <Function test_post_list_report_tasks_preview[authenticated_grant_admin_client-True]>, <Function test_404>, <Function test_400>, <Function test_move[up]>, <Function test_move[down]>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_duplicate>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_change_same_page_with_question_inter_dependencies>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_blocked_if_live_submissions>, <Function test_post_update_name[authenticated_grant_member_client-False]>, <Function test_post_update_name[authenticated_grant_admin_client-True]>, <Function test_post_update_name_duplicate>, <Function test_404>, <Function test_admin_actions[authenticated_grant_member_client-False]>, <Function test_admin_actions[authenticated_grant_admin_client-True]>, <Function test_delete_confirmation_banner>, <Function test_cannot_delete_with_depended_on_questions_in_group>, <Function test_404>, <Function test_admin_actions[authenticated_grant_member_client-False]>, <Function test_admin_actions[authenticated_grant_admin_client-True]>, <Function test_delete_confirmation_banner>, <Function test_cannot_delete_with_live_submissions>, <Function test_post_list_task_questions_preview[authenticated_no_role_client-False]>, <Function test_post_list_task_questions_preview[authenticated_grant_member_client-True]>, <Function test_post_list_task_questions_preview[authenticated_grant_admin_client-True]>, <Function test_post_list_task_questions_returns_to_task_list>, <Function test_404>, <Function test_no_access_for_grant_members>, <Function test_400>, <Function test_move[up]>, <Function test_move[down]>, <Function test_move_group>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_add_to_group>, <Function test_404>, <Function test_missing_name>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_duplicate>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_group>, <Function test_post>, <Function test_post_dependency_order_errors>, <Function test_post_data_source_item_errors>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_available_questions[authenticated_grant_member_client-False]>, <Function test_get_with_available_questions[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_rejects_same_page_group>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_for_group>, <Function test_post_duplicate_condition>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_delete_parameter>, <Function test_post_update_condition>, <Function test_post_update_group_condition>, <Function test_post_update_condition_duplicate>, <Function test_post_delete>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_no_validation_available>, <Function test_post>, <Function test_post_duplicate_validation>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_delete_parameter>, <Function test_post_update_validation>, <Function test_post_update_validation_duplicate>, <Function test_post_delete>, <Function test_404>, <Function test_get_access_control[authenticated_grant_member_client-False]>, <Function test_get_access_control[authenticated_grant_admin_client-True]>, <Function test_get_add_guidance>, <Function test_get_edit_guidance>, <Function test_post_add_guidance>, <Function test_post_update_guidance>, <Function test_post_clear_guidance>, <Function test_post_guidance_with_heading_or_text_but_not_Both>, <Function test_get_edit_guidance_groups>, <Function test_post_update_guidance_groups>, <Function test_404>, <Function test_no_submissions>, <Function test_based_on_submission_mode>, <Function test_404>, <Function test_unknown_export_type>, <Function test_csv_download>, <Function test_json_download>, <Function test_404>, <Function test_forms_and_questions_and_answers_displayed>, <Function test_get_submission_tasklist[authenticated_no_role_client-False]>, <Function test_get_submission_tasklist[authenticated_grant_member_client-True]>, <Function test_get_submission_tasklist[authenticated_grant_admin_client-True]>, <Function test_get_other_users_submission_tasklist_403s[authenticated_no_role_client]>, <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_member_client]>, <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_admin_client]>, <Function test_post_submission_tasklist_test[authenticated_no_role_client-False]>, <Function test_post_submission_tasklist_test[authenticated_grant_member_client-True]>, <Function test_post_submission_tasklist_test[authenticated_grant_admin_client-True]>, <Function test_post_submission_tasklist_live[authenticated_no_role_client-False]>, <Function test_post_submission_tasklist_live[authenticated_grant_member_client-True]>, <Function test_post_submission_tasklist_live[authenticated_grant_admin_client-True]>, <Function test_get_ask_a_question[authenticated_no_role_client-False]>, <Function test_get_ask_a_question[authenticated_grant_member_client-True]>, <Function test_get_ask_a_question[authenticated_grant_admin_client-True]>, <Function test_get_other_users_ask_a_question_403s[authenticated_no_role_client]>, <Function test_get_other_users_ask_a_question_403s[authenticated_grant_member_client]>, <Function test_get_other_users_ask_a_question_403s[authenticated_grant_admin_client]>, <Function test_get_ask_a_question_with_failing_condition_redirects>, <Function test_post_ask_a_question[authenticated_no_role_client-False]>, <Function test_post_ask_a_question[authenticated_grant_member_client-True]>, <Function test_post_ask_a_question[authenticated_grant_admin_client-True]>, <Function test_question_without_guidance_uses_question_as_heading>, <Function test_question_with_guidance_uses_guidance_heading>, <Function test_group_same_page_with_questions_uses_group_guidance>, <Function test_get_check_your_answers[authenticated_no_role_client-False]>, <Function test_get_check_your_answers[authenticated_grant_member_client-True]>, <Function test_get_check_your_answers[authenticated_grant_admin_client-True]>, <Function test_get_other_users_check_your_answers_403s[authenticated_no_role_client]>, <Function test_get_other_users_check_your_answers_403s[authenticated_grant_member_client]>, <Function test_get_other_users_check_your_answers_403s[authenticated_grant_admin_client]>, <Function test_post_check_your_answers_complete_form[authenticated_no_role_client-False]>, <Function test_post_check_your_answers_complete_form[authenticated_grant_member_client-True]>, <Function test_post_check_your_answers_complete_form[authenticated_grant_admin_client-True]>, <Function test_post_check_your_answers_complete_test_preview[authenticated_no_role_client-False]>, <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_member_client-True]>, <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_admin_client-True]>, <Function test_start_testing_submission>, <Function test_db_session_is_committed>, <Function test_db_session_is_rolled_back_and_doesnt_error_when_handled>, <Function test_db_session_throws_appropriately_on_commit_if_not_handled>, <Function test_assets_live_enabled>, <Function test_assets_static_manifest>, <Function test_assets_no_manifest_production>, <Function test_assets_no_manifest_non_production>, <Function test_healthcheck>, <Function test_basic_auth_disabled>, <Function test_basic_auth_enabled_requires_username_and_password>, <Function test_basic_auth_enabled>, <Function test_basic_auth_enabled_allows_healthcheck>, <Function test_app_404_on_unknown_url>, <Function test_app_404_on_sqlalchemy_not_found>, <Function test_app_500_on_internal_server_error>, <Function test_create_frozen_time>, <Function test_update_frozen_time_no_tick>, <Function test_update_frozen_time_with_tick>, <Function test_request_fixture_invalid_time_raises_value_error>, <Function test_collection_factory_completed_submissions>, <Function test_basic_log_message>, <Function test_can_log_simple_interpolated_values[hello]>, <Function test_can_log_simple_interpolated_values[1]>, <Function test_can_log_simple_interpolated_values[1.0]>, <Function test_can_log_simple_interpolated_values[True]>, <Function test_cannot_log_complex_data_types[complex0]>, <Function test_cannot_log_complex_data_types[complex1]>, <Function test_cannot_log_complex_data_types[complex2]>, <Function test_cannot_log_complex_data_types[complex3]>, <Function test_has_logged_in[John-last_logged_in0-True]>, <Function test_has_logged_in[John-None-False]>, <Function test_has_logged_in[None-last_logged_in2-True]>, <Function test_has_logged_in[None-None-False]>, <Function test_is_mhclg_user[person@gmail.com-False]>, <Function test_is_mhclg_user[person@communities.gov.uk-True]>, <Function test_is_mhclg_user[person@test.communities.gov.uk-True]>, <Function test_is_platform_admin[admin-False-True]>, <Function test_is_platform_admin[admin-True-False]>, <Function test_is_platform_admin[member-True-False]>, <Function test_is_platform_admin_works_for_anonymous_user>, <Function test_is_grant_admin_correct_grant[admin-True]>, <Function test_is_grant_admin_correct_grant[member-False]>, <Function test_is_grant_admin_incorrect_grant[admin]>, <Function test_is_grant_admin_incorrect_grant[member]>, <Function test_is_grant_admin_for_grant_roles[admin-True]>, <Function test_is_grant_admin_for_grant_roles[member-False]>, <Function test_is_grant_admin_if_platform_admin>, <Function test_is_grant_member_true[admin]>, <Function test_is_grant_member_true[member]>, <Function test_is_grant_member_false_member_of_different_grant[admin]>, <Function test_is_grant_member_false_member_of_different_grant[member]>, <Function test_is_grant_member_false_not_got_member_role>, <Function test_is_grant_member_overriden_by_platform_admin>, <Function test_has_grant_role[admin-True]>, <Function test_has_grant_role[member-True]>, <Function test_has_grant_role[S151_OFFICER-expected2]>, <Function test_redirect_sanitisation[/-/]>, <Function test_redirect_sanitisation[/blah/blah-/blah/blah]>, <Function test_redirect_sanitisation[http://funding.communities.gov.localhost:8080/blah-/blah]>, <Function test_redirect_sanitisation[mailto://funding.communities.gov.localhost:8080/blah-/]>, <Function test_redirect_sanitisation[http://bad.domain.localhost:8080/blah-/]>, <Function test_redirect_sanitisation[//blah-/]>, <Function test_redirect_sanitisation[///blah-/blah]>, <Function test_redirect_sanitisation[/blah?query=param-/blah?query=param]>, <Function test_question_attached_by_id>, <Function test_multiple_questions_attached_by_id>, <Function test_build_form_context>, <Function test_expected_fields_exist>, <Function test_the_next_test_exhausts_QuestionDataType>, <Function test_expected_field_types[Single line of text-presentation_options0-StringField-GovTextInput-expected_validators0]>, <Function test_expected_field_types[Multiple lines of text-presentation_options1-StringField-GovTextArea-expected_validators1]>, <Function test_expected_field_types[Multiple lines of text-presentation_options2-StringField-GovCharacterCount-expected_validators2]>, <Function test_expected_field_types[Whole number-presentation_options3-IntegerField-GovTextInput-expected_validators3]>, <Function test_expected_field_types[Yes or no-presentation_options4-RadioField-GovRadioInput-expected_validators4]>, <Function test_expected_field_types[Select one from a list (radios)-presentation_options5-RadioField-MHCLGRadioInput-expected_validators5]>, <Function test_expected_field_types[Email address-presentation_options6-EmailField-GovTextInput-expected_validators6]>, <Function test_expected_field_types[Website address (URL)-presentation_options7-StringField-GovTextInput-expected_validators7]>, <Function test_expected_field_types[Select one or more from a list (checkboxes)-presentation_options8-SelectMultipleField-MHCLGCheckboxesInput-expected_validators8]>, <Function test_expected_field_types[A date-presentation_options9-DateField-GovDateInput-expected_validators9]>, <Function test_break_if_new_question_types_added>, <Function test_form_runner_loads_and_sets_context>, <Function test_form_runner_loads_and_sets_context_for_same_page_group>, <Function test_form_runner_correctly_configures_dynamic_question_form>, <Function test_form_runner_only_configures_visible_questions_for_same_page>, <Function test_form_runner_correctly_configured_dynamic_question_form_for_same_page>, <Function test_calls_mapped_urls_with_the_right_information>, <Function test_next_url>, <Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[question]>, <Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[check-your-answers]>, <Function test_back_url>, <Function test_next_back_url_for_group>, <Function test_runners_url_map_resolves[DGFFormRunner]>, <Function test_runners_url_map_resolves[AGFFormRunner]>, <Function test_all_answer_types_tested>, <Function test_get_value_for_submission[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_submission[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_submission[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_submission[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_submission[YesNoAnswer-True-Yes]>, <Function test_get_value_for_form[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_form[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_form[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_form[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_form[YesNoAnswer-True-Yes]>, <Function test_get_value_for_expression[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_expression[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_expression[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_expression[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_expression[YesNoAnswer-True-Yes]>, <Function test_get_value_for_text_export[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_text_export[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_text_export[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_text_export[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_text_export[YesNoAnswer-True-Yes]>, <Function test_get_value_for_submission[IntegerAnswer-data0-submission_data0]>, <Function test_get_value_for_submission[IntegerAnswer-data1-submission_data1]>, <Function test_get_value_for_submission[IntegerAnswer-data2-submission_data2]>, <Function test_get_value_for_submission[SingleChoiceFromListAnswer-data3-submission_data3]>, <Function test_get_value_for_submission[DateAnswer-data4-submission_data4]>, <Function test_get_value_for_form[IntegerAnswer-data0-50]>, <Function test_get_value_for_form[SingleChoiceFromListAnswer-data1-key]>, <Function test_get_value_for_expression[IntegerAnswer-data0-50]>, <Function test_get_value_for_expression[SingleChoiceFromListAnswer-data1-key]>, <Function test_get_value_for_text_export[IntegerAnswer-data0-50]>, <Function test_get_value_for_text_export[IntegerAnswer-data1-\xa31,000,000]>, <Function test_get_value_for_text_export[IntegerAnswer-data2-1,000,000lbs]>, <Function test_get_value_for_text_export[SingleChoiceFromListAnswer-data3-label]>, <Function test_get_value_for_text_export[DateAnswer-data4-2023-10-05]>, <Function test_get_components_empty>, <Function test_get_components_flat>, <Function test_get_components_nested>, <Function test_get_components_filters_nested>, <Function test_get_components_nested_orders>, <Function test_get_components_nested_depth_5>, <Function test_allowed_expressions[expression0-False]>, <Function test_allowed_expressions[expression1-1]>, <Function test_allowed_expressions[expression2-True]>, <Function test_allowed_expressions[expression3-2]>, <Function test_allowed_expressions[expression4-0]>, <Function test_allowed_expressions[expression5-2]>, <Function test_allowed_expressions[expression6-5]>, <Function test_allowed_expressions[expression7-True]>, <Function test_allowed_expressions[expression8-False]>, <Function test_allowed_expressions[expression9-True]>, <Function test_allowed_expressions[expression10-False]>, <Function test_allowed_expressions[expression11-False]>, <Function test_allowed_expressions[expression12-True]>, <Function test_allowed_expressions[expression13-False]>, <Function test_allowed_expressions[expression14-1]>, <Function test_allowed_expressions[expression15-potato]>, <Function test_disallowed_expressions[expression0]>, <Function test_disallowed_expressions[expression1]>, <Function test_disallowed_expressions[expression2]>, <Function test_disallowed_expressions[expression3]>, <Function test_disallowed_expressions[expression4]>, <Function test_disallowed_expressions[expression5]>, <Function test_disallowed_expressions[expression6]>, <Function test_disallowed_expressions[expression7]>, <Function test_disallowed_expressions[expression8]>, <Function test_disallowed_expressions[expression9]>, <Function test_disallowed_expressions[expression10]>, <Function test_disallowed_expressions[expression11]>, <Function test_disallowed_expressions[expression12]>, <Function test_disallowed_expressions[expression13]>, <Function test_disallowed_expressions[expression14]>, <Function test_disallowed_expressions[expression15]>, <Function test_disallowed_expressions[expression16]>, <Function test_disallowed_expressions[expression17]>, <Function test_disallowed_expressions[expression18]>, <Function test_disallowed_expressions[expression19]>, <Function test_disallowed_expressions[expression20]>, <Function test_disallowed_expressions[expression21]>, <Function test_disallowed_expressions[expression22]>, <Function test_disallowed_expressions[expression23]>, <Function test_unknown_variable>, <Function test_ok_with_boolean_result>, <Function test_additional_context>, <Function test_raise_on_non_boolean_result>, <Function test_integer_data_type>, <Function test_recognises_invalid_data_for_a_managed_expression>, <Function test_can_build_a_managed_expression_from_valid_data>, <Function test_standard_radios_are_not_divided>, <Function test_divided_radios>, <Function test_standard_checkboxes_are_not_divided>, <Function test_divided_checkboxes>, <Function test_max_words_valid_within_limit>, <Function test_max_words_invalid_exceeds_limit>, <Function test_min_words_valid_above_minimum>, <Function test_min_words_invalid_below_minimum>, <Function test_meets_exact_range>, <Function test_outside_exact_range>, <Function test_valid_within_range>, <Function test_invalid_outside_range>, <Function test_both_min_words_or_max_words_absent>, <Function test_min_words_greater_than_max_words>, <Function test_field_display_name>, <Function test_valid_email_with_allowed_domain>, <Function test_valid_email_with_disallowed_domain>, <Function test_invalid_email_format>, <Function test_case_insensitive_domain_match>, <Function test_missing_internal_domains_config>, <Function test_urls[www.google.com]>, <Function test_urls[http://www.google.com]>, <Function test_urls[https://www.google.com]>, <Function test_urls[https://gov.uk]>, <Function test_urls[https://gov.uk/blog/foo]>, <Function test_urls[https://gov.uk/blog/foo?hmmm]>, <Function test_urls[https://gov.uk/blog/foo?hmmm=something]>, <Function test_urls[blah]>, <Function test_urls[http://]>, <Function test_urls[blah-foo]>, <Function test_valid_when_only_final_option_selected>, <Function test_valid_when_non_final_options_selected>, <Function test_invalid_when_final_option_and_others_selected>, <Function test_custom_message_used_if_provided>, <Function test_no_validation_error_when_field_is_empty>, <Function test_ordering>, <Function test_ordering>, <Function test_visible_questions_filtered>, <Function test_visible_questions_filtered_in_group>, <Function test_visible_questions_filtered_for_group_parent>, <Function test_exists>, <Function test_does_not_exist>, <Function test_exists>, <Function test_does_not_exist>, <Function test_at_least_one_question_in_form>, <Function test_no_visible_questions_in_form>, <Function test_at_least_one_question_in_form>, <Function test_no_visible_questions_in_form>, <Function test_question_exists_in_collection_forms>, <Function test_question_does_not_exist_in_collection_forms>, <Function test_current_question_exists_and_is_not_last_question>, <Function test_current_question_exists_but_is_last_question>, <Function test_current_question_does_not_exist>, <Function test_next_question_ignores_not_visible_questions>, <Function test_current_question_exists_and_is_not_first_question>, <Function test_current_question_exists_but_is_first_question>, <Function test_current_question_does_not_exist>, <Function test_previous_question_ignores_not_visible_questions>, <Function test_all_forms_are_completed>, <Function test_is_question_always_visible_with_no_conditions>, <Function test_is_component_visible_not_visible_with_failing_condition>, <Function test_is_component_visible_visible_with_passing_condition>, <Function test_is_component_visible_not_visible_with_nested_conditions>, <Function test_date>, <Function test_datetime>, <Function test_datetime_am>, <Function test_datetime_pm>, <Function test_datetime_minutes>, <Function test_datetime_noon>, <Function test_datetime_midnight>, <Function test_dates>, <Function test_datetimes>, <Function test_datetimes_minutes>, <Function test_link>, <Function test_link_without_title>, <Function test_image_with_alt_text>, <Function test_image_without_alt_text>, <Function test_emphasis_strips_formatting>, <Function test_strong_strips_formatting>, <Function test_codespan_strips_formatting>, <Function test_linebreak>, <Function test_inline_html_escapes>, <Function test_paragraph>, <Function test_heading_level_2>, <Function test_heading_other_levels>, <Function test_blank_line>, <Function test_thematic_break>, <Function test_block_text>, <Function test_block_code>, <Function test_block_quote>, <Function test_block_html_escapes>, <Function test_block_error_escapes>, <Function test_unordered_list>, <Function test_ordered_list>, <Function test_list_item>, <Function test_handles_empty_string>, <Function test_escapes_html_in_markdown>, <Function test_h2_headings>, <Function test_bullet_lists>, <Function test_numbered_lists>, <Function test_paragraphs>, <Function test_links>, <Function test_strips_formatting[**bold**-<p class='govuk-body'>bold</p>\n]>, <Function test_strips_formatting[*italic*-<p class='govuk-body'>italic</p>\n]>, <Function test_strips_formatting[`code`-<p class='govuk-body'>code</p>\n]>, <Function test_strips_formatting[![alt](image.jpg)-<p class='govuk-body'>alt</p>\n]>, <Function test_jinja_filter_integration>, <Function test_slugify[Hello World-hello-world]>, <Function test_slugify[Hello, World!-hello-world]>, <Function test_slugify[  Leading and trailing  -leading-and-trailing]>, <Function test_slugify[Multiple   Spaces-multiple-spaces]>, <Function test_slugify[Special #$@! Characters-special-characters]>, <Function test_slugify[Special #$@! Characters $%^$%^      Again    -special-characters-again]>, <Function test_slugify[unicode: \xe5ngstr\xf6m-unicode-ngstrm]>, <Function test_slugify[MiXeD CaSe-mixed-case]>, <Function test_slugify[Numbers 123 and text-numbers-123-and-text]>, <Function test_slugify[-]>, <Function test_slugify[    -]>, <Function test_slugify[Already-slugified-text-already-slugified-text]>, <Function test_slugify[Under_score and-dash-underscore-and-dash]>, <Function test_slugify[None-]>, <Function test_slugify[---]>, <Function test_config_subclasses_do_not_have_conflicting_types>, <Function test_config_subclasses_do_not_define_new_variables>, <Function test_send_magic_link>, <Function test_send_collection_submission>, <Function test_send_member_confirmation>, <Function test_accessibility_for_user_role_to_each_endpoint>, <Function test_routes_list_is_valid>, <Function test_for_unused_jinja_imports[app/access_grant_funding/templates/access_grant_funding/base.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/check_email.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/claim_magic_link.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/mhclg-user-not-authorised.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_magic_link.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_sso.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/base.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/errors/403.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/errors/404.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/errors/500.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/fields/accessible-autocomplete.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/govuk/tabs/macro.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/macros/collections.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/macros/status.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/date.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/email.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/integer.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/multiple_choice_from_list.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/root.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/single_choice_from_list.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/url.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/yes_no.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-header.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-test-banner.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/navigation.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/base.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/ask_a_question.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/base.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/check_your_answers.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_submit_confirmation.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_tasklist.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grant_details.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grants_list.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/access_grant_funding_base.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/grant_developers.html]>]
          finish pytest_collection_modifyitems --> [] [hook]
          pytest_collection_finish [hook]
              session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=2 testscollected=0>
            pytest_report_collectionfinish [hook]
                config: <_pytest.config.Config object at 0x106844910>
                items: [<Function test_create_and_preview_report[chromium]>, <Function test_create_view_edit_grant_success[chromium]>, <Function test_magic_link_redirect_journey[chromium]>, <Function test_stub_sso_journey[chromium]>, <Function test_real_sso_journey[chromium]>, <Function test_start_chrome[chromium]>, <Function test_get>, <Function test_post_invalid_email>, <Function test_post_mhclg_email_redirects_to_sso>, <Function test_post_valid_non_mhclg_email>, <Function test_post_valid_email_with_redirect[/blah/blah-/blah/blah]>, <Function test_post_valid_email_with_redirect[https://bad.place/blah-/]>, <Function test_get>, <Function test_get>, <Function test_redirect_on_unknown_magic_link>, <Function test_redirect_on_used_magic_link>, <Function test_redirect_on_expired_magic_link>, <Function test_post_claims_link_and_creates_user_and_redirects[/blah/blah-/blah/blah]>, <Function test_post_claims_link_and_creates_user_and_redirects[https://bad.place/blah-/]>, <Function test_get>, <Function test_get>, <Function test_get_without_fsd_admin_role_and_with_no_assigned_roles>, <Function test_login_with_grant_member_role>, <Function test_get_without_any_roles_should_403>, <Function test_get_valid_token_with_redirect>, <Function test_platform_admin_first_login>, <Function test_platform_admin_with_fsd_admin_role_removed>, <Function test_platform_admin_with_grant_member_role_fsd_admin_role_removed>, <Function test_platform_admin_remove_all_other_roles>, <Function test_platform_admin_signin_claims_pending_invitations>, <Function test_grant_member_with_valid_invites_first_login>, <Function test_invalid_grant_team_member_invitations_403>, <Function test_magic_link_get>, <Function test_sso_get>, <Function test_validation_attached_to_field_and_runs__text[This is an answer\non multiple lines-None-Multiple lines of text]>, <Function test_validation_attached_to_field_and_runs__text[Test string-None-Multiple lines of text]>, <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Multiple lines of text]>, <Function test_validation_attached_to_field_and_runs__text[Test string-None-Single line of text]>, <Function test_validation_attached_to_field_and_runs__text[-Enter the test_text-Single line of text]>, <Function test_validation_attached_to_field_and_runs__integer[-50-The answer must be greater than or equal to 0]>, <Function test_validation_attached_to_field_and_runs__integer[1000-The answer must be less than 100]>, <Function test_validation_attached_to_field_and_runs__integer[50-None]>, <Function test_validation_attached_to_field_and_runs__integer[0-None]>, <Function test_validation_attached_to_field_and_runs__integer[None-Not a valid integer value.]>, <Function test_validation_attached_to_field_and_runs__integer[abcd-Not a valid integer value.]>, <Function test_validation_attached_to_field_and_runs__integer[-Enter the test_integer]>, <Function test_special_radio_field_enhancement_to_autocomplete>, <Function test_validation_attached_to_multiple_fields>, <Function test_email_strips_empty_chars[  email@email.com  -True-email@email.com]>, <Function test_email_strips_empty_chars[  not-an-email  -False-not-an-email]>, <Function test_url_strips_empty_chars[  www.google.com  -True-www.google.com]>, <Function test_url_strips_empty_chars[  not-a-url  -False-not-a-url]>, <Function test_member_role_not_platform>, <Function test_unique_constraint_with_nulls>, <Function test_cannot_add_two_of_the_same_kind_of_validation_to_a_question>, <Function test_get_collection>, <Function test_get_collection_version>, <Function test_get_collection_version_latest_by_default>, <Function test_get_collection_with_grant_id>, <Function test_get_collection_with_type>, <Function test_create_collection>, <Function test_create_collection_name_is_unique_per_grant>, <Function test_get_submission>, <Function test_get_submission_with_full_schema>, <Function test_get_form>, <Function test_get_form_with_all_questions>, <Function test_get_form_with_grant>, <Function test_create_form>, <Function test_form_name_unique_in_collection>, <Function test_move_form_up_down>, <Function test_get_question>, <Function test_get_group>, <Function test_create_group>, <Function test_create_group_presentation_options>, <Function test_create_nested_components>, <Function test_update_group>, <Function test_update_group_unique_overlap>, <Function test_update_group_with_question_dependencies_cant_enable_same_page>, <Function test_update_group_with_question_dependencies_can_disable_same_page>, <Function test_update_group_with_guidance_fields>, <Function test_simple_types[Single line of text]>, <Function test_simple_types[Email address]>, <Function test_simple_types[Website address (URL)]>, <Function test_integer>, <Function test_text_multi_line>, <Function test_yes_no>, <Function test_radios>, <Function test_checkboxes>, <Function test_date>, <Function test_break_if_new_question_types_added>, <Function test_question_requires_data_type>, <Function test_question_associated_with_group>, <Function test_simple_types[Single line of text]>, <Function test_simple_types[Email address]>, <Function test_simple_types[Website address (URL)]>, <Function test_integer>, <Function test_text_multi_line>, <Function test_yes_no>, <Function test_radios>, <Function test_update_radios_question_options_errors_on_referenced_data_items>, <Function test_update_checkboxes_question_options_errors_on_referenced_data_items>, <Function test_checkboxes>, <Function test_date>, <Function test_break_if_new_question_types_added>, <Function test_update_question_with_guidance_fields>, <Function test_update_question_guidance_optional_parameters>, <Function test_update_question_clear_guidance_fields>, <Function test_move_question_up_down>, <Function test_move_question_with_dependencies>, <Function test_move_group_with_dependencies>, <Function test_move_group_with_child_dependencies>, <Function test_move_question_with_group_dependencies>, <Function test_move_group_with_group_dependencies>, <Function test_raise_if_question_has_any_dependencies>, <Function test_raise_if_group_has_any_dependencies>, <Function test_raise_if_group_questions_depend_on_each_other>, <Function test_raise_if_radios_data_source_item_reference_dependency>, <Function test_raise_if_checkboxes_data_source_item_reference_dependency>, <Function test_update_submission_data>, <Function test_add_submission_event>, <Function test_clear_events_from_submission>, <Function test_get_collection_with_full_schema>, <Function test_with_nested_group_order>, <Function test_add_question_condition>, <Function test_add_condition_raises_if_same_page>, <Function test_add_radios_question_condition>, <Function test_add_checkboxes_question_condition>, <Function test_add_question_condition_blocks_on_order>, <Function test_add_question_validation>, <Function test_update_expression>, <Function test_update_anyof_expression>, <Function test_update_specifically_expression>, <Function test_update_expression_errors_on_validation_overlap>, <Function test_remove_expression>, <Function test_get_expression>, <Function test_get_expression_missing>, <Function test_get_expression_by_id>, <Function test_get_expression_by_id_missing>, <Function test_get_referenced_data_source_items_by_anyof_managed_expression>, <Function test_get_referenced_data_source_items_by_specifically_managed_expression>, <Function test_delete>, <Function test_delete_cascades_downstream>, <Function test_can_delete_with_test_submissions>, <Function test_cannot_delete_if_live_submissions>, <Function test_delete>, <Function test_form_reordering>, <Function test_delete>, <Function test_form_reordering>, <Function test_delete_group>, <Function test_nested_question_in_group>, <Function test_delete_test_collection_submissions_created_by_user>, <Function test_get_grant>, <Function test_get_all_grants_platform_admin>, <Function test_get_all_grants_member>, <Function test_get_all_grants_by_user>, <Function test_create_grant>, <Function test_create_duplicate_grant>, <Function test_update_grant_success>, <Function test_update_grant_duplicate_name>, <Function test_updated_grant_nothing_provided>, <Function test_grant_name_exists_true>, <Function test_grant_name_exists_false>, <Function test_grant_name_exists_case_insensitive>, <Function test_grant_name_exists_exclude_current_grant>, <Function test_create_magic_link_existing_user>, <Function test_create_magic_link_new_user>, <Function test_create_magic_link_check_expiry_time>, <Function test_create_magic_link_expires_other_magic_links_for_the_user>, <Function test_get_magic_link_by_id>, <Function test_get_magic_link_by_code>, <Function test_claim_magic_link_success>, <Function test_claim_magic_link_fail_no_user>, <Function test_get_user_by_id>, <Function test_get_existing_user>, <Function test_get_user_where_none_exists>, <Function test_get_existing_user>, <Function test_get_user_where_none_exists>, <Function test_set_user_last_logged_in_at_utc>, <Function test_create_new_user>, <Function test_get_existing_user_with_update>, <Function test_create_new_user>, <Function test_get_existing_user_with_update>, <Function test_add_user_role[False-False-admin]>, <Function test_add_user_role[True-False-member]>, <Function test_multiple_roles_treated_as_distinct_and_dont_overwrite>, <Function test_add_existing_user_role>, <Function test_upsert_existing_user_role>, <Function test_add_invalid_user_role[False-False-member-A 'member' role must be linked to an organisation or grant.]>, <Function test_set_platform_admin_role_for_user>, <Function test_set_platform_admin_role_already_exists>, <Function test_set_platform_admin_multiple_roles_already_exists>, <Function test_set_grant_team_role_for_user>, <Function test_set_grant_team_role_already_exists>, <Function test_remove_platform_admin_role_from_user>, <Function test_remove_platform_admin_role_when_only_other_roles_exist>, <Function test_remove_grant_team_role_from_user>, <Function test_remove_grant_team_role_from_user_with_multiple_roles>, <Function test_remove_all_roles_from_user>, <Function test_create_invitation>, <Function test_create_invitation_expires_existing_invitations>, <Function test_create_invitation_expires_existing_invitations_when_org_grant_null>, <Function test_get_invitation>, <Function test_claim_invitation>, <Function test_get_usable_invitations_by_email>, <Function test_create_user_and_claim_invitations>, <Function test_grant_member_add_role_or_create_invitation_adds_role>, <Function test_grant_member_add_role_or_create_invitation_creates_invitation>, <Function test_upsert_platform_admin_user_and_set_platform_admin_role_claims_invitations>, <Function test_test_submission_property_only_includes_test_submissions>, <Function test_question_property_selects_expressions>, <Function test_question_gets_a_valid_expression_that_belongs_to_it>, <Function test_question_does_not_get_a_valid_expression_that_does_not_belong_to_it>, <Function test_data_source_items>, <Function test_data_source_items_last_item_is_distinct>, <Function test_questions_property_filters_nested_questions>, <Function test_questions_property_filters_nested_questions>, <Function test_same_page_property[True]>, <Function test_same_page_property[False]>, <Function test_layering>, <Function test_iteration>, <Function test_get>, <Function test_length>, <Function test_contains>, <Function test_keys>, <Function test_values>, <Function test_items>, <Function test_greater_than>, <Function test_managed_expression_with_required_function_allowed_imported[question_value0-True]>, <Function test_managed_expression_with_required_function_allowed_imported[question_value1-False]>, <Function test_managed_expression_with_required_function_allowed_builtin[309-True]>, <Function test_managed_expression_with_required_function_allowed_builtin[0-False]>, <Function test_managed_expression_with_required_function_allowed_custom[100-True]>, <Function test_managed_expression_with_required_function_allowed_custom[5-False]>, <Function test_managed_expression_with_required_function_builtin_not_present_builtin>, <Function test_managed_expression_with_required_function_not_present_custom>, <Function test_gets_referenced_question>, <Function test_evaluate[1000-False-999-False]>, <Function test_evaluate[1000-False-1000-False]>, <Function test_evaluate[1000-True-1000-True]>, <Function test_evaluate[1000-False-1001-True]>, <Function test_evaluate[1000-False-999-True]>, <Function test_evaluate[1000-False-1000-False]>, <Function test_evaluate[1000-True-1000-True]>, <Function test_evaluate[1000-False-1001-False]>, <Function test_evaluate[0-False-1000-False-0-False]>, <Function test_evaluate[0-True-1000-False-0-True]>, <Function test_evaluate[0-False-1000-False-1-True]>, <Function test_evaluate[0-False-1000-False-999-True]>, <Function test_evaluate[0-False-1000-False-1000-False]>, <Function test_evaluate[0-True-1000-True-1000-True]>, <Function test_evaluate[items0-red-True]>, <Function test_evaluate[items1-blue-True]>, <Function test_evaluate[items2-Blue-False]>, <Function test_evaluate[items3-green-False]>, <Function test_evaluate[True-True]>, <Function test_evaluate[False-False]>, <Function test_evaluate[True-False]>, <Function test_evaluate[False-True]>, <Function test_evaluate[item0-answers0-True]>, <Function test_evaluate[item1-answers1-True]>, <Function test_evaluate[item2-answers2-False]>, <Function test_evaluate[item3-answers3-False]>, <Function test_evaluate[False-answer0-True]>, <Function test_evaluate[False-answer1-False]>, <Function test_evaluate[True-answer2-True]>, <Function test_evaluate[False-answer3-False]>, <Function test_evaluate[False-answer0-False]>, <Function test_evaluate[False-answer1-False]>, <Function test_evaluate[True-answer2-True]>, <Function test_evaluate[False-answer3-True]>, <Function test_evaluate[False-False-answer0-False]>, <Function test_evaluate[False-False-answer1-False]>, <Function test_evaluate[True-False-answer2-True]>, <Function test_evaluate[True-True-answer3-True]>, <Function test_evaluate[False-False-answer4-True]>, <Function test_evaluate[True-False-answer5-True]>, <Function test_evaluate[False-False-answer6-False]>, <Function test_evaluate[False-False-answer7-False]>, <Function test_evaluate[True-True-answer8-True]>, <Function test_evaluate[False-True-answer9-True]>, <Function test_evaluate[False-False-answer10-True]>, <Function test_evaluate[False-True-answer11-True]>, <Function test_get_registered_data_types>, <Function test_get_supported_form_questions_filters_question_types>, <Function test_get_supported_form_questions_filters_out_the_current_question>, <Function test_new_managed_expressions_added>, <Function test_submit_valid_data>, <Function test_get_data_maps_type>, <Function test_can_get_falsey_answers>, <Function test_cannot_submit_answer_on_submitted_submission>, <Function test_no_submission_data>, <Function test_with_submission_data>, <Function test_no_submission_data>, <Function test_with_submission_data>, <Function test_form_status_based_on_questions>, <Function test_form_status_with_no_questions>, <Function test_submission_status_based_on_forms>, <Function test_toggle_form_status>, <Function test_toggle_form_status_doesnt_change_status_if_already_completed>, <Function test_submit_submission_rejected_if_not_complete>, <Function test_init_collection_helper>, <Function test_generate_csv_content_check_correct_rows_for_multiple_simple_submissions_every_question_type>, <Function test_generate_csv_content_skipped_questions>, <Function test_generate_csv_content_skipped_questions_previously_answered>, <Function test_all_question_types_appear_correctly_in_csv_row>, <Function test_all_question_types_appear_correctly_in_json_export>, <Function test_multiple_submission_export_non_conditional[1]>, <Function test_multiple_submission_export_non_conditional[2]>, <Function test_multiple_submission_export_non_conditional[3]>, <Function test_multiple_submission_export_non_conditional[5]>, <Function test_multiple_submission_export_non_conditional[12]>, <Function test_multiple_submission_export_non_conditional[60]>, <Function test_multiple_submission_export_non_conditional[100]>, <Function test_multiple_submission_export_non_conditional[500]>, <Function test_multiple_submission_export_conditional[1]>, <Function test_multiple_submission_export_conditional[2]>, <Function test_multiple_submission_export_conditional[3]>, <Function test_multiple_submission_export_conditional[5]>, <Function test_multiple_submission_export_conditional[12]>, <Function test_multiple_submission_export_conditional[60]>, <Function test_multiple_submission_export_conditional[100]>, <Function test_multiple_submission_export_conditional[500]>, <Function test_post_unauthorised_if_not_mhclg_email_address>, <Function test_post_success_with_mhclg_user>, <Function test_number_to_ordinal[1-first]>, <Function test_number_to_ordinal[2-second]>, <Function test_number_to_ordinal[3-third]>, <Function test_number_to_ordinal[10-tenth]>, <Function test_number_to_ordinal[11-eleventh]>, <Function test_number_to_ordinal[12-twelfth]>, <Function test_number_to_ordinal[13-thirteenth]>, <Function test_number_to_ordinal[14-fourteenth]>, <Function test_number_to_ordinal[21-twenty-first]>, <Function test_as_platform_admin>, <Function test_as_grant_admin>, <Function test_as_grant_member>, <Function test_grant_change_ggis_get>, <Function test_grant_change_ggis_post>, <Function test_grant_change_name_get>, <Function test_grant_change_name_post>, <Function test_grant_change_name_post_with_errors>, <Function test_grant_change_description_get>, <Function test_grant_change_description_post>, <Function test_grant_change_contact_get>, <Function test_grant_change_contact_post>, <Function test_grant_setup_intro_get>, <Function test_grant_setup_intro_post>, <Function test_grant_setup_ggis_get_with_session>, <Function test_grant_setup_ggis_get_without_session_redirects>, <Function test_grant_setup_ggis_post_with_ggis>, <Function test_grant_setup_ggis_post_no_ggis_redirects_to_required_info>, <Function test_grant_setup_ggis_required_info_get>, <Function test_grant_setup_name_get_with_session>, <Function test_grant_setup_name_post>, <Function test_grant_setup_description_get_with_session>, <Function test_grant_setup_description_post_too_long>, <Function test_grant_setup_description_post_valid>, <Function test_grant_setup_contact_get_with_session>, <Function test_grant_setup_contact_post_valid>, <Function test_grant_check_your_answers_post_creates_grant>, <Function test_list_users_for_grant_with_platform_admin_and_no_member>, <Function test_list_users_for_grant_with_platform_admin_check_add_member_button>, <Function test_list_users_for_grant_with_member_no_add_member_button>, <Function test_list_users_for_grant_with_not_logged_in_members>, <Function test_list_users_for_grant_with_member>, <Function test_add_user_to_grant_with_platform_admin_add_another_platform_admin>, <Function test_add_user_to_grant_with_platform_admin_add_member>, <Function test_add_user_to_grant_with_platform_admin_add_same_member_again>, <Function test_add_user_to_grant_creates_invitation_for_new_user>, <Function test_add_user_to_grant_adds_existing_user_no_invitation>, <Function test_list_grants_as_admin>, <Function test_list_grants_as_member_with_single_grant>, <Function test_list_grants_as_member_with_multiple_grants>, <Function test_list_grant_requires_mhclg_user>, <Function test_404>, <Function test_grant_member_get_no_reports[authenticated_grant_member_client-False]>, <Function test_grant_member_get_no_reports[authenticated_grant_admin_client-True]>, <Function test_grant_member_get_with_reports[authenticated_grant_member_client-False]>, <Function test_grant_member_get_with_reports[authenticated_grant_admin_client-True]>, <Function test_grant_member_get_with_reports[authenticated_platform_admin_client-True]>, <Function test_get_hides_delete_link_with_submissions>, <Function test_get_with_delete_parameter_no_submissions>, <Function test_post_delete[authenticated_grant_member_client-False]>, <Function test_post_delete[authenticated_grant_admin_client-True]>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post[authenticated_grant_member_client-False]>, <Function test_post[authenticated_grant_admin_client-True]>, <Function test_post_duplicate_report_name>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_delete_parameter_with_live_submissions>, <Function test_post_update_name[authenticated_grant_member_client-False]>, <Function test_post_update_name[authenticated_grant_admin_client-True]>, <Function test_post_update_name_duplicate>, <Function test_update_name_when_delete_banner_showing_does_not_delete>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post[authenticated_grant_member_client-False]>, <Function test_post[authenticated_grant_admin_client-True]>, <Function test_post_duplicate_form_name>, <Function test_404>, <Function test_get_no_tasks[authenticated_grant_member_client-False]>, <Function test_get_no_tasks[authenticated_grant_admin_client-True]>, <Function test_get_with_tasks[authenticated_grant_member_client-False]>, <Function test_get_with_tasks[authenticated_grant_admin_client-True]>, <Function test_post_list_report_tasks_preview[authenticated_no_role_client-False]>, <Function test_post_list_report_tasks_preview[authenticated_grant_member_client-True]>, <Function test_post_list_report_tasks_preview[authenticated_grant_admin_client-True]>, <Function test_404>, <Function test_400>, <Function test_move[up]>, <Function test_move[down]>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_duplicate>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_change_same_page_with_question_inter_dependencies>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_blocked_if_live_submissions>, <Function test_post_update_name[authenticated_grant_member_client-False]>, <Function test_post_update_name[authenticated_grant_admin_client-True]>, <Function test_post_update_name_duplicate>, <Function test_404>, <Function test_admin_actions[authenticated_grant_member_client-False]>, <Function test_admin_actions[authenticated_grant_admin_client-True]>, <Function test_delete_confirmation_banner>, <Function test_cannot_delete_with_depended_on_questions_in_group>, <Function test_404>, <Function test_admin_actions[authenticated_grant_member_client-False]>, <Function test_admin_actions[authenticated_grant_admin_client-True]>, <Function test_delete_confirmation_banner>, <Function test_cannot_delete_with_live_submissions>, <Function test_post_list_task_questions_preview[authenticated_no_role_client-False]>, <Function test_post_list_task_questions_preview[authenticated_grant_member_client-True]>, <Function test_post_list_task_questions_preview[authenticated_grant_admin_client-True]>, <Function test_post_list_task_questions_returns_to_task_list>, <Function test_404>, <Function test_no_access_for_grant_members>, <Function test_400>, <Function test_move[up]>, <Function test_move[down]>, <Function test_move_group>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_add_to_group>, <Function test_404>, <Function test_missing_name>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_duplicate>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_group>, <Function test_post>, <Function test_post_dependency_order_errors>, <Function test_post_data_source_item_errors>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_available_questions[authenticated_grant_member_client-False]>, <Function test_get_with_available_questions[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_rejects_same_page_group>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_post>, <Function test_post_for_group>, <Function test_post_duplicate_condition>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_delete_parameter>, <Function test_post_update_condition>, <Function test_post_update_group_condition>, <Function test_post_update_condition_duplicate>, <Function test_post_delete>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_no_validation_available>, <Function test_post>, <Function test_post_duplicate_validation>, <Function test_404>, <Function test_get[authenticated_grant_member_client-False]>, <Function test_get[authenticated_grant_admin_client-True]>, <Function test_get_with_delete_parameter>, <Function test_post_update_validation>, <Function test_post_update_validation_duplicate>, <Function test_post_delete>, <Function test_404>, <Function test_get_access_control[authenticated_grant_member_client-False]>, <Function test_get_access_control[authenticated_grant_admin_client-True]>, <Function test_get_add_guidance>, <Function test_get_edit_guidance>, <Function test_post_add_guidance>, <Function test_post_update_guidance>, <Function test_post_clear_guidance>, <Function test_post_guidance_with_heading_or_text_but_not_Both>, <Function test_get_edit_guidance_groups>, <Function test_post_update_guidance_groups>, <Function test_404>, <Function test_no_submissions>, <Function test_based_on_submission_mode>, <Function test_404>, <Function test_unknown_export_type>, <Function test_csv_download>, <Function test_json_download>, <Function test_404>, <Function test_forms_and_questions_and_answers_displayed>, <Function test_get_submission_tasklist[authenticated_no_role_client-False]>, <Function test_get_submission_tasklist[authenticated_grant_member_client-True]>, <Function test_get_submission_tasklist[authenticated_grant_admin_client-True]>, <Function test_get_other_users_submission_tasklist_403s[authenticated_no_role_client]>, <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_member_client]>, <Function test_get_other_users_submission_tasklist_403s[authenticated_grant_admin_client]>, <Function test_post_submission_tasklist_test[authenticated_no_role_client-False]>, <Function test_post_submission_tasklist_test[authenticated_grant_member_client-True]>, <Function test_post_submission_tasklist_test[authenticated_grant_admin_client-True]>, <Function test_post_submission_tasklist_live[authenticated_no_role_client-False]>, <Function test_post_submission_tasklist_live[authenticated_grant_member_client-True]>, <Function test_post_submission_tasklist_live[authenticated_grant_admin_client-True]>, <Function test_get_ask_a_question[authenticated_no_role_client-False]>, <Function test_get_ask_a_question[authenticated_grant_member_client-True]>, <Function test_get_ask_a_question[authenticated_grant_admin_client-True]>, <Function test_get_other_users_ask_a_question_403s[authenticated_no_role_client]>, <Function test_get_other_users_ask_a_question_403s[authenticated_grant_member_client]>, <Function test_get_other_users_ask_a_question_403s[authenticated_grant_admin_client]>, <Function test_get_ask_a_question_with_failing_condition_redirects>, <Function test_post_ask_a_question[authenticated_no_role_client-False]>, <Function test_post_ask_a_question[authenticated_grant_member_client-True]>, <Function test_post_ask_a_question[authenticated_grant_admin_client-True]>, <Function test_question_without_guidance_uses_question_as_heading>, <Function test_question_with_guidance_uses_guidance_heading>, <Function test_group_same_page_with_questions_uses_group_guidance>, <Function test_get_check_your_answers[authenticated_no_role_client-False]>, <Function test_get_check_your_answers[authenticated_grant_member_client-True]>, <Function test_get_check_your_answers[authenticated_grant_admin_client-True]>, <Function test_get_other_users_check_your_answers_403s[authenticated_no_role_client]>, <Function test_get_other_users_check_your_answers_403s[authenticated_grant_member_client]>, <Function test_get_other_users_check_your_answers_403s[authenticated_grant_admin_client]>, <Function test_post_check_your_answers_complete_form[authenticated_no_role_client-False]>, <Function test_post_check_your_answers_complete_form[authenticated_grant_member_client-True]>, <Function test_post_check_your_answers_complete_form[authenticated_grant_admin_client-True]>, <Function test_post_check_your_answers_complete_test_preview[authenticated_no_role_client-False]>, <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_member_client-True]>, <Function test_post_check_your_answers_complete_test_preview[authenticated_grant_admin_client-True]>, <Function test_start_testing_submission>, <Function test_db_session_is_committed>, <Function test_db_session_is_rolled_back_and_doesnt_error_when_handled>, <Function test_db_session_throws_appropriately_on_commit_if_not_handled>, <Function test_assets_live_enabled>, <Function test_assets_static_manifest>, <Function test_assets_no_manifest_production>, <Function test_assets_no_manifest_non_production>, <Function test_healthcheck>, <Function test_basic_auth_disabled>, <Function test_basic_auth_enabled_requires_username_and_password>, <Function test_basic_auth_enabled>, <Function test_basic_auth_enabled_allows_healthcheck>, <Function test_app_404_on_unknown_url>, <Function test_app_404_on_sqlalchemy_not_found>, <Function test_app_500_on_internal_server_error>, <Function test_create_frozen_time>, <Function test_update_frozen_time_no_tick>, <Function test_update_frozen_time_with_tick>, <Function test_request_fixture_invalid_time_raises_value_error>, <Function test_collection_factory_completed_submissions>, <Function test_basic_log_message>, <Function test_can_log_simple_interpolated_values[hello]>, <Function test_can_log_simple_interpolated_values[1]>, <Function test_can_log_simple_interpolated_values[1.0]>, <Function test_can_log_simple_interpolated_values[True]>, <Function test_cannot_log_complex_data_types[complex0]>, <Function test_cannot_log_complex_data_types[complex1]>, <Function test_cannot_log_complex_data_types[complex2]>, <Function test_cannot_log_complex_data_types[complex3]>, <Function test_has_logged_in[John-last_logged_in0-True]>, <Function test_has_logged_in[John-None-False]>, <Function test_has_logged_in[None-last_logged_in2-True]>, <Function test_has_logged_in[None-None-False]>, <Function test_is_mhclg_user[person@gmail.com-False]>, <Function test_is_mhclg_user[person@communities.gov.uk-True]>, <Function test_is_mhclg_user[person@test.communities.gov.uk-True]>, <Function test_is_platform_admin[admin-False-True]>, <Function test_is_platform_admin[admin-True-False]>, <Function test_is_platform_admin[member-True-False]>, <Function test_is_platform_admin_works_for_anonymous_user>, <Function test_is_grant_admin_correct_grant[admin-True]>, <Function test_is_grant_admin_correct_grant[member-False]>, <Function test_is_grant_admin_incorrect_grant[admin]>, <Function test_is_grant_admin_incorrect_grant[member]>, <Function test_is_grant_admin_for_grant_roles[admin-True]>, <Function test_is_grant_admin_for_grant_roles[member-False]>, <Function test_is_grant_admin_if_platform_admin>, <Function test_is_grant_member_true[admin]>, <Function test_is_grant_member_true[member]>, <Function test_is_grant_member_false_member_of_different_grant[admin]>, <Function test_is_grant_member_false_member_of_different_grant[member]>, <Function test_is_grant_member_false_not_got_member_role>, <Function test_is_grant_member_overriden_by_platform_admin>, <Function test_has_grant_role[admin-True]>, <Function test_has_grant_role[member-True]>, <Function test_has_grant_role[S151_OFFICER-expected2]>, <Function test_redirect_sanitisation[/-/]>, <Function test_redirect_sanitisation[/blah/blah-/blah/blah]>, <Function test_redirect_sanitisation[http://funding.communities.gov.localhost:8080/blah-/blah]>, <Function test_redirect_sanitisation[mailto://funding.communities.gov.localhost:8080/blah-/]>, <Function test_redirect_sanitisation[http://bad.domain.localhost:8080/blah-/]>, <Function test_redirect_sanitisation[//blah-/]>, <Function test_redirect_sanitisation[///blah-/blah]>, <Function test_redirect_sanitisation[/blah?query=param-/blah?query=param]>, <Function test_question_attached_by_id>, <Function test_multiple_questions_attached_by_id>, <Function test_build_form_context>, <Function test_expected_fields_exist>, <Function test_the_next_test_exhausts_QuestionDataType>, <Function test_expected_field_types[Single line of text-presentation_options0-StringField-GovTextInput-expected_validators0]>, <Function test_expected_field_types[Multiple lines of text-presentation_options1-StringField-GovTextArea-expected_validators1]>, <Function test_expected_field_types[Multiple lines of text-presentation_options2-StringField-GovCharacterCount-expected_validators2]>, <Function test_expected_field_types[Whole number-presentation_options3-IntegerField-GovTextInput-expected_validators3]>, <Function test_expected_field_types[Yes or no-presentation_options4-RadioField-GovRadioInput-expected_validators4]>, <Function test_expected_field_types[Select one from a list (radios)-presentation_options5-RadioField-MHCLGRadioInput-expected_validators5]>, <Function test_expected_field_types[Email address-presentation_options6-EmailField-GovTextInput-expected_validators6]>, <Function test_expected_field_types[Website address (URL)-presentation_options7-StringField-GovTextInput-expected_validators7]>, <Function test_expected_field_types[Select one or more from a list (checkboxes)-presentation_options8-SelectMultipleField-MHCLGCheckboxesInput-expected_validators8]>, <Function test_expected_field_types[A date-presentation_options9-DateField-GovDateInput-expected_validators9]>, <Function test_break_if_new_question_types_added>, <Function test_form_runner_loads_and_sets_context>, <Function test_form_runner_loads_and_sets_context_for_same_page_group>, <Function test_form_runner_correctly_configures_dynamic_question_form>, <Function test_form_runner_only_configures_visible_questions_for_same_page>, <Function test_form_runner_correctly_configured_dynamic_question_form_for_same_page>, <Function test_calls_mapped_urls_with_the_right_information>, <Function test_next_url>, <Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[question]>, <Function test_next_url_skips_answered_questions_and_always_goes_to_next_unanswered_question[check-your-answers]>, <Function test_back_url>, <Function test_next_back_url_for_group>, <Function test_runners_url_map_resolves[DGFFormRunner]>, <Function test_runners_url_map_resolves[AGFFormRunner]>, <Function test_all_answer_types_tested>, <Function test_get_value_for_submission[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_submission[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_submission[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_submission[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_submission[YesNoAnswer-True-Yes]>, <Function test_get_value_for_form[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_form[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_form[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_form[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_form[YesNoAnswer-True-Yes]>, <Function test_get_value_for_expression[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_expression[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_expression[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_expression[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_expression[YesNoAnswer-True-Yes]>, <Function test_get_value_for_text_export[TextSingleLineAnswer-hello-hello]>, <Function test_get_value_for_text_export[TextMultiLineAnswer-hello\nthere-hello\nthere]>, <Function test_get_value_for_text_export[EmailAnswer-name@example.com-name@example.com]>, <Function test_get_value_for_text_export[UrlAnswer-https://www.gov.uk-https://www.gov.uk]>, <Function test_get_value_for_text_export[YesNoAnswer-True-Yes]>, <Function test_get_value_for_submission[IntegerAnswer-data0-submission_data0]>, <Function test_get_value_for_submission[IntegerAnswer-data1-submission_data1]>, <Function test_get_value_for_submission[IntegerAnswer-data2-submission_data2]>, <Function test_get_value_for_submission[SingleChoiceFromListAnswer-data3-submission_data3]>, <Function test_get_value_for_submission[DateAnswer-data4-submission_data4]>, <Function test_get_value_for_form[IntegerAnswer-data0-50]>, <Function test_get_value_for_form[SingleChoiceFromListAnswer-data1-key]>, <Function test_get_value_for_expression[IntegerAnswer-data0-50]>, <Function test_get_value_for_expression[SingleChoiceFromListAnswer-data1-key]>, <Function test_get_value_for_text_export[IntegerAnswer-data0-50]>, <Function test_get_value_for_text_export[IntegerAnswer-data1-\xa31,000,000]>, <Function test_get_value_for_text_export[IntegerAnswer-data2-1,000,000lbs]>, <Function test_get_value_for_text_export[SingleChoiceFromListAnswer-data3-label]>, <Function test_get_value_for_text_export[DateAnswer-data4-2023-10-05]>, <Function test_get_components_empty>, <Function test_get_components_flat>, <Function test_get_components_nested>, <Function test_get_components_filters_nested>, <Function test_get_components_nested_orders>, <Function test_get_components_nested_depth_5>, <Function test_allowed_expressions[expression0-False]>, <Function test_allowed_expressions[expression1-1]>, <Function test_allowed_expressions[expression2-True]>, <Function test_allowed_expressions[expression3-2]>, <Function test_allowed_expressions[expression4-0]>, <Function test_allowed_expressions[expression5-2]>, <Function test_allowed_expressions[expression6-5]>, <Function test_allowed_expressions[expression7-True]>, <Function test_allowed_expressions[expression8-False]>, <Function test_allowed_expressions[expression9-True]>, <Function test_allowed_expressions[expression10-False]>, <Function test_allowed_expressions[expression11-False]>, <Function test_allowed_expressions[expression12-True]>, <Function test_allowed_expressions[expression13-False]>, <Function test_allowed_expressions[expression14-1]>, <Function test_allowed_expressions[expression15-potato]>, <Function test_disallowed_expressions[expression0]>, <Function test_disallowed_expressions[expression1]>, <Function test_disallowed_expressions[expression2]>, <Function test_disallowed_expressions[expression3]>, <Function test_disallowed_expressions[expression4]>, <Function test_disallowed_expressions[expression5]>, <Function test_disallowed_expressions[expression6]>, <Function test_disallowed_expressions[expression7]>, <Function test_disallowed_expressions[expression8]>, <Function test_disallowed_expressions[expression9]>, <Function test_disallowed_expressions[expression10]>, <Function test_disallowed_expressions[expression11]>, <Function test_disallowed_expressions[expression12]>, <Function test_disallowed_expressions[expression13]>, <Function test_disallowed_expressions[expression14]>, <Function test_disallowed_expressions[expression15]>, <Function test_disallowed_expressions[expression16]>, <Function test_disallowed_expressions[expression17]>, <Function test_disallowed_expressions[expression18]>, <Function test_disallowed_expressions[expression19]>, <Function test_disallowed_expressions[expression20]>, <Function test_disallowed_expressions[expression21]>, <Function test_disallowed_expressions[expression22]>, <Function test_disallowed_expressions[expression23]>, <Function test_unknown_variable>, <Function test_ok_with_boolean_result>, <Function test_additional_context>, <Function test_raise_on_non_boolean_result>, <Function test_integer_data_type>, <Function test_recognises_invalid_data_for_a_managed_expression>, <Function test_can_build_a_managed_expression_from_valid_data>, <Function test_standard_radios_are_not_divided>, <Function test_divided_radios>, <Function test_standard_checkboxes_are_not_divided>, <Function test_divided_checkboxes>, <Function test_max_words_valid_within_limit>, <Function test_max_words_invalid_exceeds_limit>, <Function test_min_words_valid_above_minimum>, <Function test_min_words_invalid_below_minimum>, <Function test_meets_exact_range>, <Function test_outside_exact_range>, <Function test_valid_within_range>, <Function test_invalid_outside_range>, <Function test_both_min_words_or_max_words_absent>, <Function test_min_words_greater_than_max_words>, <Function test_field_display_name>, <Function test_valid_email_with_allowed_domain>, <Function test_valid_email_with_disallowed_domain>, <Function test_invalid_email_format>, <Function test_case_insensitive_domain_match>, <Function test_missing_internal_domains_config>, <Function test_urls[www.google.com]>, <Function test_urls[http://www.google.com]>, <Function test_urls[https://www.google.com]>, <Function test_urls[https://gov.uk]>, <Function test_urls[https://gov.uk/blog/foo]>, <Function test_urls[https://gov.uk/blog/foo?hmmm]>, <Function test_urls[https://gov.uk/blog/foo?hmmm=something]>, <Function test_urls[blah]>, <Function test_urls[http://]>, <Function test_urls[blah-foo]>, <Function test_valid_when_only_final_option_selected>, <Function test_valid_when_non_final_options_selected>, <Function test_invalid_when_final_option_and_others_selected>, <Function test_custom_message_used_if_provided>, <Function test_no_validation_error_when_field_is_empty>, <Function test_ordering>, <Function test_ordering>, <Function test_visible_questions_filtered>, <Function test_visible_questions_filtered_in_group>, <Function test_visible_questions_filtered_for_group_parent>, <Function test_exists>, <Function test_does_not_exist>, <Function test_exists>, <Function test_does_not_exist>, <Function test_at_least_one_question_in_form>, <Function test_no_visible_questions_in_form>, <Function test_at_least_one_question_in_form>, <Function test_no_visible_questions_in_form>, <Function test_question_exists_in_collection_forms>, <Function test_question_does_not_exist_in_collection_forms>, <Function test_current_question_exists_and_is_not_last_question>, <Function test_current_question_exists_but_is_last_question>, <Function test_current_question_does_not_exist>, <Function test_next_question_ignores_not_visible_questions>, <Function test_current_question_exists_and_is_not_first_question>, <Function test_current_question_exists_but_is_first_question>, <Function test_current_question_does_not_exist>, <Function test_previous_question_ignores_not_visible_questions>, <Function test_all_forms_are_completed>, <Function test_is_question_always_visible_with_no_conditions>, <Function test_is_component_visible_not_visible_with_failing_condition>, <Function test_is_component_visible_visible_with_passing_condition>, <Function test_is_component_visible_not_visible_with_nested_conditions>, <Function test_date>, <Function test_datetime>, <Function test_datetime_am>, <Function test_datetime_pm>, <Function test_datetime_minutes>, <Function test_datetime_noon>, <Function test_datetime_midnight>, <Function test_dates>, <Function test_datetimes>, <Function test_datetimes_minutes>, <Function test_link>, <Function test_link_without_title>, <Function test_image_with_alt_text>, <Function test_image_without_alt_text>, <Function test_emphasis_strips_formatting>, <Function test_strong_strips_formatting>, <Function test_codespan_strips_formatting>, <Function test_linebreak>, <Function test_inline_html_escapes>, <Function test_paragraph>, <Function test_heading_level_2>, <Function test_heading_other_levels>, <Function test_blank_line>, <Function test_thematic_break>, <Function test_block_text>, <Function test_block_code>, <Function test_block_quote>, <Function test_block_html_escapes>, <Function test_block_error_escapes>, <Function test_unordered_list>, <Function test_ordered_list>, <Function test_list_item>, <Function test_handles_empty_string>, <Function test_escapes_html_in_markdown>, <Function test_h2_headings>, <Function test_bullet_lists>, <Function test_numbered_lists>, <Function test_paragraphs>, <Function test_links>, <Function test_strips_formatting[**bold**-<p class='govuk-body'>bold</p>\n]>, <Function test_strips_formatting[*italic*-<p class='govuk-body'>italic</p>\n]>, <Function test_strips_formatting[`code`-<p class='govuk-body'>code</p>\n]>, <Function test_strips_formatting[![alt](image.jpg)-<p class='govuk-body'>alt</p>\n]>, <Function test_jinja_filter_integration>, <Function test_slugify[Hello World-hello-world]>, <Function test_slugify[Hello, World!-hello-world]>, <Function test_slugify[  Leading and trailing  -leading-and-trailing]>, <Function test_slugify[Multiple   Spaces-multiple-spaces]>, <Function test_slugify[Special #$@! Characters-special-characters]>, <Function test_slugify[Special #$@! Characters $%^$%^      Again    -special-characters-again]>, <Function test_slugify[unicode: \xe5ngstr\xf6m-unicode-ngstrm]>, <Function test_slugify[MiXeD CaSe-mixed-case]>, <Function test_slugify[Numbers 123 and text-numbers-123-and-text]>, <Function test_slugify[-]>, <Function test_slugify[    -]>, <Function test_slugify[Already-slugified-text-already-slugified-text]>, <Function test_slugify[Under_score and-dash-underscore-and-dash]>, <Function test_slugify[None-]>, <Function test_slugify[---]>, <Function test_config_subclasses_do_not_have_conflicting_types>, <Function test_config_subclasses_do_not_define_new_variables>, <Function test_send_magic_link>, <Function test_send_collection_submission>, <Function test_send_member_confirmation>, <Function test_accessibility_for_user_role_to_each_endpoint>, <Function test_routes_list_is_valid>, <Function test_for_unused_jinja_imports[app/access_grant_funding/templates/access_grant_funding/base.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/check_email.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/claim_magic_link.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/mhclg-user-not-authorised.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_magic_link.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/auth/sign_in_sso.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/base.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/errors/403.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/errors/404.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/errors/500.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/fields/accessible-autocomplete.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/govuk/tabs/macro.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/macros/collections.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/macros/status.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/date.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/email.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/integer.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/multiple_choice_from_list.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/root.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/single_choice_from_list.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/url.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/answers/yes_no.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-header.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/mhclg-test-banner.html]>, <Function test_for_unused_jinja_imports[app/common/templates/common/partials/navigation.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/base.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_base.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_details.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_list.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/ggis_required_info.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_change_ggis.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_description.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_ggis.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_main_contact.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/grant_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/check_your_answers.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_setup/initial_flow/intro.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_add.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/grant_team/grant_user_list.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/dependency_banner.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/macros/question_table.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/partials/_advanced_formatting_options.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_add_question_condition_context.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/_render_managed_expression_form.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_condition_select_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_display_options.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_question_group_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/add_task.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_form_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_display_options.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_question_group_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/change_report_name.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/choose_question_type.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/edit_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_group_questions.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_report_tasks.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_reports.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_submissions.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/list_task_questions.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_guidance.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_condition_select_condition_type.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/manage_question_validation.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/set_up_report.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/reports/view_submission.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/ask_a_question.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/check_your_answers.html]>, <Function test_for_unused_jinja_imports[app/deliver_grant_funding/templates/deliver_grant_funding/runner/collection_tasklist.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/ask_a_question.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/base.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/check_your_answers.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_submit_confirmation.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/collection_tasklist.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grant_details.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/access/grants_list.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/access_grant_funding_base.html]>, <Function test_for_unused_jinja_imports[app/developers/templates/developers/deliver/grant_developers.html]>]
                start_path: /Users/sarahsloan1/dev/funding-service
                startdir: /Users/sarahsloan1/dev/funding-service
            finish pytest_report_collectionfinish --> [] [hook]
          finish pytest_collection_finish --> [] [hook]
        finish pytest_collection --> None [hook]
        pytest_runtestloop [hook]
            session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=2 testscollected=954>
        pytest_keyboard_interrupt [hook]
            excinfo: <ExceptionInfo Interrupted('2 errors during collection') tblen=15>
        finish pytest_keyboard_interrupt --> [] [hook]
        pytest_sessionfinish [hook]
            session: <Session  exitstatus=<ExitCode.INTERRUPTED: 2> testsfailed=2 testscollected=954>
            exitstatus: 2
        finish pytest_sessionfinish --> [] [hook]
        pytest_unconfigure [hook]
            config: <_pytest.config.Config object at 0x106844910>
        finish pytest_unconfigure --> [] [hook]
