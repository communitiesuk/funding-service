[project]
name = "funding-service"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
# If updating the version here, also update in project.toml, .python-version, Dockerfile
requires-python = ">=3.13"
dependencies = [
    "alembic-utils==0.8.8",
    "babel==2.17.0",
    "flask==3.1.0",
    "flask-babel==4.0.0",
    "flask-migrate==4.1.0",
    "flask-sqlalchemy-lite==0.1.0",
    "flask-wtf==1.2.2",
    "govuk-frontend-jinja==3.5.0",
    "govuk-frontend-wtf==3.2.0",
    "psycopg==3.2.6",
    "pydantic==2.11.3",
    "pydantic-settings==2.8.1",
    "python-json-logger==3.3.0",
    "sqlalchemy==2.0.40",
    "wtforms[email]==3.2.1",
    "notifications-python-client==10.0.1",
    "flask-talisman==1.1.0",
    "flask-login==0.6.3",
    "sentry-sdk==2.26.1",
]

[dependency-groups]
dev = [
    "beautifulsoup4==4.13.4",
    "debugpy==1.8.14",
    "factory-boy==3.3.3",
    "flask-debugtoolbar==0.16.0",
    "mypy==1.15.0",
    "pre-commit==4.2.0",
    "pytest-playwright==0.7.0",
    "pytest-mock==3.14.0",
    "pytest==8.3.5",
    "pytest-env==1.1.5",
    "pytest-fail-slow==0.6.0",
    "pytest-flask==1.3.0",
    "pytest-xdist==3.6.1",
    "responses==0.25.7",
    "ruff==0.11.6",
    "sqlalchemy-utils==0.41.2",
    "testcontainers[postgres]==4.10.0",
    "types-flask-migrate==4.1.0.20250112",
    "types-wtforms==3.2.1.20250401",
    "html5lib==1.1",
    "types-html5lib==1.1.11.20241018",
    "types-pytz==2025.2.0.20250326",
    "boto3==1.37.38",
    "types-boto3==1.37.38",
]

[tool.ruff]
line-length = 120

target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "W",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C90",  # mccabe cyclomatic complexity
    "G",  # flake8-logging-format
]
ignore = []
exclude = [
    ".venv*",
    "__pycache__",
]
mccabe.max-complexity = 12

[tool.mypy]
strict = true
# do not validate subclassing any types
disallow_subclassing_any = false
# enforce type checking on fixtures in conftest but not on all test files
packages = ["app", "tests"]
# Exclude actual test files, but include stuff in __init__ or conftest as they are used more widely
exclude = ['.*test_.*']


[[tool.mypy.overrides]]
module = [
  "flask_wtf", "govuk_frontend_wtf.*", "testcontainers.*", "flask_babel", "sqlalchemy_utils", "flask_talisman.*", "flask_login"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["app.common.data.migrations.versions.*"]
ignore_errors = true

[[tool.mypy.overrides]]
module = ['factory']
implicit_reexport = true

[tool.pytest.ini_options]
env = [
    "FLASK_ENV=unit_test",
    "DATABASE_URL=postgresql+psycopg://overridden-by-fixture"
]
markers = [
    "e2e: Run E2E (browser) tests using playwright",
    "user_domain: For e2e tests, the domain to use when generating emails for the `user_auth` fixture.",

    "authenticate_as: Email address to use for `authenticated_client` fixture; default `test@communities.gov.uk`"
]


filterwarnings = [
    "error",
    "ignore:Could not insert debug toolbar:UserWarning",
    "ignore:cannot collect test class 'TestConfig' because it has a __init__ constructor:pytest.PytestCollectionWarning"
]
