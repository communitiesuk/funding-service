services:
  # use Caddy for SSL termination
  proxy:
    image: caddy:2@sha256:30ccf0cb027e1d06cd6e453c04fc1c8eec665629b22ed69602c14c8a0512ead0
    restart: unless-stopped
    command: "caddy run --config /etc/caddy/Caddyfile"
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .pullpreview/Caddyfile:/etc/caddy/Caddyfile
      - "/data"
    networks:
      - ofs

  db:
    image: postgres:16@sha256:301bcb60b8a3ee4ab7e147932723e3abd1cef53516ce5210b39fd9fe5e3602ae
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres  # pragma: allowlist secret
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ofs

  web:
    build: .
    volumes:
      - .:/app
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    ports:
      - "8080"
    stdin_open: true
    tty: true
    command: >
      bash -c "
        flask db upgrade & \
        gunicorn wsgi:app
      "
    env_file: .env
    environment:
      FLASK_ENV: pullpreview
      DATABASE_HOST: "db"
      DATABASE_PORT: 5432
      DATABASE_NAME: "postgres"
      DATABASE_SECRET: '{"username":"postgres","password":"postgres"}'  # pragma:allowlist secret
      SECRET_KEY: unsafe  # pragma: allowlist secret
      SERVER_NAME: ${PULLPREVIEW_PUBLIC_DNS}
      DEBUG_TB_ENABLED: true
      # Removes the ConfigPanel, which could show sensitive configuration.
      DEBUG_TB_PANELS: |
        [
          "flask_debugtoolbar.panels.versions.VersionDebugPanel",
          "flask_debugtoolbar.panels.timer.TimerDebugPanel",
          "flask_debugtoolbar.panels.headers.HeaderDebugPanel",
          "flask_debugtoolbar.panels.request_vars.RequestVarsDebugPanel",
          "flask_debugtoolbar.panels.template.TemplateDebugPanel",
          "flask_debugtoolbar.panels.sqlalchemy.SQLAlchemyDebugPanel",
          "flask_debugtoolbar.panels.logger.LoggingPanel",
          "flask_debugtoolbar.panels.route_list.RouteListDebugPanel",
          "flask_debugtoolbar.panels.profiler.ProfilerDebugPanel",
          "flask_debugtoolbar.panels.g.GDebugPanel"
        ]
    depends_on:
      - db
    networks:
      - ofs

  sso:
    build: .
    volumes:
      - .:/app
      - /app/node_modules
      - '/app/.venv' # Don't overwrite this directory with local .venv because uv links won't translate in the container
    ports:
      - "8080" # application
    stdin_open: true
    tty: true
    command: >
      bash -c "
      gunicorn wsgi_sso_stub:app
      "
    environment:
      FLASK_APP: "stubs.sso"
      WERKZEUG_DEBUG_PIN: off
    networks:
      ofs:
        aliases:
          - sso.${PULLPREVIEW_PUBLIC_DNS}

volumes:
  postgres_data:

networks:
  ofs:
